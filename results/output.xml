<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20231121 01:40:30.823" rpa="false" schemaversion="4">
<suite id="s1" name="Zhuochuangzhihui" source="/Users/liuyang/work/zhuochuangzhihui">
<suite id="s1-s1" name="Auto" source="/Users/liuyang/work/zhuochuangzhihui/auto">
<suite id="s1-s1-s1" name="Test Running" source="/Users/liuyang/work/zhuochuangzhihui/auto/test_running">
<suite id="s1-s1-s1-s1" name="Dev Err Test" source="/Users/liuyang/work/zhuochuangzhihui/auto/test_running/dev_err_test.robot">
<kw name="Config Best Dev" library="dev_res" type="SETUP">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:40:31.745" endtime="20231121 01:40:31.745"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:40:31.746" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:40:31.903" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:37:40 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:31.746" endtime="20231121 01:40:31.903"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:31.907" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:40:31.903" endtime="20231121 01:40:31.907"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:31.913" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:31.907" endtime="20231121 01:40:31.914"/>
</kw>
<status status="PASS" starttime="20231121 01:40:31.744" endtime="20231121 01:40:31.914"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:31.915" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:31.915" endtime="20231121 01:40:31.915"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:31.919" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:31.916" endtime="20231121 01:40:31.919"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:31.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.919" endtime="20231121 01:40:31.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:31.924" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:31.924" endtime="20231121 01:40:31.924"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:31.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.925" endtime="20231121 01:40:31.926"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:31.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.926" endtime="20231121 01:40:31.927"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:31.927" endtime="20231121 01:40:31.927"/>
</return>
<status status="PASS" starttime="20231121 01:40:31.914" endtime="20231121 01:40:31.927"/>
</kw>
<status status="PASS" starttime="20231121 01:40:31.744" endtime="20231121 01:40:31.928"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:31.929" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:40:31.928" endtime="20231121 01:40:31.929"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:31.931" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:40:31.929" endtime="20231121 01:40:31.931"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:31.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.932" endtime="20231121 01:40:31.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:31.933" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:31.933" endtime="20231121 01:40:31.934"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:31.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.934" endtime="20231121 01:40:31.934"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:31.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.935" endtime="20231121 01:40:31.935"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:31.935" endtime="20231121 01:40:31.936"/>
</return>
<status status="PASS" starttime="20231121 01:40:31.928" endtime="20231121 01:40:31.936"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_set s 1</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:31.937" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231121 01:40:31.937" endtime="20231121 01:40:31.937"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:31.940" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231121 01:40:31.937" endtime="20231121 01:40:31.940"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:31.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.940" endtime="20231121 01:40:31.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:31.965" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:31.964" endtime="20231121 01:40:31.965"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:31.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.965" endtime="20231121 01:40:31.966"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:31.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.966" endtime="20231121 01:40:31.967"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:31.967" endtime="20231121 01:40:31.967"/>
</return>
<status status="PASS" starttime="20231121 01:40:31.936" endtime="20231121 01:40:31.967"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fpc} '-t s' 1 s front_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:31.969" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:31.968" endtime="20231121 01:40:31.969"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:31.971" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:31.969" endtime="20231121 01:40:31.972"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:31.972" endtime="20231121 01:40:32.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.034" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.034" endtime="20231121 01:40:32.035"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.035" endtime="20231121 01:40:32.035"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.036" endtime="20231121 01:40:32.036"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.036" endtime="20231121 01:40:32.037"/>
</return>
<status status="PASS" starttime="20231121 01:40:31.968" endtime="20231121 01:40:32.037"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bpc} '-t s' 1 s back_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.038" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:32.038" endtime="20231121 01:40:32.038"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.042" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:32.039" endtime="20231121 01:40:32.042"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.042" endtime="20231121 01:40:32.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.106" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.106" endtime="20231121 01:40:32.106"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.107" endtime="20231121 01:40:32.107"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.108" endtime="20231121 01:40:32.108"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.109" endtime="20231121 01:40:32.109"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.037" endtime="20231121 01:40:32.109"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fled} '-t s' 1 s front_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.111" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231121 01:40:32.110" endtime="20231121 01:40:32.111"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.114" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231121 01:40:32.111" endtime="20231121 01:40:32.114"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.114" endtime="20231121 01:40:32.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.182" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.182" endtime="20231121 01:40:32.182"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.182" endtime="20231121 01:40:32.183"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.183" endtime="20231121 01:40:32.184"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.184" endtime="20231121 01:40:32.185"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.110" endtime="20231121 01:40:32.185"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bled} '-t s' 1 s back_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.186" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231121 01:40:32.185" endtime="20231121 01:40:32.186"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.189" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231121 01:40:32.186" endtime="20231121 01:40:32.189"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.189" endtime="20231121 01:40:32.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.259" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.259" endtime="20231121 01:40:32.260"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.260" endtime="20231121 01:40:32.260"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.261" endtime="20231121 01:40:32.261"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.262" endtime="20231121 01:40:32.262"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.185" endtime="20231121 01:40:32.262"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fid} '-t s' 1 s front_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.263" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:32.263" endtime="20231121 01:40:32.263"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.266" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:32.263" endtime="20231121 01:40:32.266"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.266" endtime="20231121 01:40:32.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.343" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.342" endtime="20231121 01:40:32.343"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.343" endtime="20231121 01:40:32.344"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.344" endtime="20231121 01:40:32.345"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.345" endtime="20231121 01:40:32.345"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.262" endtime="20231121 01:40:32.346"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bid} '-t s' 1 s back_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.347" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:32.346" endtime="20231121 01:40:32.347"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.350" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:32.347" endtime="20231121 01:40:32.350"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.350" endtime="20231121 01:40:32.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.422" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.421" endtime="20231121 01:40:32.422"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.422" endtime="20231121 01:40:32.423"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.423" endtime="20231121 01:40:32.424"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.424" endtime="20231121 01:40:32.424"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.346" endtime="20231121 01:40:32.424"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.426" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:32.425" endtime="20231121 01:40:32.426"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.429" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:32.426" endtime="20231121 01:40:32.429"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.429" endtime="20231121 01:40:32.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.499" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.499" endtime="20231121 01:40:32.500"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.500" endtime="20231121 01:40:32.501"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.501" endtime="20231121 01:40:32.502"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.502" endtime="20231121 01:40:32.502"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.425" endtime="20231121 01:40:32.502"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fgate} '-t s' 1 s front_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.503" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231121 01:40:32.503" endtime="20231121 01:40:32.504"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.506" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231121 01:40:32.504" endtime="20231121 01:40:32.507"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.507" endtime="20231121 01:40:32.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.580" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.580" endtime="20231121 01:40:32.581"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.581" endtime="20231121 01:40:32.581"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.582" endtime="20231121 01:40:32.582"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.583" endtime="20231121 01:40:32.583"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.502" endtime="20231121 01:40:32.583"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bgate} '-t s' 1 s back_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.584" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231121 01:40:32.584" endtime="20231121 01:40:32.584"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.587" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231121 01:40:32.584" endtime="20231121 01:40:32.587"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.587" endtime="20231121 01:40:32.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.663" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.663" endtime="20231121 01:40:32.664"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.664" endtime="20231121 01:40:32.665"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.665" endtime="20231121 01:40:32.665"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.665" endtime="20231121 01:40:32.666"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.583" endtime="20231121 01:40:32.666"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.667" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:32.667" endtime="20231121 01:40:32.667"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.670" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:32.667" endtime="20231121 01:40:32.670"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.710" level="INFO">è®¾å¤å·²å­å¨</msg>
<msg timestamp="20231121 01:40:32.710" level="INFO">${output} = è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:40:32.670" endtime="20231121 01:40:32.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.711" level="INFO">è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:40:32.711" endtime="20231121 01:40:32.711"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.712" level="INFO">${output} = \xe8\xae\xbe\xe5\xa4\x87\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:40:32.712" endtime="20231121 01:40:32.712"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.713" level="INFO">${output} = 设备已存在
</msg>
<status status="PASS" starttime="20231121 01:40:32.712" endtime="20231121 01:40:32.713"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.713" endtime="20231121 01:40:32.714"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.666" endtime="20231121 01:40:32.714"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_s} '-t s' 1 s scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.715" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231121 01:40:32.715" endtime="20231121 01:40:32.716"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.719" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231121 01:40:32.716" endtime="20231121 01:40:32.719"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.719" endtime="20231121 01:40:32.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.794" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.793" endtime="20231121 01:40:32.794"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.794" endtime="20231121 01:40:32.795"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.795" endtime="20231121 01:40:32.796"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.796" endtime="20231121 01:40:32.796"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.714" endtime="20231121 01:40:32.797"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zczh</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.798" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:32.797" endtime="20231121 01:40:32.798"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.800" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:32.798" endtime="20231121 01:40:32.800"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.801" endtime="20231121 01:40:32.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.802" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.802" endtime="20231121 01:40:32.803"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.803" endtime="20231121 01:40:32.804"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.804" endtime="20231121 01:40:32.805"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.805" endtime="20231121 01:40:32.805"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.797" endtime="20231121 01:40:32.805"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rule</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.806" level="INFO">rule</msg>
<status status="PASS" starttime="20231121 01:40:32.806" endtime="20231121 01:40:32.807"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.809" level="INFO">rule</msg>
<status status="PASS" starttime="20231121 01:40:32.807" endtime="20231121 01:40:32.809"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.810" endtime="20231121 01:40:32.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.811" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.811" endtime="20231121 01:40:32.811"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.812" endtime="20231121 01:40:32.812"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.812" endtime="20231121 01:40:32.813"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.813" endtime="20231121 01:40:32.813"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.805" endtime="20231121 01:40:32.813"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>set_zyzl_plugin http://192.168.0.101:5001 abc</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.814" level="INFO">set_zyzl_plugin http://192.168.0.101:5001 abc</msg>
<status status="PASS" starttime="20231121 01:40:32.814" endtime="20231121 01:40:32.815"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.817" level="INFO">set_zyzl_plugin http://192.168.0.101:5001 abc</msg>
<status status="PASS" starttime="20231121 01:40:32.815" endtime="20231121 01:40:32.818"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.818" endtime="20231121 01:40:32.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.827" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.827" endtime="20231121 01:40:32.827"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.828" endtime="20231121 01:40:32.828"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.829" endtime="20231121 01:40:32.829"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.829" endtime="20231121 01:40:32.830"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.814" endtime="20231121 01:40:32.830"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zczh</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.831" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:32.831" endtime="20231121 01:40:32.831"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.834" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:32.831" endtime="20231121 01:40:32.834"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.834" endtime="20231121 01:40:32.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.836" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:32.836" endtime="20231121 01:40:32.836"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.836" endtime="20231121 01:40:32.837"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:32.837" endtime="20231121 01:40:32.838"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.838" endtime="20231121 01:40:32.838"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.830" endtime="20231121 01:40:32.838"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>bdr</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.839" level="INFO">bdr</msg>
<status status="PASS" starttime="20231121 01:40:32.839" endtime="20231121 01:40:32.840"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.843" level="INFO">bdr</msg>
<status status="PASS" starttime="20231121 01:40:32.840" endtime="20231121 01:40:32.843"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:32.928" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh
rule
set_zyzl_plugin http://192.168.0.101:5001 abc
zczh</msg>
<msg timestamp="20231121 01:40:32.928" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231121 01:40:32.843" endtime="20231121 01:40:32.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:32.929" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh
rule
set_zyzl_plugin http://192.168.0.101:5001 abc
zczh
</msg>
<status status="PASS" starttime="20231121 01:40:32.929" endtime="20231121 01:40:32.929"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.930" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231121 01:40:32.929" endtime="20231121 01:40:32.930"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:32.930" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231121 01:40:32.930" endtime="20231121 01:40:32.930"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:32.930" endtime="20231121 01:40:32.931"/>
</return>
<status status="PASS" starttime="20231121 01:40:32.839" endtime="20231121 01:40:32.931"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>reboot</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:32.935" level="INFO">reboot</msg>
<status status="PASS" starttime="20231121 01:40:32.931" endtime="20231121 01:40:32.935"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:40:32.936" endtime="20231121 01:40:32.937"/>
</kw>
<status status="PASS" starttime="20231121 01:40:32.936" endtime="20231121 01:40:32.937"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:40:34.939" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231121 01:40:32.937" endtime="20231121 01:40:34.940"/>
</kw>
<status status="PASS" starttime="20231121 01:40:31.743" endtime="20231121 01:40:34.940"/>
</kw>
<test id="s1-s1-s1-s1-t1" name="Kill one of Dev Driver" line="9">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:40:34.943" endtime="20231121 01:40:34.944"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:40:34.945" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:40:35.096" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:40:31 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:34.944" endtime="20231121 01:40:35.096"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:35.100" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:40:35.096" endtime="20231121 01:40:35.101"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:35.107" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:35.101" endtime="20231121 01:40:35.108"/>
</kw>
<status status="PASS" starttime="20231121 01:40:34.942" endtime="20231121 01:40:35.108"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<var>${old_result}</var>
<arg>ps -ef | grep mock_ | grep -v grep | wc -l</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20231121 01:40:35.109" level="INFO">Executing command 'ps -ef | grep mock_ | grep -v grep | wc -l'.</msg>
<msg timestamp="20231121 01:40:35.125" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20231121 01:40:35.125" level="INFO">${old_result} = 10</msg>
<status status="PASS" starttime="20231121 01:40:35.108" endtime="20231121 01:40:35.125"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<arg>ps -ef | grep mock_ | grep -v grep | head -n 1 | awk '{print $2}' | xargs kill -9</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20231121 01:40:35.126" level="INFO">Executing command 'ps -ef | grep mock_ | grep -v grep | head -n 1 | awk '{print $2}' | xargs kill -9'.</msg>
<msg timestamp="20231121 01:40:35.153" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20231121 01:40:35.126" endtime="20231121 01:40:35.153"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<var>${new_result}</var>
<arg>ps -ef | grep mock_ | grep -v grep | grep -v '\\[mock_' | wc -l</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20231121 01:40:35.154" level="INFO">Executing command 'ps -ef | grep mock_ | grep -v grep | grep -v '\[mock_' | wc -l'.</msg>
<msg timestamp="20231121 01:40:35.169" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20231121 01:40:35.170" level="INFO">${new_result} = 9</msg>
<status status="PASS" starttime="20231121 01:40:35.154" endtime="20231121 01:40:35.170"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${diff}</var>
<arg>${old_result} - ${new_result}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231121 01:40:35.171" level="INFO">${diff} = 1</msg>
<status status="PASS" starttime="20231121 01:40:35.170" endtime="20231121 01:40:35.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${diff}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 01:40:35.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 01:40:35.172" endtime="20231121 01:40:35.172"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:40:55.175" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20231121 01:40:35.173" endtime="20231121 01:40:55.175"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<var>${new_result}</var>
<arg>ps -ef | grep mock_ | grep -v grep | grep -v '\\[mock_' | wc -l</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20231121 01:40:55.177" level="INFO">Executing command 'ps -ef | grep mock_ | grep -v grep | grep -v '\[mock_' | wc -l'.</msg>
<msg timestamp="20231121 01:40:55.194" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20231121 01:40:55.194" level="INFO">${new_result} = 10</msg>
<status status="PASS" starttime="20231121 01:40:55.176" endtime="20231121 01:40:55.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${new_result}</arg>
<arg>${old_result}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20231121 01:40:55.195" endtime="20231121 01:40:55.196"/>
</kw>
<status status="PASS" starttime="20231121 01:40:34.941" endtime="20231121 01:40:55.196"/>
</test>
<kw name="Clear Dev Config" library="dev_res" type="TEARDOWN">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:40:55.199" endtime="20231121 01:40:55.199"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:40:55.200" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:40:55.352" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:40:35 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:55.200" endtime="20231121 01:40:55.352"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.355" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:40:55.352" endtime="20231121 01:40:55.355"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.361" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:55.356" endtime="20231121 01:40:55.361"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.198" endtime="20231121 01:40:55.361"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.363" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:55.362" endtime="20231121 01:40:55.363"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.366" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:55.363" endtime="20231121 01:40:55.366"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.366" endtime="20231121 01:40:55.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.371" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:55.370" endtime="20231121 01:40:55.371"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.371" endtime="20231121 01:40:55.372"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.372" endtime="20231121 01:40:55.373"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:55.373" endtime="20231121 01:40:55.373"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.362" endtime="20231121 01:40:55.373"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.198" endtime="20231121 01:40:55.374"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.375" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:40:55.374" endtime="20231121 01:40:55.375"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.378" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:40:55.375" endtime="20231121 01:40:55.378"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.378" endtime="20231121 01:40:55.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.380" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:55.379" endtime="20231121 01:40:55.380"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.380" endtime="20231121 01:40:55.381"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.381" endtime="20231121 01:40:55.382"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:55.382" endtime="20231121 01:40:55.382"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.374" endtime="20231121 01:40:55.382"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>clear_device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.383" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231121 01:40:55.383" endtime="20231121 01:40:55.384"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.386" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231121 01:40:55.384" endtime="20231121 01:40:55.386"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.387" endtime="20231121 01:40:55.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.622" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:55.621" endtime="20231121 01:40:55.622"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.622" endtime="20231121 01:40:55.623"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.623" endtime="20231121 01:40:55.624"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:55.624" endtime="20231121 01:40:55.624"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.383" endtime="20231121 01:40:55.624"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:40:55.625" endtime="20231121 01:40:55.626"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.625" endtime="20231121 01:40:55.626"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.197" endtime="20231121 01:40:55.626"/>
</kw>
<status status="PASS" starttime="20231121 01:40:31.464" endtime="20231121 01:40:55.626"/>
</suite>
<suite id="s1-s1-s1-s2" name="Postive Test" source="/Users/liuyang/work/zhuochuangzhihui/auto/test_running/postive_test.robot">
<kw name="Config Best Dev" library="dev_res" type="SETUP">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:40:55.646" endtime="20231121 01:40:55.646"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:40:55.647" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:40:55.795" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:40:55 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:55.646" endtime="20231121 01:40:55.795"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.798" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:40:55.796" endtime="20231121 01:40:55.799"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.804" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:55.799" endtime="20231121 01:40:55.805"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.645" endtime="20231121 01:40:55.805"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.806" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:55.806" endtime="20231121 01:40:55.806"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.809" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:55.806" endtime="20231121 01:40:55.810"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.810" endtime="20231121 01:40:55.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.815" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:55.814" endtime="20231121 01:40:55.815"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.815" endtime="20231121 01:40:55.816"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.816" endtime="20231121 01:40:55.817"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:55.817" endtime="20231121 01:40:55.817"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.805" endtime="20231121 01:40:55.817"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.645" endtime="20231121 01:40:55.818"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.819" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:40:55.818" endtime="20231121 01:40:55.819"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.822" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:40:55.819" endtime="20231121 01:40:55.822"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.822" endtime="20231121 01:40:55.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.824" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:55.823" endtime="20231121 01:40:55.824"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.824" endtime="20231121 01:40:55.825"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.825" endtime="20231121 01:40:55.826"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:55.826" endtime="20231121 01:40:55.826"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.818" endtime="20231121 01:40:55.827"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_set s 1</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.828" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231121 01:40:55.827" endtime="20231121 01:40:55.828"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.831" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231121 01:40:55.828" endtime="20231121 01:40:55.831"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.831" endtime="20231121 01:40:55.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.856" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:55.855" endtime="20231121 01:40:55.856"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.856" endtime="20231121 01:40:55.857"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.857" endtime="20231121 01:40:55.858"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:55.858" endtime="20231121 01:40:55.858"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.827" endtime="20231121 01:40:55.858"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fpc} '-t s' 1 s front_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.860" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:55.859" endtime="20231121 01:40:55.860"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.863" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:55.860" endtime="20231121 01:40:55.863"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:55.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.863" endtime="20231121 01:40:55.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.926" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:55.926" endtime="20231121 01:40:55.926"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.927" endtime="20231121 01:40:55.927"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:55.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.927" endtime="20231121 01:40:55.928"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:55.928" endtime="20231121 01:40:55.929"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.859" endtime="20231121 01:40:55.929"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bpc} '-t s' 1 s back_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:55.930" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:55.929" endtime="20231121 01:40:55.930"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:55.933" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231121 01:40:55.930" endtime="20231121 01:40:55.933"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:55.933" endtime="20231121 01:40:56.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.047" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.047" endtime="20231121 01:40:56.047"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.047" endtime="20231121 01:40:56.048"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.049" endtime="20231121 01:40:56.049"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.049" endtime="20231121 01:40:56.049"/>
</return>
<status status="PASS" starttime="20231121 01:40:55.929" endtime="20231121 01:40:56.050"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fled} '-t s' 1 s front_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.051" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231121 01:40:56.050" endtime="20231121 01:40:56.051"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.055" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231121 01:40:56.051" endtime="20231121 01:40:56.055"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.055" endtime="20231121 01:40:56.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.121" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.120" endtime="20231121 01:40:56.121"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.121" endtime="20231121 01:40:56.122"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.122" endtime="20231121 01:40:56.123"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.123" endtime="20231121 01:40:56.123"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.050" endtime="20231121 01:40:56.123"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bled} '-t s' 1 s back_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.124" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231121 01:40:56.124" endtime="20231121 01:40:56.125"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.128" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231121 01:40:56.125" endtime="20231121 01:40:56.128"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.128" endtime="20231121 01:40:56.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.201" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.200" endtime="20231121 01:40:56.201"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.202" endtime="20231121 01:40:56.202"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.203" endtime="20231121 01:40:56.203"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.204" endtime="20231121 01:40:56.204"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.124" endtime="20231121 01:40:56.204"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fid} '-t s' 1 s front_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.205" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:56.205" endtime="20231121 01:40:56.206"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.209" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:56.206" endtime="20231121 01:40:56.209"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.210" endtime="20231121 01:40:56.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.294" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.293" endtime="20231121 01:40:56.294"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.294" endtime="20231121 01:40:56.295"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.295" endtime="20231121 01:40:56.297"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.297" endtime="20231121 01:40:56.297"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.204" endtime="20231121 01:40:56.297"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bid} '-t s' 1 s back_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.298" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:56.298" endtime="20231121 01:40:56.299"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.302" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231121 01:40:56.299" endtime="20231121 01:40:56.303"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.303" endtime="20231121 01:40:56.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.411" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.410" endtime="20231121 01:40:56.411"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.411" endtime="20231121 01:40:56.412"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.412" endtime="20231121 01:40:56.413"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.413" endtime="20231121 01:40:56.413"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.298" endtime="20231121 01:40:56.414"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.415" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:56.414" endtime="20231121 01:40:56.415"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.419" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:56.416" endtime="20231121 01:40:56.419"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.419" endtime="20231121 01:40:56.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.504" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.504" endtime="20231121 01:40:56.504"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.504" endtime="20231121 01:40:56.505"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.505" endtime="20231121 01:40:56.507"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.507" endtime="20231121 01:40:56.507"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.414" endtime="20231121 01:40:56.508"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fgate} '-t s' 1 s front_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.509" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231121 01:40:56.508" endtime="20231121 01:40:56.509"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.513" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231121 01:40:56.510" endtime="20231121 01:40:56.513"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.513" endtime="20231121 01:40:56.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.596" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.595" endtime="20231121 01:40:56.596"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.596" endtime="20231121 01:40:56.597"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.597" endtime="20231121 01:40:56.598"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.598" endtime="20231121 01:40:56.598"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.508" endtime="20231121 01:40:56.599"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bgate} '-t s' 1 s back_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.600" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231121 01:40:56.599" endtime="20231121 01:40:56.600"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.603" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231121 01:40:56.600" endtime="20231121 01:40:56.603"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.604" endtime="20231121 01:40:56.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.716" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.715" endtime="20231121 01:40:56.717"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.717" endtime="20231121 01:40:56.718"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.718" endtime="20231121 01:40:56.720"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.720" endtime="20231121 01:40:56.721"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.599" endtime="20231121 01:40:56.721"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.723" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:56.722" endtime="20231121 01:40:56.723"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.728" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231121 01:40:56.723" endtime="20231121 01:40:56.728"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.791" level="INFO">è®¾å¤å·²å­å¨</msg>
<msg timestamp="20231121 01:40:56.791" level="INFO">${output} = è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:40:56.729" endtime="20231121 01:40:56.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.792" level="INFO">è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:40:56.792" endtime="20231121 01:40:56.793"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.793" level="INFO">${output} = \xe8\xae\xbe\xe5\xa4\x87\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:40:56.793" endtime="20231121 01:40:56.794"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.794" level="INFO">${output} = 设备已存在
</msg>
<status status="PASS" starttime="20231121 01:40:56.794" endtime="20231121 01:40:56.795"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.795" endtime="20231121 01:40:56.795"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.721" endtime="20231121 01:40:56.795"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_s} '-t s' 1 s scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.796" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231121 01:40:56.796" endtime="20231121 01:40:56.797"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.800" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231121 01:40:56.797" endtime="20231121 01:40:56.800"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.801" endtime="20231121 01:40:56.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.963" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.962" endtime="20231121 01:40:56.963"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.963" endtime="20231121 01:40:56.964"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.964" endtime="20231121 01:40:56.965"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.965" endtime="20231121 01:40:56.965"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.795" endtime="20231121 01:40:56.966"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zczh</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.967" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:56.966" endtime="20231121 01:40:56.967"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.970" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:56.967" endtime="20231121 01:40:56.970"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.971" endtime="20231121 01:40:56.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.972" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.972" endtime="20231121 01:40:56.972"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.973" endtime="20231121 01:40:56.973"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.974" endtime="20231121 01:40:56.975"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.975" endtime="20231121 01:40:56.975"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.966" endtime="20231121 01:40:56.975"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rule</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.976" level="INFO">rule</msg>
<status status="PASS" starttime="20231121 01:40:56.976" endtime="20231121 01:40:56.977"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.980" level="INFO">rule</msg>
<status status="PASS" starttime="20231121 01:40:56.977" endtime="20231121 01:40:56.980"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:56.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.980" endtime="20231121 01:40:56.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.982" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:56.981" endtime="20231121 01:40:56.982"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.982" endtime="20231121 01:40:56.983"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:56.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.983" endtime="20231121 01:40:56.984"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:56.984" endtime="20231121 01:40:56.985"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.975" endtime="20231121 01:40:56.985"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>set_zyzl_plugin http://192.168.0.101:5001 abc</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:56.986" level="INFO">set_zyzl_plugin http://192.168.0.101:5001 abc</msg>
<status status="PASS" starttime="20231121 01:40:56.986" endtime="20231121 01:40:56.986"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:56.989" level="INFO">set_zyzl_plugin http://192.168.0.101:5001 abc</msg>
<status status="PASS" starttime="20231121 01:40:56.986" endtime="20231121 01:40:56.990"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:57.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:56.990" endtime="20231121 01:40:57.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:57.002" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:57.002" endtime="20231121 01:40:57.003"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:57.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:57.003" endtime="20231121 01:40:57.003"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:57.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:57.004" endtime="20231121 01:40:57.005"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:57.005" endtime="20231121 01:40:57.005"/>
</return>
<status status="PASS" starttime="20231121 01:40:56.985" endtime="20231121 01:40:57.005"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zczh</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:57.006" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:57.006" endtime="20231121 01:40:57.007"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:57.010" level="INFO">zczh</msg>
<status status="PASS" starttime="20231121 01:40:57.007" endtime="20231121 01:40:57.010"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:57.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:57.010" endtime="20231121 01:40:57.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:57.012" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:57.012" endtime="20231121 01:40:57.012"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:57.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:57.013" endtime="20231121 01:40:57.013"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:57.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:57.014" endtime="20231121 01:40:57.014"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:57.014" endtime="20231121 01:40:57.015"/>
</return>
<status status="PASS" starttime="20231121 01:40:57.006" endtime="20231121 01:40:57.015"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>bdr</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:57.016" level="INFO">bdr</msg>
<status status="PASS" starttime="20231121 01:40:57.016" endtime="20231121 01:40:57.016"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:57.019" level="INFO">bdr</msg>
<status status="PASS" starttime="20231121 01:40:57.017" endtime="20231121 01:40:57.019"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:57.128" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh
rule
set_zyzl_plugin http://192.168.0.101:5001 abc
zczh</msg>
<msg timestamp="20231121 01:40:57.128" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231121 01:40:57.020" endtime="20231121 01:40:57.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:57.129" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh
rule
set_zyzl_plugin http://192.168.0.101:5001 abc
zczh
</msg>
<status status="PASS" starttime="20231121 01:40:57.128" endtime="20231121 01:40:57.129"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:57.129" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231121 01:40:57.129" endtime="20231121 01:40:57.130"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:57.130" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231121 01:40:57.130" endtime="20231121 01:40:57.130"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:57.131" endtime="20231121 01:40:57.131"/>
</return>
<status status="PASS" starttime="20231121 01:40:57.015" endtime="20231121 01:40:57.131"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>reboot</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:57.135" level="INFO">reboot</msg>
<status status="PASS" starttime="20231121 01:40:57.131" endtime="20231121 01:40:57.135"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:40:57.135" endtime="20231121 01:40:57.136"/>
</kw>
<status status="PASS" starttime="20231121 01:40:57.135" endtime="20231121 01:40:57.136"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:40:59.138" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231121 01:40:57.136" endtime="20231121 01:40:59.139"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.644" endtime="20231121 01:40:59.139"/>
</kw>
<test id="s1-s1-s1-s2-t1" name="Only Scale Full Flow" line="19">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create A Order For Scale</arg>
<arg>AND</arg>
<arg>Start Mock Service</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create A Order For Scale">
<kw name="Del Exist Order">
<kw name="Search Order" library="rest_res">
<var>${plate_result}</var>
<arg>${plate_no}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:40:59.145" endtime="20231121 01:40:59.146"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:40:59.147" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:40:59.310" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:40:55 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:59.146" endtime="20231121 01:40:59.310"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:59.314" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:40:59.311" endtime="20231121 01:40:59.315"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:59.320" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:40:59.315" endtime="20231121 01:40:59.321"/>
</kw>
<status status="PASS" starttime="20231121 01:40:59.145" endtime="20231121 01:40:59.321"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:59.322" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:59.322" endtime="20231121 01:40:59.322"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:59.326" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:40:59.323" endtime="20231121 01:40:59.326"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:59.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:59.327" endtime="20231121 01:40:59.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:59.332" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:59.331" endtime="20231121 01:40:59.332"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:59.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:59.332" endtime="20231121 01:40:59.333"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:59.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:59.333" endtime="20231121 01:40:59.334"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:59.334" endtime="20231121 01:40:59.334"/>
</return>
<status status="PASS" starttime="20231121 01:40:59.321" endtime="20231121 01:40:59.334"/>
</kw>
<status status="PASS" starttime="20231121 01:40:59.144" endtime="20231121 01:40:59.335"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:59.336" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:40:59.335" endtime="20231121 01:40:59.336"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:59.339" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:40:59.336" endtime="20231121 01:40:59.339"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:59.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:59.339" endtime="20231121 01:40:59.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:59.341" level="INFO"/>
<status status="PASS" starttime="20231121 01:40:59.340" endtime="20231121 01:40:59.341"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:59.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:59.341" endtime="20231121 01:40:59.342"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:59.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:40:59.342" endtime="20231121 01:40:59.343"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:59.343" endtime="20231121 01:40:59.343"/>
</return>
<status status="PASS" starttime="20231121 01:40:59.335" endtime="20231121 01:40:59.344"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:59.345" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:40:59.344" endtime="20231121 01:40:59.345"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:59.348" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:40:59.345" endtime="20231121 01:40:59.348"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:40:59.351" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:40:59.351" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:40:59.348" endtime="20231121 01:40:59.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:59.352" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:40:59.352" endtime="20231121 01:40:59.352"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:59.353" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:40:59.353" endtime="20231121 01:40:59.353"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:40:59.354" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:40:59.354" endtime="20231121 01:40:59.354"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:40:59.355" endtime="20231121 01:40:59.355"/>
</return>
<status status="PASS" starttime="20231121 01:40:59.344" endtime="20231121 01:40:59.355"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:40:59.356" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:40:59.356" endtime="20231121 01:40:59.356"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:40:59.359" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:40:59.357" endtime="20231121 01:40:59.359"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:01.622" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:41:01.622" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:40:59.360" endtime="20231121 01:41:01.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.623" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:41:01.623" endtime="20231121 01:41:01.623"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.624" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:01.623" endtime="20231121 01:41:01.624"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.624" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:01.624" endtime="20231121 01:41:01.624"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:01.625" endtime="20231121 01:41:01.625"/>
</return>
<msg timestamp="20231121 01:41:01.625" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:40:59.355" endtime="20231121 01:41:01.625"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:01.626" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:41:01.626" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:01.625" endtime="20231121 01:41:01.626"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:01.627" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:01.626" endtime="20231121 01:41:01.627"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:01.627" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:41:01.627" endtime="20231121 01:41:01.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:01.629" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:41:01.628" endtime="20231121 01:41:01.629"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.630" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:41:01.629" endtime="20231121 01:41:01.630"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:01.635" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:41:01.630" endtime="20231121 01:41:01.636"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:01.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.636" endtime="20231121 01:41:01.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.648" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:01.648" endtime="20231121 01:41:01.648"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.649" endtime="20231121 01:41:01.649"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.649" endtime="20231121 01:41:01.650"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:01.650" endtime="20231121 01:41:01.651"/>
</return>
<status status="PASS" starttime="20231121 01:41:01.629" endtime="20231121 01:41:01.651"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:01.651" endtime="20231121 01:41:01.652"/>
</kw>
<status status="PASS" starttime="20231121 01:41:01.651" endtime="20231121 01:41:01.652"/>
</kw>
<status status="PASS" starttime="20231121 01:40:59.144" endtime="20231121 01:41:01.652"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:41:01.653" endtime="20231121 01:41:01.653"/>
</return>
<msg timestamp="20231121 01:41:01.654" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:41:01.654" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:41:01.653" endtime="20231121 01:41:01.654"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:01.655" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:41:01.654" endtime="20231121 01:41:01.655"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:01.657" level="INFO">${header} = {'token': ''}</msg>
<status status="PASS" starttime="20231121 01:41:01.657" endtime="20231121 01:41:01.657"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:01.715" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:41:01.715" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-o2pKTb9vObPvhbt5Rf9MAQzYv9M"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"3A919B04F52E456083DA7E974A1B33A2"} 
 </msg>
<msg timestamp="20231121 01:41:01.716" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:01.658" endtime="20231121 01:41:01.716"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:01.716" endtime="20231121 01:41:01.717"/>
</return>
<msg timestamp="20231121 01:41:01.717" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:01.656" endtime="20231121 01:41:01.717"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:01.718" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:01.717" endtime="20231121 01:41:01.718"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:01.719" endtime="20231121 01:41:01.719"/>
</return>
<msg timestamp="20231121 01:41:01.719" level="INFO">${token_resp} = 3A919B04F52E456083DA7E974A1B33A2</msg>
<status status="PASS" starttime="20231121 01:41:01.655" endtime="20231121 01:41:01.720"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:41:01.721" level="INFO">${token} = 3A919B04F52E456083DA7E974A1B33A2</msg>
<status status="PASS" starttime="20231121 01:41:01.720" endtime="20231121 01:41:01.721"/>
</kw>
<status status="PASS" starttime="20231121 01:40:59.143" endtime="20231121 01:41:01.721"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:01.722" level="INFO">${search_condition} = {'plate_number': '京A12345', 'driver_phone': '', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231121 01:41:01.721" endtime="20231121 01:41:01.722"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:01.724" level="INFO">${header} = {'token': '3A919B04F52E456083DA7E974A1B33A2'}</msg>
<status status="PASS" starttime="20231121 01:41:01.724" endtime="20231121 01:41:01.724"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:01.751" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '3A919B04F52E456083DA7E974A1B33A2', 'Content-Length': '71', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "\\u4eacA12345", "driver_phone": "", "exp_status": 100}' 
 </msg>
<msg timestamp="20231121 01:41:01.751" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1a-cDYBqJ/Iqmf1jbwRIjDduJ9P1Vo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[]} 
 </msg>
<msg timestamp="20231121 01:41:01.752" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:01.725" endtime="20231121 01:41:01.752"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:01.752" endtime="20231121 01:41:01.752"/>
</return>
<msg timestamp="20231121 01:41:01.752" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:01.723" endtime="20231121 01:41:01.753"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:01.754" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:01.753" endtime="20231121 01:41:01.754"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:01.754" endtime="20231121 01:41:01.755"/>
</return>
<msg timestamp="20231121 01:41:01.755" level="INFO">${search_result} = []</msg>
<status status="PASS" starttime="20231121 01:41:01.723" endtime="20231121 01:41:01.756"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:41:01.756" endtime="20231121 01:41:01.756"/>
</return>
<msg timestamp="20231121 01:41:01.756" level="INFO">${plate_result} = []</msg>
<status status="PASS" starttime="20231121 01:40:59.142" endtime="20231121 01:41:01.757"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${plate_result_length}</var>
<arg>${plate_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231121 01:41:01.757" level="INFO">Length is 0</msg>
<msg timestamp="20231121 01:41:01.758" level="INFO">${plate_result_length} = 0</msg>
<status status="PASS" starttime="20231121 01:41:01.757" endtime="20231121 01:41:01.758"/>
</kw>
<if>
<branch type="IF" condition="${plate_result_length} &gt; 0">
<kw name="Del Order Try" library="rest_res">
<arg>${plate_result}[0][order_number]</arg>
<status status="NOT RUN" starttime="20231121 01:41:01.758" endtime="20231121 01:41:01.759"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:41:01.758" endtime="20231121 01:41:01.759"/>
</branch>
<status status="PASS" starttime="20231121 01:41:01.758" endtime="20231121 01:41:01.759"/>
</if>
<kw name="Search Order" library="rest_res">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:01.761" endtime="20231121 01:41:01.762"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:01.762" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:01.908" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:40:59 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:01.762" endtime="20231121 01:41:01.908"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:01.912" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:01.909" endtime="20231121 01:41:01.912"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:01.918" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:01.913" endtime="20231121 01:41:01.918"/>
</kw>
<status status="PASS" starttime="20231121 01:41:01.761" endtime="20231121 01:41:01.918"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.920" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:01.919" endtime="20231121 01:41:01.920"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:01.923" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:01.920" endtime="20231121 01:41:01.923"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:01.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.924" endtime="20231121 01:41:01.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.929" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:01.928" endtime="20231121 01:41:01.929"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.929" endtime="20231121 01:41:01.929"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.930" endtime="20231121 01:41:01.930"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:01.931" endtime="20231121 01:41:01.931"/>
</return>
<status status="PASS" starttime="20231121 01:41:01.919" endtime="20231121 01:41:01.931"/>
</kw>
<status status="PASS" starttime="20231121 01:41:01.761" endtime="20231121 01:41:01.931"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.932" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:01.932" endtime="20231121 01:41:01.933"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:01.935" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:01.933" endtime="20231121 01:41:01.935"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:01.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.935" endtime="20231121 01:41:01.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.937" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:01.936" endtime="20231121 01:41:01.937"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.937" endtime="20231121 01:41:01.938"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:01.938" endtime="20231121 01:41:01.938"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:01.939" endtime="20231121 01:41:01.939"/>
</return>
<status status="PASS" starttime="20231121 01:41:01.931" endtime="20231121 01:41:01.939"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.940" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:01.940" endtime="20231121 01:41:01.940"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:01.943" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:01.941" endtime="20231121 01:41:01.943"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:01.947" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:41:01.947" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:01.944" endtime="20231121 01:41:01.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.948" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:01.948" endtime="20231121 01:41:01.948"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.949" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:01.948" endtime="20231121 01:41:01.949"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:01.950" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:41:01.949" endtime="20231121 01:41:01.950"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:01.950" endtime="20231121 01:41:01.950"/>
</return>
<status status="PASS" starttime="20231121 01:41:01.939" endtime="20231121 01:41:01.951"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:01.952" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:01.951" endtime="20231121 01:41:01.952"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:01.954" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:01.952" endtime="20231121 01:41:01.955"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:04.233" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:41:04.233" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:01.955" endtime="20231121 01:41:04.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.234" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:41:04.234" endtime="20231121 01:41:04.234"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.235" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:04.234" endtime="20231121 01:41:04.235"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.235" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:04.235" endtime="20231121 01:41:04.235"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:04.236" endtime="20231121 01:41:04.236"/>
</return>
<msg timestamp="20231121 01:41:04.236" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:01.951" endtime="20231121 01:41:04.236"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:04.236" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:41:04.237" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:04.236" endtime="20231121 01:41:04.237"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:04.237" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:04.237" endtime="20231121 01:41:04.237"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:04.238" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:41:04.237" endtime="20231121 01:41:04.238"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:04.239" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:41:04.238" endtime="20231121 01:41:04.239"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.240" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:41:04.240" endtime="20231121 01:41:04.240"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:04.245" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:41:04.240" endtime="20231121 01:41:04.246"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:04.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.246" endtime="20231121 01:41:04.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.258" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:04.257" endtime="20231121 01:41:04.258"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.258" endtime="20231121 01:41:04.259"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.259" endtime="20231121 01:41:04.260"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:04.260" endtime="20231121 01:41:04.260"/>
</return>
<status status="PASS" starttime="20231121 01:41:04.239" endtime="20231121 01:41:04.260"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:04.261" endtime="20231121 01:41:04.261"/>
</kw>
<status status="PASS" starttime="20231121 01:41:04.261" endtime="20231121 01:41:04.262"/>
</kw>
<status status="PASS" starttime="20231121 01:41:01.760" endtime="20231121 01:41:04.262"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:41:04.262" endtime="20231121 01:41:04.263"/>
</return>
<msg timestamp="20231121 01:41:04.263" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:41:04.263" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:41:04.262" endtime="20231121 01:41:04.264"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:04.264" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:41:04.264" endtime="20231121 01:41:04.265"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:04.266" level="INFO">${header} = {'token': '3A919B04F52E456083DA7E974A1B33A2'}</msg>
<status status="PASS" starttime="20231121 01:41:04.266" endtime="20231121 01:41:04.267"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:04.296" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '3A919B04F52E456083DA7E974A1B33A2', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:41:04.296" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-yF3ti4uQ0rkBa72JRx38OT8XOqo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"592B77F398BD47C087569F5036F63AE0"} 
 </msg>
<msg timestamp="20231121 01:41:04.296" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:04.267" endtime="20231121 01:41:04.296"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:04.297" endtime="20231121 01:41:04.297"/>
</return>
<msg timestamp="20231121 01:41:04.297" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:04.265" endtime="20231121 01:41:04.297"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:04.298" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:04.297" endtime="20231121 01:41:04.299"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:04.299" endtime="20231121 01:41:04.299"/>
</return>
<msg timestamp="20231121 01:41:04.300" level="INFO">${token_resp} = 592B77F398BD47C087569F5036F63AE0</msg>
<status status="PASS" starttime="20231121 01:41:04.265" endtime="20231121 01:41:04.300"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:41:04.301" level="INFO">${token} = 592B77F398BD47C087569F5036F63AE0</msg>
<status status="PASS" starttime="20231121 01:41:04.301" endtime="20231121 01:41:04.302"/>
</kw>
<status status="PASS" starttime="20231121 01:41:01.760" endtime="20231121 01:41:04.302"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:04.303" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231121 01:41:04.302" endtime="20231121 01:41:04.303"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:04.306" level="INFO">${header} = {'token': '592B77F398BD47C087569F5036F63AE0'}</msg>
<status status="PASS" starttime="20231121 01:41:04.305" endtime="20231121 01:41:04.306"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:04.331" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '592B77F398BD47C087569F5036F63AE0', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231121 01:41:04.331" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1a-cDYBqJ/Iqmf1jbwRIjDduJ9P1Vo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[]} 
 </msg>
<msg timestamp="20231121 01:41:04.331" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:04.307" endtime="20231121 01:41:04.332"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:04.332" endtime="20231121 01:41:04.332"/>
</return>
<msg timestamp="20231121 01:41:04.333" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:04.304" endtime="20231121 01:41:04.333"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:04.334" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:04.333" endtime="20231121 01:41:04.334"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:04.335" endtime="20231121 01:41:04.335"/>
</return>
<msg timestamp="20231121 01:41:04.335" level="INFO">${search_result} = []</msg>
<status status="PASS" starttime="20231121 01:41:04.303" endtime="20231121 01:41:04.336"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:41:04.336" endtime="20231121 01:41:04.336"/>
</return>
<msg timestamp="20231121 01:41:04.337" level="INFO">${driver_result} = []</msg>
<status status="PASS" starttime="20231121 01:41:01.759" endtime="20231121 01:41:04.337"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${driver_result_length}</var>
<arg>${driver_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231121 01:41:04.337" level="INFO">Length is 0</msg>
<msg timestamp="20231121 01:41:04.338" level="INFO">${driver_result_length} = 0</msg>
<status status="PASS" starttime="20231121 01:41:04.337" endtime="20231121 01:41:04.338"/>
</kw>
<if>
<branch type="IF" condition="${driver_result_length} &gt; 0">
<kw name="Del Order Try" library="rest_res">
<arg>${plate_result}[0][order_number]</arg>
<status status="NOT RUN" starttime="20231121 01:41:04.338" endtime="20231121 01:41:04.339"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:41:04.338" endtime="20231121 01:41:04.339"/>
</branch>
<status status="PASS" starttime="20231121 01:41:04.338" endtime="20231121 01:41:04.339"/>
</if>
<status status="PASS" starttime="20231121 01:40:59.142" endtime="20231121 01:41:04.339"/>
</kw>
<kw name="Add Order Common" library="rest_res">
<arg>plate_no=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>driver_id=${driver_id}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:04.342" endtime="20231121 01:41:04.343"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:04.343" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:04.485" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:01 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:04.343" endtime="20231121 01:41:04.485"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:04.489" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:04.485" endtime="20231121 01:41:04.489"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:04.496" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:04.490" endtime="20231121 01:41:04.496"/>
</kw>
<status status="PASS" starttime="20231121 01:41:04.342" endtime="20231121 01:41:04.497"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.498" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:04.497" endtime="20231121 01:41:04.498"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:04.501" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:04.498" endtime="20231121 01:41:04.502"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:04.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.502" endtime="20231121 01:41:04.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.507" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:04.507" endtime="20231121 01:41:04.508"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.508" endtime="20231121 01:41:04.509"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.509" endtime="20231121 01:41:04.510"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:04.510" endtime="20231121 01:41:04.511"/>
</return>
<status status="PASS" starttime="20231121 01:41:04.497" endtime="20231121 01:41:04.511"/>
</kw>
<status status="PASS" starttime="20231121 01:41:04.341" endtime="20231121 01:41:04.511"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.512" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:04.512" endtime="20231121 01:41:04.512"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:04.515" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:04.512" endtime="20231121 01:41:04.515"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:04.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.515" endtime="20231121 01:41:04.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.517" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:04.517" endtime="20231121 01:41:04.517"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.517" endtime="20231121 01:41:04.518"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:04.518" endtime="20231121 01:41:04.519"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:04.519" endtime="20231121 01:41:04.519"/>
</return>
<status status="PASS" starttime="20231121 01:41:04.511" endtime="20231121 01:41:04.520"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.521" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:04.520" endtime="20231121 01:41:04.521"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:04.524" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:04.521" endtime="20231121 01:41:04.524"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:04.527" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:41:04.527" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:04.524" endtime="20231121 01:41:04.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.528" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:04.528" endtime="20231121 01:41:04.528"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.529" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:04.529" endtime="20231121 01:41:04.529"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:04.530" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:41:04.530" endtime="20231121 01:41:04.530"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:04.530" endtime="20231121 01:41:04.531"/>
</return>
<status status="PASS" starttime="20231121 01:41:04.520" endtime="20231121 01:41:04.531"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:04.532" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:04.532" endtime="20231121 01:41:04.532"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:04.535" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:04.532" endtime="20231121 01:41:04.535"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:06.841" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:41:06.842" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:04.535" endtime="20231121 01:41:06.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:06.843" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:41:06.842" endtime="20231121 01:41:06.844"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:06.845" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:06.844" endtime="20231121 01:41:06.845"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:06.846" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:06.845" endtime="20231121 01:41:06.847"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:06.847" endtime="20231121 01:41:06.847"/>
</return>
<msg timestamp="20231121 01:41:06.847" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:04.531" endtime="20231121 01:41:06.847"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:06.848" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:41:06.848" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:06.848" endtime="20231121 01:41:06.849"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:06.850" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:06.849" endtime="20231121 01:41:06.851"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:06.852" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:41:06.851" endtime="20231121 01:41:06.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:06.854" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:41:06.853" endtime="20231121 01:41:06.855"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:06.856" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:41:06.856" endtime="20231121 01:41:06.856"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:06.861" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:41:06.856" endtime="20231121 01:41:06.861"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:06.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:06.861" endtime="20231121 01:41:06.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:06.872" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:06.872" endtime="20231121 01:41:06.873"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:06.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:06.873" endtime="20231121 01:41:06.874"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:06.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:06.874" endtime="20231121 01:41:06.875"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:06.875" endtime="20231121 01:41:06.875"/>
</return>
<status status="PASS" starttime="20231121 01:41:06.855" endtime="20231121 01:41:06.875"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:06.876" endtime="20231121 01:41:06.877"/>
</kw>
<status status="PASS" starttime="20231121 01:41:06.876" endtime="20231121 01:41:06.877"/>
</kw>
<status status="PASS" starttime="20231121 01:41:04.341" endtime="20231121 01:41:06.877"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:41:06.878" endtime="20231121 01:41:06.878"/>
</return>
<msg timestamp="20231121 01:41:06.879" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:41:06.879" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:41:06.877" endtime="20231121 01:41:06.879"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:06.880" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:41:06.879" endtime="20231121 01:41:06.880"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:06.883" level="INFO">${header} = {'token': '592B77F398BD47C087569F5036F63AE0'}</msg>
<status status="PASS" starttime="20231121 01:41:06.882" endtime="20231121 01:41:06.883"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:06.915" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '592B77F398BD47C087569F5036F63AE0', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:41:06.915" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-zSB+rWF/SCevS3LiSXV3WE6+NNQ"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"893263493A1C4995AFBEC975F0189AF8"} 
 </msg>
<msg timestamp="20231121 01:41:06.915" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:06.883" endtime="20231121 01:41:06.915"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:06.916" endtime="20231121 01:41:06.916"/>
</return>
<msg timestamp="20231121 01:41:06.916" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:06.881" endtime="20231121 01:41:06.916"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:06.918" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:06.917" endtime="20231121 01:41:06.918"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:06.918" endtime="20231121 01:41:06.918"/>
</return>
<msg timestamp="20231121 01:41:06.919" level="INFO">${token_resp} = 893263493A1C4995AFBEC975F0189AF8</msg>
<status status="PASS" starttime="20231121 01:41:06.881" endtime="20231121 01:41:06.919"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:41:06.920" level="INFO">${token} = 893263493A1C4995AFBEC975F0189AF8</msg>
<status status="PASS" starttime="20231121 01:41:06.920" endtime="20231121 01:41:06.920"/>
</kw>
<status status="PASS" starttime="20231121 01:41:04.340" endtime="20231121 01:41:06.921"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${order_data}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<arg>driver_id=${driver_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:06.922" level="INFO">${order_data} = {'plate_number': '京A12345', 'driver_phone': '18811111111', 'company_name': '京东', 'stuff_name': 'LNG', 'driver_id': '123456789012345678'}</msg>
<status status="PASS" starttime="20231121 01:41:06.921" endtime="20231121 01:41:06.922"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/add</arg>
<arg>${order_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:06.924" level="INFO">${header} = {'token': '893263493A1C4995AFBEC975F0189AF8'}</msg>
<status status="PASS" starttime="20231121 01:41:06.923" endtime="20231121 01:41:06.924"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:06.988" level="INFO">POST Request : url=http://localhost:31700/api/order/add 
 path_url=/api/order/add 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '893263493A1C4995AFBEC975F0189AF8', 'Content-Length': '151', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "\\u4eacA12345", "driver_phone": "18811111111", "company_name": "\\u4eac\\u4e1c", "stuff_name": "LNG", "driver_id": "123456789012345678"}' 
 </msg>
<msg timestamp="20231121 01:41:06.988" level="INFO">POST Response : url=http://localhost:31700/api/order/add 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:41:06.989" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:06.924" endtime="20231121 01:41:06.989"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:06.989" endtime="20231121 01:41:06.989"/>
</return>
<msg timestamp="20231121 01:41:06.990" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:06.923" endtime="20231121 01:41:06.990"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:06.992" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:06.990" endtime="20231121 01:41:06.992"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:06.992" endtime="20231121 01:41:06.992"/>
</return>
<status status="PASS" starttime="20231121 01:41:06.922" endtime="20231121 01:41:06.993"/>
</kw>
<status status="PASS" starttime="20231121 01:41:04.339" endtime="20231121 01:41:06.994"/>
</kw>
<kw name="Search Order" library="rest_res">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:06.997" endtime="20231121 01:41:06.997"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:06.998" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:07.145" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:04 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:06.998" endtime="20231121 01:41:07.145"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:07.148" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:07.145" endtime="20231121 01:41:07.148"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:07.154" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:07.148" endtime="20231121 01:41:07.154"/>
</kw>
<status status="PASS" starttime="20231121 01:41:06.996" endtime="20231121 01:41:07.154"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:07.156" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:07.155" endtime="20231121 01:41:07.156"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:07.159" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:07.156" endtime="20231121 01:41:07.159"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:07.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:07.159" endtime="20231121 01:41:07.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:07.165" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:07.164" endtime="20231121 01:41:07.165"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:07.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:07.165" endtime="20231121 01:41:07.166"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:07.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:07.166" endtime="20231121 01:41:07.167"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:07.167" endtime="20231121 01:41:07.167"/>
</return>
<status status="PASS" starttime="20231121 01:41:07.155" endtime="20231121 01:41:07.167"/>
</kw>
<status status="PASS" starttime="20231121 01:41:06.996" endtime="20231121 01:41:07.168"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:07.169" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:07.168" endtime="20231121 01:41:07.169"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:07.172" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:07.169" endtime="20231121 01:41:07.172"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:07.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:07.172" endtime="20231121 01:41:07.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:07.175" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:07.174" endtime="20231121 01:41:07.175"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:07.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:07.176" endtime="20231121 01:41:07.177"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:07.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:07.178" endtime="20231121 01:41:07.179"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:07.179" endtime="20231121 01:41:07.179"/>
</return>
<status status="PASS" starttime="20231121 01:41:07.168" endtime="20231121 01:41:07.180"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:07.182" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:07.181" endtime="20231121 01:41:07.182"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:07.188" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:07.182" endtime="20231121 01:41:07.189"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:07.195" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:41:07.196" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:07.189" endtime="20231121 01:41:07.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:07.197" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:07.196" endtime="20231121 01:41:07.197"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:07.198" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:07.198" endtime="20231121 01:41:07.198"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:07.200" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:41:07.199" endtime="20231121 01:41:07.200"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:07.200" endtime="20231121 01:41:07.201"/>
</return>
<status status="PASS" starttime="20231121 01:41:07.180" endtime="20231121 01:41:07.201"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:07.202" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:07.202" endtime="20231121 01:41:07.203"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:07.207" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:07.203" endtime="20231121 01:41:07.208"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:09.545" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:41:09.546" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:07.208" endtime="20231121 01:41:09.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.546" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:41:09.546" endtime="20231121 01:41:09.546"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.547" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:09.547" endtime="20231121 01:41:09.547"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.548" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:09.547" endtime="20231121 01:41:09.548"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:09.548" endtime="20231121 01:41:09.548"/>
</return>
<msg timestamp="20231121 01:41:09.548" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:07.201" endtime="20231121 01:41:09.548"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:09.549" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:41:09.549" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:09.548" endtime="20231121 01:41:09.549"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:09.549" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:09.549" endtime="20231121 01:41:09.550"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:09.550" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:41:09.550" endtime="20231121 01:41:09.552"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:09.555" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:41:09.553" endtime="20231121 01:41:09.555"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.556" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:41:09.556" endtime="20231121 01:41:09.557"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:09.562" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:41:09.558" endtime="20231121 01:41:09.563"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:09.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.563" endtime="20231121 01:41:09.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.573" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:09.573" endtime="20231121 01:41:09.574"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.574" endtime="20231121 01:41:09.574"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.575" endtime="20231121 01:41:09.575"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:09.575" endtime="20231121 01:41:09.576"/>
</return>
<status status="PASS" starttime="20231121 01:41:09.555" endtime="20231121 01:41:09.576"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:09.577" endtime="20231121 01:41:09.577"/>
</kw>
<status status="PASS" starttime="20231121 01:41:09.576" endtime="20231121 01:41:09.577"/>
</kw>
<status status="PASS" starttime="20231121 01:41:06.995" endtime="20231121 01:41:09.578"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:41:09.578" endtime="20231121 01:41:09.578"/>
</return>
<msg timestamp="20231121 01:41:09.579" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:41:09.579" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:41:09.578" endtime="20231121 01:41:09.579"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:09.580" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:41:09.579" endtime="20231121 01:41:09.580"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:09.582" level="INFO">${header} = {'token': '893263493A1C4995AFBEC975F0189AF8'}</msg>
<status status="PASS" starttime="20231121 01:41:09.582" endtime="20231121 01:41:09.583"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:09.612" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '893263493A1C4995AFBEC975F0189AF8', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:41:09.612" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-/oPbk5ashodSTlMKxBHaN849zcM"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"9188BC188A6D4F09AB6B3D39554D480B"} 
 </msg>
<msg timestamp="20231121 01:41:09.612" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:09.583" endtime="20231121 01:41:09.612"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:09.613" endtime="20231121 01:41:09.613"/>
</return>
<msg timestamp="20231121 01:41:09.613" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:09.581" endtime="20231121 01:41:09.613"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:09.615" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:09.614" endtime="20231121 01:41:09.615"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:09.615" endtime="20231121 01:41:09.615"/>
</return>
<msg timestamp="20231121 01:41:09.616" level="INFO">${token_resp} = 9188BC188A6D4F09AB6B3D39554D480B</msg>
<status status="PASS" starttime="20231121 01:41:09.580" endtime="20231121 01:41:09.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:41:09.617" level="INFO">${token} = 9188BC188A6D4F09AB6B3D39554D480B</msg>
<status status="PASS" starttime="20231121 01:41:09.616" endtime="20231121 01:41:09.617"/>
</kw>
<status status="PASS" starttime="20231121 01:41:06.994" endtime="20231121 01:41:09.617"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:09.619" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231121 01:41:09.618" endtime="20231121 01:41:09.619"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:09.621" level="INFO">${header} = {'token': '9188BC188A6D4F09AB6B3D39554D480B'}</msg>
<status status="PASS" starttime="20231121 01:41:09.620" endtime="20231121 01:41:09.621"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:09.648" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '9188BC188A6D4F09AB6B3D39554D480B', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231121 01:41:09.648" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '558', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"22e-GK9u7eKKHVY2Xo4XR+GdTqqfPek"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[{"id":33,"order_number":"170050206633","plate_number":"京A12345","back_plate_number":"","driver_name":"","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":0,"m_weight":0,"enter_weight":0,"reg_info":{"operator_name":"","operator_time":""},"call_info":{"operator_name":"","operator_time":""},"confirm_info":{"operator_name":"","operator_time":""},"seal_no":"","history_records":[],"order_attachs":[],"p_time":"","m_time":"","is_sale":false,"status":1,"company_name":"京东","stuff_from":""}]} 
 </msg>
<msg timestamp="20231121 01:41:09.648" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:09.621" endtime="20231121 01:41:09.648"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:09.648" endtime="20231121 01:41:09.649"/>
</return>
<msg timestamp="20231121 01:41:09.649" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:09.620" endtime="20231121 01:41:09.649"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:09.650" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:09.649" endtime="20231121 01:41:09.651"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:09.651" endtime="20231121 01:41:09.651"/>
</return>
<msg timestamp="20231121 01:41:09.652" level="INFO">${search_result} = [{'id': 33, 'order_number': '170050206633', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231121 01:41:09.619" endtime="20231121 01:41:09.652"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:41:09.652" endtime="20231121 01:41:09.652"/>
</return>
<msg timestamp="20231121 01:41:09.653" level="INFO">${driver_result} = [{'id': 33, 'order_number': '170050206633', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231121 01:41:06.994" endtime="20231121 01:41:09.653"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${order_number}</arg>
<arg>${driver_result}[0][order_number]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:41:09.654" level="INFO">${order_number} = 170050206633</msg>
<status status="PASS" starttime="20231121 01:41:09.653" endtime="20231121 01:41:09.654"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_fgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:09.656" endtime="20231121 01:41:09.657"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:09.658" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:09.803" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:07 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:09.657" endtime="20231121 01:41:09.803"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:09.808" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:09.803" endtime="20231121 01:41:09.808"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:09.816" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:09.808" endtime="20231121 01:41:09.817"/>
</kw>
<status status="PASS" starttime="20231121 01:41:09.655" endtime="20231121 01:41:09.817"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.818" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:09.818" endtime="20231121 01:41:09.818"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:09.821" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:09.818" endtime="20231121 01:41:09.821"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:09.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.821" endtime="20231121 01:41:09.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.827" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:09.827" endtime="20231121 01:41:09.828"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.828" endtime="20231121 01:41:09.829"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.829" endtime="20231121 01:41:09.830"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:09.830" endtime="20231121 01:41:09.830"/>
</return>
<status status="PASS" starttime="20231121 01:41:09.817" endtime="20231121 01:41:09.830"/>
</kw>
<status status="PASS" starttime="20231121 01:41:09.655" endtime="20231121 01:41:09.830"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.831" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:09.831" endtime="20231121 01:41:09.832"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:09.834" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:09.832" endtime="20231121 01:41:09.834"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:09.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.834" endtime="20231121 01:41:09.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.836" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:09.836" endtime="20231121 01:41:09.836"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.836" endtime="20231121 01:41:09.837"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:09.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:09.837" endtime="20231121 01:41:09.838"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:09.838" endtime="20231121 01:41:09.838"/>
</return>
<status status="PASS" starttime="20231121 01:41:09.831" endtime="20231121 01:41:09.838"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:09.839" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:09.839" endtime="20231121 01:41:09.840"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:09.842" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:09.840" endtime="20231121 01:41:09.843"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.450" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:10.451" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:09.843" endtime="20231121 01:41:10.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.451" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:10.451" endtime="20231121 01:41:10.451"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.452" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:10.452" endtime="20231121 01:41:10.452"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.453" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:10.452" endtime="20231121 01:41:10.453"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:10.453" endtime="20231121 01:41:10.453"/>
</return>
<msg timestamp="20231121 01:41:10.453" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:09.839" endtime="20231121 01:41:10.453"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:10.454" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:10.454" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:41:10.454" endtime="20231121 01:41:10.454"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:10.455" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:41:10.454" endtime="20231121 01:41:10.455"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:10.456" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231121 01:41:10.455" endtime="20231121 01:41:10.456"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:10.457" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231121 01:41:10.456" endtime="20231121 01:41:10.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:10.458" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:41:10.457" endtime="20231121 01:41:10.458"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:10.460" endtime="20231121 01:41:10.460"/>
</kw>
<status status="PASS" starttime="20231121 01:41:10.458" endtime="20231121 01:41:10.461"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:10.461" endtime="20231121 01:41:10.462"/>
</return>
<msg timestamp="20231121 01:41:10.462" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:41:09.655" endtime="20231121 01:41:10.462"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:10.464" endtime="20231121 01:41:10.465"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:10.466" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:10.611" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:09 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:10.465" endtime="20231121 01:41:10.612"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.616" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:10.612" endtime="20231121 01:41:10.616"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.623" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:10.617" endtime="20231121 01:41:10.623"/>
</kw>
<status status="PASS" starttime="20231121 01:41:10.463" endtime="20231121 01:41:10.623"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.624" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:10.624" endtime="20231121 01:41:10.625"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.629" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:10.625" endtime="20231121 01:41:10.629"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.629" endtime="20231121 01:41:10.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.634" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:10.634" endtime="20231121 01:41:10.635"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.635" endtime="20231121 01:41:10.636"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.636" endtime="20231121 01:41:10.637"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:10.637" endtime="20231121 01:41:10.637"/>
</return>
<status status="PASS" starttime="20231121 01:41:10.624" endtime="20231121 01:41:10.637"/>
</kw>
<status status="PASS" starttime="20231121 01:41:10.463" endtime="20231121 01:41:10.637"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.638" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:10.638" endtime="20231121 01:41:10.639"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.641" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:10.639" endtime="20231121 01:41:10.641"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.642" endtime="20231121 01:41:10.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.644" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:10.643" endtime="20231121 01:41:10.644"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.644" endtime="20231121 01:41:10.645"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.645" endtime="20231121 01:41:10.645"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:10.646" endtime="20231121 01:41:10.646"/>
</return>
<status status="PASS" starttime="20231121 01:41:10.638" endtime="20231121 01:41:10.646"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.647" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:41:10.647" endtime="20231121 01:41:10.647"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.650" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:41:10.648" endtime="20231121 01:41:10.650"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.651" endtime="20231121 01:41:10.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.657" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:10.657" endtime="20231121 01:41:10.657"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.658" endtime="20231121 01:41:10.658"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.658" endtime="20231121 01:41:10.659"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:10.659" endtime="20231121 01:41:10.660"/>
</return>
<status status="PASS" starttime="20231121 01:41:10.646" endtime="20231121 01:41:10.660"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:10.660" endtime="20231121 01:41:10.661"/>
</kw>
<status status="PASS" starttime="20231121 01:41:10.660" endtime="20231121 01:41:10.661"/>
</kw>
<status status="PASS" starttime="20231121 01:41:09.654" endtime="20231121 01:41:10.661"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_bgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:10.664" endtime="20231121 01:41:10.664"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:10.665" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:10.806" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:10 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:10.665" endtime="20231121 01:41:10.806"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.810" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:10.806" endtime="20231121 01:41:10.811"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.818" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:10.811" endtime="20231121 01:41:10.818"/>
</kw>
<status status="PASS" starttime="20231121 01:41:10.663" endtime="20231121 01:41:10.819"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.820" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:10.819" endtime="20231121 01:41:10.820"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.822" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:10.820" endtime="20231121 01:41:10.823"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.823" endtime="20231121 01:41:10.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.828" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:10.828" endtime="20231121 01:41:10.828"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.829" endtime="20231121 01:41:10.829"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.829" endtime="20231121 01:41:10.830"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:10.830" endtime="20231121 01:41:10.831"/>
</return>
<status status="PASS" starttime="20231121 01:41:10.819" endtime="20231121 01:41:10.831"/>
</kw>
<status status="PASS" starttime="20231121 01:41:10.663" endtime="20231121 01:41:10.831"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.832" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:10.832" endtime="20231121 01:41:10.832"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.835" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:10.832" endtime="20231121 01:41:10.835"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:10.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.835" endtime="20231121 01:41:10.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.837" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:10.836" endtime="20231121 01:41:10.837"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.837" endtime="20231121 01:41:10.838"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:10.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:10.838" endtime="20231121 01:41:10.839"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:10.839" endtime="20231121 01:41:10.839"/>
</return>
<status status="PASS" starttime="20231121 01:41:10.831" endtime="20231121 01:41:10.839"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:10.841" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:10.840" endtime="20231121 01:41:10.841"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:10.843" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:10.841" endtime="20231121 01:41:10.844"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:11.429" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:11.429" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:10.844" endtime="20231121 01:41:11.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:11.430" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:11.430" endtime="20231121 01:41:11.431"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.431" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:11.431" endtime="20231121 01:41:11.432"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.433" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:11.432" endtime="20231121 01:41:11.433"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:11.433" endtime="20231121 01:41:11.433"/>
</return>
<msg timestamp="20231121 01:41:11.433" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:10.840" endtime="20231121 01:41:11.433"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:11.434" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:11.434" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:41:11.434" endtime="20231121 01:41:11.434"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:11.435" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:41:11.435" endtime="20231121 01:41:11.435"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:11.436" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231121 01:41:11.436" endtime="20231121 01:41:11.437"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:11.438" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231121 01:41:11.437" endtime="20231121 01:41:11.438"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:11.440" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:41:11.439" endtime="20231121 01:41:11.440"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:11.440" endtime="20231121 01:41:11.441"/>
</kw>
<status status="PASS" starttime="20231121 01:41:11.440" endtime="20231121 01:41:11.441"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:11.442" endtime="20231121 01:41:11.442"/>
</return>
<msg timestamp="20231121 01:41:11.442" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:41:10.662" endtime="20231121 01:41:11.442"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:11.444" endtime="20231121 01:41:11.445"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:11.446" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:11.589" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:10 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:11.445" endtime="20231121 01:41:11.590"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:11.595" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:11.590" endtime="20231121 01:41:11.595"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:11.603" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:11.596" endtime="20231121 01:41:11.604"/>
</kw>
<status status="PASS" starttime="20231121 01:41:11.443" endtime="20231121 01:41:11.604"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:11.605" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:11.605" endtime="20231121 01:41:11.605"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:11.608" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:11.606" endtime="20231121 01:41:11.608"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:11.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.609" endtime="20231121 01:41:11.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:11.614" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:11.613" endtime="20231121 01:41:11.614"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.614" endtime="20231121 01:41:11.615"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.615" endtime="20231121 01:41:11.615"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:11.616" endtime="20231121 01:41:11.616"/>
</return>
<status status="PASS" starttime="20231121 01:41:11.604" endtime="20231121 01:41:11.616"/>
</kw>
<status status="PASS" starttime="20231121 01:41:11.443" endtime="20231121 01:41:11.616"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:11.618" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:11.617" endtime="20231121 01:41:11.618"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:11.621" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:11.618" endtime="20231121 01:41:11.621"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:11.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.621" endtime="20231121 01:41:11.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:11.623" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:11.622" endtime="20231121 01:41:11.623"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.623" endtime="20231121 01:41:11.624"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.624" endtime="20231121 01:41:11.625"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:11.625" endtime="20231121 01:41:11.625"/>
</return>
<status status="PASS" starttime="20231121 01:41:11.617" endtime="20231121 01:41:11.625"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:11.627" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:41:11.626" endtime="20231121 01:41:11.627"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:11.630" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:41:11.627" endtime="20231121 01:41:11.630"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:11.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.630" endtime="20231121 01:41:11.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:11.637" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:11.637" endtime="20231121 01:41:11.637"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.638" endtime="20231121 01:41:11.638"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:11.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:11.639" endtime="20231121 01:41:11.639"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:11.639" endtime="20231121 01:41:11.639"/>
</return>
<status status="PASS" starttime="20231121 01:41:11.626" endtime="20231121 01:41:11.640"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:11.640" endtime="20231121 01:41:11.641"/>
</kw>
<status status="PASS" starttime="20231121 01:41:11.640" endtime="20231121 01:41:11.641"/>
</kw>
<status status="PASS" starttime="20231121 01:41:10.662" endtime="20231121 01:41:11.641"/>
</kw>
<status status="PASS" starttime="20231121 01:40:59.141" endtime="20231121 01:41:11.642"/>
</kw>
<kw name="Start Mock Service" library="rest_res">
<kw name="Start Process" library="Process">
<arg>python auto/library/mock_server.py</arg>
<arg>shell=True</arg>
<arg>alias=mock_server_process</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20231121 01:41:11.643" level="INFO">Starting process:
python auto/library/mock_server.py</msg>
<status status="PASS" starttime="20231121 01:41:11.642" endtime="20231121 01:41:11.651"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:41:13.654" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231121 01:41:11.652" endtime="20231121 01:41:13.655"/>
</kw>
<status status="PASS" starttime="20231121 01:41:11.642" endtime="20231121 01:41:13.655"/>
</kw>
<status status="PASS" starttime="20231121 01:40:59.141" endtime="20231121 01:41:13.656"/>
</kw>
<kw name="Check In Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${check_in_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_check_in=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:13.660" level="INFO">${check_in_req} = {'order_number': '170050206633', 'is_check_in': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231121 01:41:13.658" endtime="20231121 01:41:13.660"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/check_in</arg>
<arg>${check_in_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:13.663" level="INFO">${header} = {'token': '9188BC188A6D4F09AB6B3D39554D480B'}</msg>
<status status="PASS" starttime="20231121 01:41:13.662" endtime="20231121 01:41:13.663"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:13.702" level="INFO">POST Request : url=http://localhost:31700/api/order/check_in 
 path_url=/api/order/check_in 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '9188BC188A6D4F09AB6B3D39554D480B', 'Content-Length': '72', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050206633", "is_check_in": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231121 01:41:13.703" level="INFO">POST Response : url=http://localhost:31700/api/order/check_in 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:41:13.703" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:13.663" endtime="20231121 01:41:13.704"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:13.704" endtime="20231121 01:41:13.704"/>
</return>
<msg timestamp="20231121 01:41:13.705" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:13.661" endtime="20231121 01:41:13.705"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:13.706" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:13.705" endtime="20231121 01:41:13.707"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:13.707" endtime="20231121 01:41:13.707"/>
</return>
<status status="PASS" starttime="20231121 01:41:13.660" endtime="20231121 01:41:13.708"/>
</kw>
<status status="PASS" starttime="20231121 01:41:13.657" endtime="20231121 01:41:13.708"/>
</kw>
<kw name="Call Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${call_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_call=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:13.710" level="INFO">${call_req} = {'order_number': '170050206633', 'is_call': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231121 01:41:13.709" endtime="20231121 01:41:13.710"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/call</arg>
<arg>${call_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:13.712" level="INFO">${header} = {'token': '9188BC188A6D4F09AB6B3D39554D480B'}</msg>
<status status="PASS" starttime="20231121 01:41:13.711" endtime="20231121 01:41:13.712"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:13.784" level="INFO">POST Request : url=http://localhost:31700/api/order/call 
 path_url=/api/order/call 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '9188BC188A6D4F09AB6B3D39554D480B', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050206633", "is_call": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231121 01:41:13.784" level="INFO">POST Response : url=http://localhost:31700/api/order/call 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:41:13.785" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:13.712" endtime="20231121 01:41:13.785"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:13.785" endtime="20231121 01:41:13.785"/>
</return>
<msg timestamp="20231121 01:41:13.786" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:13.711" endtime="20231121 01:41:13.786"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:13.787" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:13.786" endtime="20231121 01:41:13.787"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:13.788" endtime="20231121 01:41:13.788"/>
</return>
<status status="PASS" starttime="20231121 01:41:13.710" endtime="20231121 01:41:13.788"/>
</kw>
<status status="PASS" starttime="20231121 01:41:13.708" endtime="20231121 01:41:13.789"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:41:19.790" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20231121 01:41:13.789" endtime="20231121 01:41:19.790"/>
</kw>
<kw name="Check Call Push">
<kw name="Get Last Req" library="rest_res">
<var>${api_sent}</var>
<kw name="GET" library="RequestsLibrary">
<var>${result}</var>
<arg>url=http://localhost:5001/check_call</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20231121 01:41:19.796" level="INFO">GET Request : url=http://localhost:5001/check_call 
 path_url=/check_call 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231121 01:41:19.796" level="INFO">GET Response : url=http://localhost:5001/check_call 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/3.0.1 Python/3.9.6', 'Date': 'Mon, 20 Nov 2023 17:41:19 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '97', 'Connection': 'close'} 
 body={"path": "/pa_web/pa_rest/call_vehicle", "req": {"plateNo": "\u4eacA12345", "driverName": "aaa"}} 
 </msg>
<msg timestamp="20231121 01:41:19.797" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:19.791" endtime="20231121 01:41:19.797"/>
</kw>
<return>
<value>${result.json()}[req]</value>
<status status="PASS" starttime="20231121 01:41:19.797" endtime="20231121 01:41:19.797"/>
</return>
<msg timestamp="20231121 01:41:19.798" level="INFO">${api_sent} = {'plateNo': '京A12345', 'driverName': 'aaa'}</msg>
<status status="PASS" starttime="20231121 01:41:19.791" endtime="20231121 01:41:19.798"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${api_sent}[plateNo]</arg>
<arg>${plate_no}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231121 01:41:19.799" endtime="20231121 01:41:19.799"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${api_sent}[driverName]</arg>
<arg>aaa</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231121 01:41:19.799" endtime="20231121 01:41:19.800"/>
</kw>
<status status="PASS" starttime="20231121 01:41:19.790" endtime="20231121 01:41:19.800"/>
</kw>
<kw name="One Time Scale">
<arg>p</arg>
<arg>id</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${weight}</var>
<arg>${p_weight}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:19.801" level="INFO">${weight} = 20.23</msg>
<status status="PASS" starttime="20231121 01:41:19.801" endtime="20231121 01:41:19.802"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:19.802" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:41:19.802" endtime="20231121 01:41:19.802"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:19.803" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:41:19.803" endtime="20231121 01:41:19.803"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:19.804" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231121 01:41:19.804" endtime="20231121 01:41:19.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_reader}</var>
<arg>${s_fid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:19.805" level="INFO">${id_reader} = fi</msg>
<status status="PASS" starttime="20231121 01:41:19.804" endtime="20231121 01:41:19.805"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weight}</arg>
<arg>${m_weight}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:41:19.809" endtime="20231121 01:41:19.810"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:41:19.810" endtime="20231121 01:41:19.810"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:41:19.810" endtime="20231121 01:41:19.810"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:41:19.811" endtime="20231121 01:41:19.811"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_reader}</arg>
<arg>${s_bid}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:41:19.811" endtime="20231121 01:41:19.812"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:41:19.805" endtime="20231121 01:41:19.812"/>
</branch>
<status status="PASS" starttime="20231121 01:41:19.805" endtime="20231121 01:41:19.812"/>
</if>
<if>
<branch type="IF" condition="$cam_or_id == 'cam'">
<kw name="Mock Plate Cap" library="dev_res">
<arg>${plate_no}</arg>
<arg>${pc}</arg>
<status status="NOT RUN" starttime="20231121 01:41:19.812" endtime="20231121 01:41:19.813"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:41:19.812" endtime="20231121 01:41:19.813"/>
</branch>
<branch type="ELSE">
<kw name="Mock Id Read" library="dev_res">
<arg>${driver_id}</arg>
<arg>${id_reader}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:19.815" endtime="20231121 01:41:19.816"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:19.816" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:19.963" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:11 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:19.816" endtime="20231121 01:41:19.963"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:19.968" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:19.963" endtime="20231121 01:41:19.968"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:19.975" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:19.968" endtime="20231121 01:41:19.975"/>
</kw>
<status status="PASS" starttime="20231121 01:41:19.814" endtime="20231121 01:41:19.975"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:19.977" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:19.976" endtime="20231121 01:41:19.977"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:19.980" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:19.977" endtime="20231121 01:41:19.980"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:19.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:19.980" endtime="20231121 01:41:19.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:19.985" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:19.985" endtime="20231121 01:41:19.985"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:19.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:19.985" endtime="20231121 01:41:19.986"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:19.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:19.986" endtime="20231121 01:41:19.987"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:19.987" endtime="20231121 01:41:19.987"/>
</return>
<status status="PASS" starttime="20231121 01:41:19.975" endtime="20231121 01:41:19.988"/>
</kw>
<status status="PASS" starttime="20231121 01:41:19.814" endtime="20231121 01:41:19.988"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:19.989" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:19.989" endtime="20231121 01:41:19.989"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:19.992" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:19.989" endtime="20231121 01:41:19.992"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:19.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:19.993" endtime="20231121 01:41:19.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:19.994" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:19.994" endtime="20231121 01:41:19.994"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:19.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:19.995" endtime="20231121 01:41:19.995"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:19.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:19.996" endtime="20231121 01:41:19.996"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:19.997" endtime="20231121 01:41:19.997"/>
</return>
<status status="PASS" starttime="20231121 01:41:19.988" endtime="20231121 01:41:19.997"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:19.998" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:19.998" endtime="20231121 01:41:19.998"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:20.001" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:19.999" endtime="20231121 01:41:20.001"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:20.576" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:20.577" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:20.001" endtime="20231121 01:41:20.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:20.577" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:20.577" endtime="20231121 01:41:20.577"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.578" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:20.578" endtime="20231121 01:41:20.578"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.579" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:20.578" endtime="20231121 01:41:20.579"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:20.579" endtime="20231121 01:41:20.580"/>
</return>
<msg timestamp="20231121 01:41:20.580" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:19.997" endtime="20231121 01:41:20.580"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:20.580" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:20.581" level="INFO">${lines} = |    |      | 335:fi  |</msg>
<status status="PASS" starttime="20231121 01:41:20.580" endtime="20231121 01:41:20.581"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:20.581" level="INFO">${line} = |    |      | 335:fi  |</msg>
<status status="PASS" starttime="20231121 01:41:20.581" endtime="20231121 01:41:20.581"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:20.582" level="INFO">${line_array} = ['|    |      | 335', 'fi  |']</msg>
<status status="PASS" starttime="20231121 01:41:20.582" endtime="20231121 01:41:20.582"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:20.583" level="INFO">${dev_name_array} = ['|', '|', '|', '335']</msg>
<status status="PASS" starttime="20231121 01:41:20.582" endtime="20231121 01:41:20.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:20.584" level="INFO">${dev_id} = 335</msg>
<status status="PASS" starttime="20231121 01:41:20.583" endtime="20231121 01:41:20.584"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:20.585" endtime="20231121 01:41:20.585"/>
</kw>
<status status="PASS" starttime="20231121 01:41:20.585" endtime="20231121 01:41:20.586"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:20.586" endtime="20231121 01:41:20.586"/>
</return>
<msg timestamp="20231121 01:41:20.587" level="INFO">${dev_id} = 335</msg>
<status status="PASS" starttime="20231121 01:41:19.814" endtime="20231121 01:41:20.587"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:20.589" endtime="20231121 01:41:20.590"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:20.591" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:20.741" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:19 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:20.591" endtime="20231121 01:41:20.742"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:20.746" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:20.742" endtime="20231121 01:41:20.746"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:20.753" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:20.747" endtime="20231121 01:41:20.753"/>
</kw>
<status status="PASS" starttime="20231121 01:41:20.588" endtime="20231121 01:41:20.753"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:20.755" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:20.754" endtime="20231121 01:41:20.755"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:20.758" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:20.755" endtime="20231121 01:41:20.758"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:20.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.758" endtime="20231121 01:41:20.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:20.764" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:20.763" endtime="20231121 01:41:20.764"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.764" endtime="20231121 01:41:20.765"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.765" endtime="20231121 01:41:20.766"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:20.766" endtime="20231121 01:41:20.766"/>
</return>
<status status="PASS" starttime="20231121 01:41:20.754" endtime="20231121 01:41:20.766"/>
</kw>
<status status="PASS" starttime="20231121 01:41:20.587" endtime="20231121 01:41:20.766"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:20.767" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:20.767" endtime="20231121 01:41:20.768"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:20.770" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:20.768" endtime="20231121 01:41:20.770"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:20.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.771" endtime="20231121 01:41:20.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:20.772" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:20.772" endtime="20231121 01:41:20.773"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.773" endtime="20231121 01:41:20.773"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.774" endtime="20231121 01:41:20.774"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:20.774" endtime="20231121 01:41:20.775"/>
</return>
<status status="PASS" starttime="20231121 01:41:20.767" endtime="20231121 01:41:20.775"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} id_reader ${id_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:20.776" level="INFO">mock_device_action 335 id_reader 123456789012345678</msg>
<status status="PASS" starttime="20231121 01:41:20.776" endtime="20231121 01:41:20.776"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:20.779" level="INFO">mock_device_action 335 id_reader 123456789012345678</msg>
<status status="PASS" starttime="20231121 01:41:20.776" endtime="20231121 01:41:20.780"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:20.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.780" endtime="20231121 01:41:20.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:20.786" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:20.785" endtime="20231121 01:41:20.786"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.786" endtime="20231121 01:41:20.789"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:20.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:20.789" endtime="20231121 01:41:20.790"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:20.790" endtime="20231121 01:41:20.791"/>
</return>
<status status="PASS" starttime="20231121 01:41:20.775" endtime="20231121 01:41:20.791"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:20.791" endtime="20231121 01:41:20.792"/>
</kw>
<status status="PASS" starttime="20231121 01:41:20.791" endtime="20231121 01:41:20.792"/>
</kw>
<status status="PASS" starttime="20231121 01:41:19.813" endtime="20231121 01:41:20.792"/>
</kw>
<status status="PASS" starttime="20231121 01:41:19.813" endtime="20231121 01:41:20.793"/>
</branch>
<status status="PASS" starttime="20231121 01:41:19.812" endtime="20231121 01:41:20.793"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:41:23.794" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231121 01:41:20.793" endtime="20231121 01:41:23.794"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:23.796" endtime="20231121 01:41:23.797"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:23.797" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:23.949" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:20 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:23.797" endtime="20231121 01:41:23.950"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:23.954" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:23.950" endtime="20231121 01:41:23.954"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:23.961" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:23.954" endtime="20231121 01:41:23.961"/>
</kw>
<status status="PASS" starttime="20231121 01:41:23.795" endtime="20231121 01:41:23.961"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:23.964" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:41:23.962" endtime="20231121 01:41:23.965"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:23.966" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:41:23.967" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:41:23.965" endtime="20231121 01:41:23.967"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:23.967" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:23.967" endtime="20231121 01:41:23.968"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:23.968" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:41:23.968" endtime="20231121 01:41:23.969"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:23.969" endtime="20231121 01:41:23.970"/>
</kw>
<status status="PASS" starttime="20231121 01:41:23.969" endtime="20231121 01:41:23.970"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:41:23.971" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:41:23.971" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:41:23.970" endtime="20231121 01:41:23.971"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:41:23.971" endtime="20231121 01:41:23.972"/>
</return>
<msg timestamp="20231121 01:41:23.972" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:41:23.795" endtime="20231121 01:41:23.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:41:23.972" endtime="20231121 01:41:23.973"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:23.974" endtime="20231121 01:41:23.975"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:23.976" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:24.123" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:23 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:23.975" endtime="20231121 01:41:24.123"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:24.128" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:24.124" endtime="20231121 01:41:24.128"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:24.135" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:24.129" endtime="20231121 01:41:24.135"/>
</kw>
<status status="PASS" starttime="20231121 01:41:23.974" endtime="20231121 01:41:24.135"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:24.139" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:41:24.135" endtime="20231121 01:41:24.139"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:24.141" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:41:24.141" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:41:24.140" endtime="20231121 01:41:24.141"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.142" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:24.142" endtime="20231121 01:41:24.142"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.143" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:41:24.143" endtime="20231121 01:41:24.143"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:24.144" endtime="20231121 01:41:24.145"/>
</kw>
<status status="PASS" starttime="20231121 01:41:24.144" endtime="20231121 01:41:24.145"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:41:24.145" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:41:24.146" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:41:24.145" endtime="20231121 01:41:24.146"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:41:24.146" endtime="20231121 01:41:24.146"/>
</return>
<msg timestamp="20231121 01:41:24.147" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:41:23.973" endtime="20231121 01:41:24.147"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:41:24.147" endtime="20231121 01:41:24.148"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:24.150" endtime="20231121 01:41:24.150"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:24.151" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:24.300" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:24 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:24.151" endtime="20231121 01:41:24.300"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:24.305" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:24.301" endtime="20231121 01:41:24.305"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:24.312" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:24.305" endtime="20231121 01:41:24.312"/>
</kw>
<status status="PASS" starttime="20231121 01:41:24.149" endtime="20231121 01:41:24.313"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:24.314" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:24.314" endtime="20231121 01:41:24.314"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:24.317" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:24.315" endtime="20231121 01:41:24.318"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:24.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:24.318" endtime="20231121 01:41:24.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:24.323" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:24.323" endtime="20231121 01:41:24.323"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:24.324" endtime="20231121 01:41:24.324"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:24.325" endtime="20231121 01:41:24.325"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:24.326" endtime="20231121 01:41:24.326"/>
</return>
<status status="PASS" starttime="20231121 01:41:24.313" endtime="20231121 01:41:24.327"/>
</kw>
<status status="PASS" starttime="20231121 01:41:24.149" endtime="20231121 01:41:24.327"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:24.328" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:24.328" endtime="20231121 01:41:24.329"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:24.331" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:24.329" endtime="20231121 01:41:24.332"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:24.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:24.332" endtime="20231121 01:41:24.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:24.333" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:24.333" endtime="20231121 01:41:24.334"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:24.334" endtime="20231121 01:41:24.335"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:24.335" endtime="20231121 01:41:24.335"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:24.336" endtime="20231121 01:41:24.336"/>
</return>
<status status="PASS" starttime="20231121 01:41:24.327" endtime="20231121 01:41:24.336"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:24.337" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:24.337" endtime="20231121 01:41:24.337"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:24.340" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:24.338" endtime="20231121 01:41:24.340"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:24.917" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:24.917" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:24.341" endtime="20231121 01:41:24.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:24.918" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:24.917" endtime="20231121 01:41:24.918"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.918" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:24.918" endtime="20231121 01:41:24.918"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:24.919" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:24.919" endtime="20231121 01:41:24.919"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:24.919" endtime="20231121 01:41:24.919"/>
</return>
<msg timestamp="20231121 01:41:24.920" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:24.336" endtime="20231121 01:41:24.920"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:24.920" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:24.921" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:41:24.920" endtime="20231121 01:41:24.921"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:24.921" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:41:24.921" endtime="20231121 01:41:24.921"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:24.922" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231121 01:41:24.921" endtime="20231121 01:41:24.922"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:24.923" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231121 01:41:24.922" endtime="20231121 01:41:24.923"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:24.924" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:41:24.923" endtime="20231121 01:41:24.924"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:24.925" endtime="20231121 01:41:24.925"/>
</kw>
<status status="PASS" starttime="20231121 01:41:24.924" endtime="20231121 01:41:24.926"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:24.926" endtime="20231121 01:41:24.927"/>
</return>
<msg timestamp="20231121 01:41:24.928" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:41:24.149" endtime="20231121 01:41:24.928"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:24.930" endtime="20231121 01:41:24.931"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:24.932" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:25.081" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:24 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:24.932" endtime="20231121 01:41:25.082"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.085" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:25.082" endtime="20231121 01:41:25.086"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.092" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:25.086" endtime="20231121 01:41:25.092"/>
</kw>
<status status="PASS" starttime="20231121 01:41:24.929" endtime="20231121 01:41:25.092"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.094" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:25.093" endtime="20231121 01:41:25.094"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.097" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:25.094" endtime="20231121 01:41:25.097"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.098" endtime="20231121 01:41:25.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.102" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:25.102" endtime="20231121 01:41:25.103"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.103" endtime="20231121 01:41:25.103"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.104" endtime="20231121 01:41:25.104"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:25.104" endtime="20231121 01:41:25.105"/>
</return>
<status status="PASS" starttime="20231121 01:41:25.093" endtime="20231121 01:41:25.105"/>
</kw>
<status status="PASS" starttime="20231121 01:41:24.928" endtime="20231121 01:41:25.105"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.106" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:25.106" endtime="20231121 01:41:25.107"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.109" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:25.107" endtime="20231121 01:41:25.110"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.110" endtime="20231121 01:41:25.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.111" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:25.111" endtime="20231121 01:41:25.112"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.112" endtime="20231121 01:41:25.112"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.113" endtime="20231121 01:41:25.113"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:25.113" endtime="20231121 01:41:25.114"/>
</return>
<status status="PASS" starttime="20231121 01:41:25.105" endtime="20231121 01:41:25.114"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.115" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:41:25.115" endtime="20231121 01:41:25.116"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.118" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:41:25.116" endtime="20231121 01:41:25.118"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.119" endtime="20231121 01:41:25.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.125" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:25.125" endtime="20231121 01:41:25.125"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.126" endtime="20231121 01:41:25.127"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.127" endtime="20231121 01:41:25.128"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:25.128" endtime="20231121 01:41:25.128"/>
</return>
<status status="PASS" starttime="20231121 01:41:25.114" endtime="20231121 01:41:25.128"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:25.129" endtime="20231121 01:41:25.129"/>
</kw>
<status status="PASS" starttime="20231121 01:41:25.128" endtime="20231121 01:41:25.129"/>
</kw>
<status status="PASS" starttime="20231121 01:41:24.148" endtime="20231121 01:41:25.130"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:25.132" endtime="20231121 01:41:25.132"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:25.133" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:25.278" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:25 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:25.132" endtime="20231121 01:41:25.278"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.282" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:25.278" endtime="20231121 01:41:25.282"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.288" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:25.282" endtime="20231121 01:41:25.289"/>
</kw>
<status status="PASS" starttime="20231121 01:41:25.131" endtime="20231121 01:41:25.289"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.290" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:25.290" endtime="20231121 01:41:25.290"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.294" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:25.291" endtime="20231121 01:41:25.294"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.294" endtime="20231121 01:41:25.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.300" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:25.300" endtime="20231121 01:41:25.300"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.301" endtime="20231121 01:41:25.301"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.302" endtime="20231121 01:41:25.302"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:25.303" endtime="20231121 01:41:25.303"/>
</return>
<status status="PASS" starttime="20231121 01:41:25.289" endtime="20231121 01:41:25.303"/>
</kw>
<status status="PASS" starttime="20231121 01:41:25.131" endtime="20231121 01:41:25.303"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.304" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:25.304" endtime="20231121 01:41:25.304"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.307" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:25.305" endtime="20231121 01:41:25.308"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.308" endtime="20231121 01:41:25.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.310" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:25.309" endtime="20231121 01:41:25.310"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.310" endtime="20231121 01:41:25.311"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:25.311" endtime="20231121 01:41:25.312"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:25.312" endtime="20231121 01:41:25.312"/>
</return>
<status status="PASS" starttime="20231121 01:41:25.303" endtime="20231121 01:41:25.313"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.314" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:25.314" endtime="20231121 01:41:25.314"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:25.317" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:25.314" endtime="20231121 01:41:25.317"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:25.884" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:25.884" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:25.317" endtime="20231121 01:41:25.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:25.885" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:25.884" endtime="20231121 01:41:25.885"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.885" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:25.885" endtime="20231121 01:41:25.886"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:25.886" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:25.886" endtime="20231121 01:41:25.886"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:25.886" endtime="20231121 01:41:25.886"/>
</return>
<msg timestamp="20231121 01:41:25.887" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:25.313" endtime="20231121 01:41:25.887"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:25.887" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:25.887" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:41:25.887" endtime="20231121 01:41:25.887"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:25.888" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:41:25.888" endtime="20231121 01:41:25.888"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:25.889" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:41:25.888" endtime="20231121 01:41:25.889"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:25.890" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:41:25.889" endtime="20231121 01:41:25.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:25.891" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:41:25.890" endtime="20231121 01:41:25.891"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:25.892" endtime="20231121 01:41:25.892"/>
</kw>
<status status="PASS" starttime="20231121 01:41:25.891" endtime="20231121 01:41:25.893"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:25.893" endtime="20231121 01:41:25.894"/>
</return>
<msg timestamp="20231121 01:41:25.894" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:41:25.130" endtime="20231121 01:41:25.894"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:25.896" endtime="20231121 01:41:25.897"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:25.898" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:26.052" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:25 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:25.897" endtime="20231121 01:41:26.053"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:26.056" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:26.053" endtime="20231121 01:41:26.056"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:26.062" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:26.057" endtime="20231121 01:41:26.062"/>
</kw>
<status status="PASS" starttime="20231121 01:41:25.896" endtime="20231121 01:41:26.063"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:26.064" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:26.063" endtime="20231121 01:41:26.064"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:26.067" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:26.064" endtime="20231121 01:41:26.067"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:26.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.067" endtime="20231121 01:41:26.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:26.072" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:26.072" endtime="20231121 01:41:26.072"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:26.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.073" endtime="20231121 01:41:26.073"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:26.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.074" endtime="20231121 01:41:26.074"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:26.074" endtime="20231121 01:41:26.075"/>
</return>
<status status="PASS" starttime="20231121 01:41:26.063" endtime="20231121 01:41:26.075"/>
</kw>
<status status="PASS" starttime="20231121 01:41:25.895" endtime="20231121 01:41:26.075"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:26.076" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:26.076" endtime="20231121 01:41:26.077"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:26.079" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:26.077" endtime="20231121 01:41:26.079"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:26.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.080" endtime="20231121 01:41:26.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:26.081" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:26.081" endtime="20231121 01:41:26.082"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:26.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.082" endtime="20231121 01:41:26.083"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:26.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.083" endtime="20231121 01:41:26.083"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:26.084" endtime="20231121 01:41:26.084"/>
</return>
<status status="PASS" starttime="20231121 01:41:26.075" endtime="20231121 01:41:26.084"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:26.085" level="INFO">mock_device_action 340 scale 20.23</msg>
<status status="PASS" starttime="20231121 01:41:26.085" endtime="20231121 01:41:26.086"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:26.088" level="INFO">mock_device_action 340 scale 20.23</msg>
<status status="PASS" starttime="20231121 01:41:26.086" endtime="20231121 01:41:26.088"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:26.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.089" endtime="20231121 01:41:26.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:26.095" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:26.095" endtime="20231121 01:41:26.096"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:26.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.096" endtime="20231121 01:41:26.097"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:26.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:26.097" endtime="20231121 01:41:26.098"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:26.098" endtime="20231121 01:41:26.098"/>
</return>
<status status="PASS" starttime="20231121 01:41:26.084" endtime="20231121 01:41:26.098"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:26.099" endtime="20231121 01:41:26.100"/>
</kw>
<status status="PASS" starttime="20231121 01:41:26.099" endtime="20231121 01:41:26.100"/>
</kw>
<status status="PASS" starttime="20231121 01:41:25.130" endtime="20231121 01:41:26.100"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:41:44.102" level="INFO">Slept 18 seconds</msg>
<status status="PASS" starttime="20231121 01:41:26.100" endtime="20231121 01:41:44.102"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:44.105" endtime="20231121 01:41:44.106"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:44.107" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:44.253" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:26 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:44.106" endtime="20231121 01:41:44.254"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.258" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:44.254" endtime="20231121 01:41:44.258"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:44.265" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:44.259" endtime="20231121 01:41:44.265"/>
</kw>
<status status="PASS" starttime="20231121 01:41:44.104" endtime="20231121 01:41:44.265"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.269" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:41:44.265" endtime="20231121 01:41:44.269"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:44.271" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:41:44.271" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:41:44.269" endtime="20231121 01:41:44.272"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.272" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:44.272" endtime="20231121 01:41:44.273"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.273" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:41:44.273" endtime="20231121 01:41:44.274"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:44.275" endtime="20231121 01:41:44.275"/>
</kw>
<status status="PASS" starttime="20231121 01:41:44.274" endtime="20231121 01:41:44.275"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:41:44.276" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:41:44.276" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:41:44.275" endtime="20231121 01:41:44.276"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:41:44.276" endtime="20231121 01:41:44.277"/>
</return>
<msg timestamp="20231121 01:41:44.277" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:41:44.103" endtime="20231121 01:41:44.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:41:44.277" endtime="20231121 01:41:44.278"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:44.279" endtime="20231121 01:41:44.280"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:44.281" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:44.423" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:44 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:44.280" endtime="20231121 01:41:44.423"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.428" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:44.423" endtime="20231121 01:41:44.428"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:44.434" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:44.428" endtime="20231121 01:41:44.434"/>
</kw>
<status status="PASS" starttime="20231121 01:41:44.279" endtime="20231121 01:41:44.434"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.438" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:41:44.435" endtime="20231121 01:41:44.438"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:44.440" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:41:44.440" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:41:44.438" endtime="20231121 01:41:44.440"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.441" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:44.441" endtime="20231121 01:41:44.441"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.442" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:41:44.441" endtime="20231121 01:41:44.442"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:44.443" endtime="20231121 01:41:44.444"/>
</kw>
<status status="PASS" starttime="20231121 01:41:44.443" endtime="20231121 01:41:44.444"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:41:44.444" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:41:44.445" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:41:44.444" endtime="20231121 01:41:44.445"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:41:44.445" endtime="20231121 01:41:44.445"/>
</return>
<msg timestamp="20231121 01:41:44.445" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:41:44.278" endtime="20231121 01:41:44.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:41:44.446" endtime="20231121 01:41:44.446"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:44.449" endtime="20231121 01:41:44.449"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:44.450" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:44.595" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:44 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:44.449" endtime="20231121 01:41:44.595"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.599" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:44.595" endtime="20231121 01:41:44.599"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:44.604" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:44.599" endtime="20231121 01:41:44.605"/>
</kw>
<status status="PASS" starttime="20231121 01:41:44.448" endtime="20231121 01:41:44.605"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:44.606" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:44.605" endtime="20231121 01:41:44.606"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.611" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:44.606" endtime="20231121 01:41:44.611"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:44.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:44.611" endtime="20231121 01:41:44.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:44.617" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:44.616" endtime="20231121 01:41:44.617"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:44.617" endtime="20231121 01:41:44.618"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:44.618" endtime="20231121 01:41:44.619"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:44.619" endtime="20231121 01:41:44.619"/>
</return>
<status status="PASS" starttime="20231121 01:41:44.605" endtime="20231121 01:41:44.620"/>
</kw>
<status status="PASS" starttime="20231121 01:41:44.448" endtime="20231121 01:41:44.620"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:44.621" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:44.620" endtime="20231121 01:41:44.621"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.624" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:44.621" endtime="20231121 01:41:44.624"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:44.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:44.624" endtime="20231121 01:41:44.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:44.626" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:44.626" endtime="20231121 01:41:44.626"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:44.626" endtime="20231121 01:41:44.627"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:44.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:44.628" endtime="20231121 01:41:44.628"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:44.628" endtime="20231121 01:41:44.628"/>
</return>
<status status="PASS" starttime="20231121 01:41:44.620" endtime="20231121 01:41:44.629"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:44.630" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:44.629" endtime="20231121 01:41:44.630"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:44.633" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:44.630" endtime="20231121 01:41:44.633"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.197" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:45.197" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:44.633" endtime="20231121 01:41:45.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.198" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:45.198" endtime="20231121 01:41:45.198"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.199" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:45.199" endtime="20231121 01:41:45.199"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.200" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:45.199" endtime="20231121 01:41:45.200"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:45.200" endtime="20231121 01:41:45.200"/>
</return>
<msg timestamp="20231121 01:41:45.200" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:44.629" endtime="20231121 01:41:45.200"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:45.201" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:45.201" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:41:45.201" endtime="20231121 01:41:45.201"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:45.202" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:41:45.201" endtime="20231121 01:41:45.202"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:45.203" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231121 01:41:45.202" endtime="20231121 01:41:45.203"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:45.204" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231121 01:41:45.203" endtime="20231121 01:41:45.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:45.205" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:41:45.204" endtime="20231121 01:41:45.205"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:45.205" endtime="20231121 01:41:45.206"/>
</kw>
<status status="PASS" starttime="20231121 01:41:45.205" endtime="20231121 01:41:45.206"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:45.206" endtime="20231121 01:41:45.207"/>
</return>
<msg timestamp="20231121 01:41:45.207" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:41:44.447" endtime="20231121 01:41:45.207"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:45.210" endtime="20231121 01:41:45.211"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:45.212" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:45.365" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:44 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:45.212" endtime="20231121 01:41:45.365"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.369" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:45.366" endtime="20231121 01:41:45.369"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.375" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:45.369" endtime="20231121 01:41:45.375"/>
</kw>
<status status="PASS" starttime="20231121 01:41:45.208" endtime="20231121 01:41:45.375"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.376" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:45.376" endtime="20231121 01:41:45.376"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.379" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:45.377" endtime="20231121 01:41:45.379"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.380" endtime="20231121 01:41:45.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.385" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:45.384" endtime="20231121 01:41:45.385"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.385" endtime="20231121 01:41:45.386"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.386" endtime="20231121 01:41:45.387"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:45.387" endtime="20231121 01:41:45.387"/>
</return>
<status status="PASS" starttime="20231121 01:41:45.375" endtime="20231121 01:41:45.387"/>
</kw>
<status status="PASS" starttime="20231121 01:41:45.208" endtime="20231121 01:41:45.387"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.388" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:45.388" endtime="20231121 01:41:45.389"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.391" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:45.389" endtime="20231121 01:41:45.392"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.392" endtime="20231121 01:41:45.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.394" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:45.393" endtime="20231121 01:41:45.394"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.394" endtime="20231121 01:41:45.395"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.395" endtime="20231121 01:41:45.396"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:45.396" endtime="20231121 01:41:45.396"/>
</return>
<status status="PASS" starttime="20231121 01:41:45.388" endtime="20231121 01:41:45.396"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.398" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:41:45.397" endtime="20231121 01:41:45.398"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.401" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:41:45.398" endtime="20231121 01:41:45.401"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.401" endtime="20231121 01:41:45.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.407" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:45.407" endtime="20231121 01:41:45.408"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.408" endtime="20231121 01:41:45.409"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.409" endtime="20231121 01:41:45.409"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:45.410" endtime="20231121 01:41:45.410"/>
</return>
<status status="PASS" starttime="20231121 01:41:45.396" endtime="20231121 01:41:45.410"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:45.411" endtime="20231121 01:41:45.411"/>
</kw>
<status status="PASS" starttime="20231121 01:41:45.410" endtime="20231121 01:41:45.412"/>
</kw>
<status status="PASS" starttime="20231121 01:41:44.447" endtime="20231121 01:41:45.412"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:45.414" endtime="20231121 01:41:45.415"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:45.415" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:45.559" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:45 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:45.415" endtime="20231121 01:41:45.560"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.565" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:45.560" endtime="20231121 01:41:45.565"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.574" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:45.566" endtime="20231121 01:41:45.574"/>
</kw>
<status status="PASS" starttime="20231121 01:41:45.414" endtime="20231121 01:41:45.574"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.575" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:45.575" endtime="20231121 01:41:45.576"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.580" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:45.576" endtime="20231121 01:41:45.580"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.580" endtime="20231121 01:41:45.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.585" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:45.585" endtime="20231121 01:41:45.585"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.586" endtime="20231121 01:41:45.586"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.586" endtime="20231121 01:41:45.587"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:45.587" endtime="20231121 01:41:45.588"/>
</return>
<status status="PASS" starttime="20231121 01:41:45.574" endtime="20231121 01:41:45.588"/>
</kw>
<status status="PASS" starttime="20231121 01:41:45.413" endtime="20231121 01:41:45.588"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.589" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:45.589" endtime="20231121 01:41:45.590"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.592" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:45.590" endtime="20231121 01:41:45.592"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:45.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.593" endtime="20231121 01:41:45.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.594" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:45.594" endtime="20231121 01:41:45.595"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.595" endtime="20231121 01:41:45.596"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:45.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:45.596" endtime="20231121 01:41:45.596"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:45.597" endtime="20231121 01:41:45.597"/>
</return>
<status status="PASS" starttime="20231121 01:41:45.588" endtime="20231121 01:41:45.597"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:45.598" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:45.598" endtime="20231121 01:41:45.598"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:45.601" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:45.599" endtime="20231121 01:41:45.601"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:46.168" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:46.168" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:45.602" endtime="20231121 01:41:46.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:46.169" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:46.169" endtime="20231121 01:41:46.170"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.172" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:46.171" endtime="20231121 01:41:46.172"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.172" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:46.172" endtime="20231121 01:41:46.172"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:46.173" endtime="20231121 01:41:46.173"/>
</return>
<msg timestamp="20231121 01:41:46.173" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:45.597" endtime="20231121 01:41:46.173"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:46.174" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:46.174" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:41:46.173" endtime="20231121 01:41:46.174"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:46.174" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:41:46.174" endtime="20231121 01:41:46.174"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:46.175" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:41:46.175" endtime="20231121 01:41:46.175"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:46.178" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:41:46.175" endtime="20231121 01:41:46.178"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:46.181" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:41:46.179" endtime="20231121 01:41:46.181"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:46.182" endtime="20231121 01:41:46.183"/>
</kw>
<status status="PASS" starttime="20231121 01:41:46.182" endtime="20231121 01:41:46.183"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:46.184" endtime="20231121 01:41:46.184"/>
</return>
<msg timestamp="20231121 01:41:46.184" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:41:45.413" endtime="20231121 01:41:46.185"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:46.187" endtime="20231121 01:41:46.188"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:46.189" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:46.377" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:45 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:46.188" endtime="20231121 01:41:46.377"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:46.381" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:46.378" endtime="20231121 01:41:46.381"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:46.387" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:46.382" endtime="20231121 01:41:46.387"/>
</kw>
<status status="PASS" starttime="20231121 01:41:46.186" endtime="20231121 01:41:46.388"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:46.389" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:46.388" endtime="20231121 01:41:46.389"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:46.392" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:46.389" endtime="20231121 01:41:46.392"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:46.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.392" endtime="20231121 01:41:46.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:46.398" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:46.397" endtime="20231121 01:41:46.398"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.398" endtime="20231121 01:41:46.399"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.399" endtime="20231121 01:41:46.400"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:46.400" endtime="20231121 01:41:46.400"/>
</return>
<status status="PASS" starttime="20231121 01:41:46.388" endtime="20231121 01:41:46.401"/>
</kw>
<status status="PASS" starttime="20231121 01:41:46.185" endtime="20231121 01:41:46.401"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:46.402" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:46.402" endtime="20231121 01:41:46.402"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:46.405" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:46.402" endtime="20231121 01:41:46.405"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:46.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.405" endtime="20231121 01:41:46.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:46.407" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:46.407" endtime="20231121 01:41:46.407"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.407" endtime="20231121 01:41:46.408"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.408" endtime="20231121 01:41:46.409"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:46.409" endtime="20231121 01:41:46.409"/>
</return>
<status status="PASS" starttime="20231121 01:41:46.401" endtime="20231121 01:41:46.410"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:46.411" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:41:46.410" endtime="20231121 01:41:46.411"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:46.414" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:41:46.411" endtime="20231121 01:41:46.414"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:46.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.414" endtime="20231121 01:41:46.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:46.421" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:46.420" endtime="20231121 01:41:46.421"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.421" endtime="20231121 01:41:46.422"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:46.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:46.422" endtime="20231121 01:41:46.423"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:46.423" endtime="20231121 01:41:46.423"/>
</return>
<status status="PASS" starttime="20231121 01:41:46.410" endtime="20231121 01:41:46.423"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:46.424" endtime="20231121 01:41:46.425"/>
</kw>
<status status="PASS" starttime="20231121 01:41:46.424" endtime="20231121 01:41:46.425"/>
</kw>
<status status="PASS" starttime="20231121 01:41:45.412" endtime="20231121 01:41:46.425"/>
</kw>
<status status="PASS" starttime="20231121 01:41:19.800" endtime="20231121 01:41:46.425"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:41:52.427" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20231121 01:41:46.426" endtime="20231121 01:41:52.427"/>
</kw>
<kw name="Check Order Status">
<kw name="Get Order By Order Number Exist" library="rest_res">
<var>${found_order}</var>
<arg>order_number=${order_number}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:52.432" endtime="20231121 01:41:52.432"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:52.433" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:52.584" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:46 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:52.433" endtime="20231121 01:41:52.585"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:52.589" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:52.585" endtime="20231121 01:41:52.589"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:52.596" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:52.590" endtime="20231121 01:41:52.596"/>
</kw>
<status status="PASS" starttime="20231121 01:41:52.431" endtime="20231121 01:41:52.596"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:52.597" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:52.597" endtime="20231121 01:41:52.598"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:52.601" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:52.598" endtime="20231121 01:41:52.601"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:52.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:52.601" endtime="20231121 01:41:52.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:52.606" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:52.606" endtime="20231121 01:41:52.607"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:52.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:52.607" endtime="20231121 01:41:52.608"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:52.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:52.608" endtime="20231121 01:41:52.609"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:52.609" endtime="20231121 01:41:52.609"/>
</return>
<status status="PASS" starttime="20231121 01:41:52.597" endtime="20231121 01:41:52.609"/>
</kw>
<status status="PASS" starttime="20231121 01:41:52.431" endtime="20231121 01:41:52.609"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:52.611" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:52.610" endtime="20231121 01:41:52.611"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:52.613" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:41:52.611" endtime="20231121 01:41:52.614"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:52.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:52.614" endtime="20231121 01:41:52.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:52.615" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:52.615" endtime="20231121 01:41:52.616"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:52.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:52.616" endtime="20231121 01:41:52.616"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:52.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:52.617" endtime="20231121 01:41:52.617"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:52.617" endtime="20231121 01:41:52.618"/>
</return>
<status status="PASS" starttime="20231121 01:41:52.610" endtime="20231121 01:41:52.618"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:52.619" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:52.619" endtime="20231121 01:41:52.619"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:52.622" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:41:52.619" endtime="20231121 01:41:52.622"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:52.626" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:41:52.626" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:52.622" endtime="20231121 01:41:52.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:52.627" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:41:52.626" endtime="20231121 01:41:52.627"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:52.628" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:52.627" endtime="20231121 01:41:52.628"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:52.629" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:41:52.628" endtime="20231121 01:41:52.629"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:52.629" endtime="20231121 01:41:52.629"/>
</return>
<status status="PASS" starttime="20231121 01:41:52.618" endtime="20231121 01:41:52.629"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:52.630" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:52.630" endtime="20231121 01:41:52.631"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:52.633" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:41:52.631" endtime="20231121 01:41:52.633"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:54.914" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:41:54.914" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:52.634" endtime="20231121 01:41:54.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:54.915" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:41:54.915" endtime="20231121 01:41:54.915"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:54.916" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:54.915" endtime="20231121 01:41:54.916"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:54.916" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:54.916" endtime="20231121 01:41:54.917"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:54.917" endtime="20231121 01:41:54.917"/>
</return>
<msg timestamp="20231121 01:41:54.917" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:41:52.629" endtime="20231121 01:41:54.917"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:54.918" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:41:54.918" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:54.917" endtime="20231121 01:41:54.918"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:54.918" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:41:54.918" endtime="20231121 01:41:54.919"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:54.919" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:41:54.919" endtime="20231121 01:41:54.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:54.920" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:41:54.919" endtime="20231121 01:41:54.920"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:54.922" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:41:54.921" endtime="20231121 01:41:54.922"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:54.926" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:41:54.922" endtime="20231121 01:41:54.927"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:54.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:54.928" endtime="20231121 01:41:54.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:54.939" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:54.938" endtime="20231121 01:41:54.939"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:54.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:54.939" endtime="20231121 01:41:54.940"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:54.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:54.940" endtime="20231121 01:41:54.941"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:54.941" endtime="20231121 01:41:54.941"/>
</return>
<status status="PASS" starttime="20231121 01:41:54.921" endtime="20231121 01:41:54.941"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:54.942" endtime="20231121 01:41:54.942"/>
</kw>
<status status="PASS" starttime="20231121 01:41:54.941" endtime="20231121 01:41:54.943"/>
</kw>
<status status="PASS" starttime="20231121 01:41:52.430" endtime="20231121 01:41:54.943"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:41:54.943" endtime="20231121 01:41:54.944"/>
</return>
<msg timestamp="20231121 01:41:54.944" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:41:54.944" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:41:54.943" endtime="20231121 01:41:54.944"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:54.945" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:41:54.945" endtime="20231121 01:41:54.946"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:54.948" level="INFO">${header} = {'token': '9188BC188A6D4F09AB6B3D39554D480B'}</msg>
<status status="PASS" starttime="20231121 01:41:54.947" endtime="20231121 01:41:54.948"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:54.973" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '9188BC188A6D4F09AB6B3D39554D480B', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:41:54.973" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-hta1vq1iAiOWg1xHxNgxl9KnmYM"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"5ABD99746FF94377831C6416D3829C82"} 
 </msg>
<msg timestamp="20231121 01:41:54.973" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:54.948" endtime="20231121 01:41:54.973"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:54.974" endtime="20231121 01:41:54.974"/>
</return>
<msg timestamp="20231121 01:41:54.974" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:54.947" endtime="20231121 01:41:54.974"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:54.975" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:54.974" endtime="20231121 01:41:54.976"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:54.976" endtime="20231121 01:41:54.976"/>
</return>
<msg timestamp="20231121 01:41:54.977" level="INFO">${token_resp} = 5ABD99746FF94377831C6416D3829C82</msg>
<status status="PASS" starttime="20231121 01:41:54.946" endtime="20231121 01:41:54.977"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:41:54.978" level="INFO">${token} = 5ABD99746FF94377831C6416D3829C82</msg>
<status status="PASS" starttime="20231121 01:41:54.978" endtime="20231121 01:41:54.978"/>
</kw>
<status status="PASS" starttime="20231121 01:41:52.430" endtime="20231121 01:41:54.978"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>order_number=${order_number}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:54.979" level="INFO">${search_condition} = {'order_number': '170050206633'}</msg>
<status status="PASS" starttime="20231121 01:41:54.979" endtime="20231121 01:41:54.980"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/get</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:54.981" level="INFO">${header} = {'token': '5ABD99746FF94377831C6416D3829C82'}</msg>
<status status="PASS" starttime="20231121 01:41:54.981" endtime="20231121 01:41:54.982"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:55.004" level="INFO">POST Request : url=http://localhost:31700/api/order/get 
 path_url=/api/order/get 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '5ABD99746FF94377831C6416D3829C82', 'Content-Length': '32', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050206633"}' 
 </msg>
<msg timestamp="20231121 01:41:55.004" level="INFO">POST Response : url=http://localhost:31700/api/order/get 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '913', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"391-K++Eq3NoMvNlSYjP29UL2inOImo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":{"id":33,"order_number":"170050206633","plate_number":"京A12345","back_plate_number":"","driver_name":"","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":20.23,"m_weight":0,"enter_weight":0,"reg_info":{"operator_name":"abc","operator_time":"2023-11-21 01:41:13"},"call_info":{"operator_name":"abc","operator_time":"2023-11-21 01:41:13"},"confirm_info":{"operator_name":"","operator_time":""},"seal_no":"","history_records":[{"node_name":"一次称重","node_caller":"自动","occour_time":"2023-11-21 01:41:41","id":55}],"order_attachs":[{"att_name":"上磅照片","att_path":"/files/660D1768A16F48E9AB577CE3B4821531.txt","id":158},{"att_name":"过磅录像","att_path":"","id":159},{"att_name":"过磅录像","att_path":"","id":160}],"p_time":"2023-11-21 01:41:41","m_time":"","is_sale":false,"status":2,"company_name":"京东","stuff_from":""}} 
 </msg>
<msg timestamp="20231121 01:41:55.004" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:54.982" endtime="20231121 01:41:55.004"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:55.005" endtime="20231121 01:41:55.005"/>
</return>
<msg timestamp="20231121 01:41:55.005" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:54.980" endtime="20231121 01:41:55.005"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:55.007" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:55.006" endtime="20231121 01:41:55.007"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:55.007" endtime="20231121 01:41:55.008"/>
</return>
<msg timestamp="20231121 01:41:55.008" level="INFO">${search_result} = {'id': 33, 'order_number': '170050206633', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG',...</msg>
<status status="PASS" starttime="20231121 01:41:54.980" endtime="20231121 01:41:55.009"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:41:55.009" endtime="20231121 01:41:55.009"/>
</return>
<msg timestamp="20231121 01:41:55.009" level="INFO">${found_order} = {'id': 33, 'order_number': '170050206633', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG',...</msg>
<status status="PASS" starttime="20231121 01:41:52.429" endtime="20231121 01:41:55.010"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${found_order}[plate_number]</arg>
<arg>${plate_no}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231121 01:41:55.010" endtime="20231121 01:41:55.010"/>
</kw>
<if>
<branch type="IF" condition="$open_or_close == 'open'">
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<msg timestamp="20231121 01:41:55.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 01:41:55.011" endtime="20231121 01:41:55.012"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.011" endtime="20231121 01:41:55.012"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231121 01:41:55.012" endtime="20231121 01:41:55.013"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:41:55.012" endtime="20231121 01:41:55.013"/>
</branch>
<status status="PASS" starttime="20231121 01:41:55.011" endtime="20231121 01:41:55.013"/>
</if>
<status status="PASS" starttime="20231121 01:41:52.428" endtime="20231121 01:41:55.013"/>
</kw>
<kw name="Confirm Order" library="field_opt">
<arg>order_number=${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${confirm_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_confirm=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:55.014" level="INFO">${confirm_req} = {'order_number': '170050206633', 'is_confirm': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231121 01:41:55.014" endtime="20231121 01:41:55.014"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/confirm</arg>
<arg>${confirm_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:41:55.017" level="INFO">${header} = {'token': '5ABD99746FF94377831C6416D3829C82'}</msg>
<status status="PASS" starttime="20231121 01:41:55.016" endtime="20231121 01:41:55.017"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:41:55.053" level="INFO">POST Request : url=http://localhost:31700/api/order/confirm 
 path_url=/api/order/confirm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '5ABD99746FF94377831C6416D3829C82', 'Content-Length': '71', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050206633", "is_confirm": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231121 01:41:55.053" level="INFO">POST Response : url=http://localhost:31700/api/order/confirm 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:41:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1d-2l+eR6Tw+kxHihPdYUt2upGNfBc"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":false} 
 </msg>
<msg timestamp="20231121 01:41:55.053" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:55.017" endtime="20231121 01:41:55.054"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:41:55.054" endtime="20231121 01:41:55.054"/>
</return>
<msg timestamp="20231121 01:41:55.054" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:41:55.015" endtime="20231121 01:41:55.055"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:41:55.056" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:41:55.055" endtime="20231121 01:41:55.056"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:41:55.057" endtime="20231121 01:41:55.057"/>
</return>
<status status="PASS" starttime="20231121 01:41:55.015" endtime="20231121 01:41:55.058"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.013" endtime="20231121 01:41:55.058"/>
</kw>
<kw name="One Time Scale">
<arg>m</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${weight}</var>
<arg>${p_weight}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:55.059" level="INFO">${weight} = 20.23</msg>
<status status="PASS" starttime="20231121 01:41:55.059" endtime="20231121 01:41:55.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:55.060" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:41:55.060" endtime="20231121 01:41:55.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:55.061" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:41:55.061" endtime="20231121 01:41:55.061"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:55.062" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231121 01:41:55.061" endtime="20231121 01:41:55.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_reader}</var>
<arg>${s_fid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:55.063" level="INFO">${id_reader} = fi</msg>
<status status="PASS" starttime="20231121 01:41:55.062" endtime="20231121 01:41:55.063"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weight}</arg>
<arg>${m_weight}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:41:55.064" level="INFO">${weight} = 49.21</msg>
<status status="PASS" starttime="20231121 01:41:55.064" endtime="20231121 01:41:55.064"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:41:55.065" level="INFO">${e_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:41:55.065" endtime="20231121 01:41:55.065"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:41:55.066" level="INFO">${l_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:41:55.066" endtime="20231121 01:41:55.066"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:41:55.067" level="INFO">${pc} = bpc</msg>
<status status="PASS" starttime="20231121 01:41:55.067" endtime="20231121 01:41:55.067"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_reader}</arg>
<arg>${s_bid}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:41:55.068" level="INFO">${id_reader} = bi</msg>
<status status="PASS" starttime="20231121 01:41:55.068" endtime="20231121 01:41:55.068"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.063" endtime="20231121 01:41:55.068"/>
</branch>
<status status="PASS" starttime="20231121 01:41:55.063" endtime="20231121 01:41:55.069"/>
</if>
<if>
<branch type="IF" condition="$cam_or_id == 'cam'">
<kw name="Mock Plate Cap" library="dev_res">
<arg>${plate_no}</arg>
<arg>${pc}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:55.071" endtime="20231121 01:41:55.072"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:55.073" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:55.222" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:52 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:55.072" endtime="20231121 01:41:55.222"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:55.227" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:55.223" endtime="20231121 01:41:55.228"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:55.234" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:55.228" endtime="20231121 01:41:55.234"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.071" endtime="20231121 01:41:55.235"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:55.236" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:55.236" endtime="20231121 01:41:55.236"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:55.239" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:55.236" endtime="20231121 01:41:55.240"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:55.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:55.240" endtime="20231121 01:41:55.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:55.245" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:55.245" endtime="20231121 01:41:55.245"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:55.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:55.246" endtime="20231121 01:41:55.246"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:55.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:55.246" endtime="20231121 01:41:55.247"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:55.247" endtime="20231121 01:41:55.248"/>
</return>
<status status="PASS" starttime="20231121 01:41:55.235" endtime="20231121 01:41:55.248"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.070" endtime="20231121 01:41:55.248"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:55.249" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:55.249" endtime="20231121 01:41:55.249"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:55.252" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:55.250" endtime="20231121 01:41:55.252"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:55.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:55.253" endtime="20231121 01:41:55.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:55.254" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:55.254" endtime="20231121 01:41:55.254"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:55.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:55.255" endtime="20231121 01:41:55.255"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:55.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:55.255" endtime="20231121 01:41:55.256"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:55.256" endtime="20231121 01:41:55.256"/>
</return>
<status status="PASS" starttime="20231121 01:41:55.248" endtime="20231121 01:41:55.257"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:55.258" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:55.257" endtime="20231121 01:41:55.258"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:55.261" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:55.258" endtime="20231121 01:41:55.261"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:55.829" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:41:55.829" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:55.261" endtime="20231121 01:41:55.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:55.830" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:41:55.829" endtime="20231121 01:41:55.830"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:55.830" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:55.830" endtime="20231121 01:41:55.831"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:55.831" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:55.831" endtime="20231121 01:41:55.831"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:55.831" endtime="20231121 01:41:55.831"/>
</return>
<msg timestamp="20231121 01:41:55.832" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:55.257" endtime="20231121 01:41:55.832"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:41:55.832" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:41:55.832" level="INFO">${lines} = |    |      | 332:bpc |</msg>
<status status="PASS" starttime="20231121 01:41:55.832" endtime="20231121 01:41:55.832"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:41:55.833" level="INFO">${line} = |    |      | 332:bpc |</msg>
<status status="PASS" starttime="20231121 01:41:55.833" endtime="20231121 01:41:55.833"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:41:55.834" level="INFO">${line_array} = ['|    |      | 332', 'bpc |']</msg>
<status status="PASS" starttime="20231121 01:41:55.833" endtime="20231121 01:41:55.834"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:41:55.835" level="INFO">${dev_name_array} = ['|', '|', '|', '332']</msg>
<status status="PASS" starttime="20231121 01:41:55.834" endtime="20231121 01:41:55.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:41:55.836" level="INFO">${dev_id} = 332</msg>
<status status="PASS" starttime="20231121 01:41:55.835" endtime="20231121 01:41:55.836"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:55.837" endtime="20231121 01:41:55.837"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.836" endtime="20231121 01:41:55.837"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:41:55.837" endtime="20231121 01:41:55.838"/>
</return>
<msg timestamp="20231121 01:41:55.838" level="INFO">${dev_id} = 332</msg>
<status status="PASS" starttime="20231121 01:41:55.070" endtime="20231121 01:41:55.838"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:55.840" endtime="20231121 01:41:55.841"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:55.843" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:55.990" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:55 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:55.842" endtime="20231121 01:41:55.990"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:55.995" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:55.990" endtime="20231121 01:41:55.995"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:56.001" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:55.995" endtime="20231121 01:41:56.001"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.839" endtime="20231121 01:41:56.001"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:56.002" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:56.002" endtime="20231121 01:41:56.002"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:56.006" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:56.002" endtime="20231121 01:41:56.006"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:56.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.006" endtime="20231121 01:41:56.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:56.011" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:56.011" endtime="20231121 01:41:56.012"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:56.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.012" endtime="20231121 01:41:56.012"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:56.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.013" endtime="20231121 01:41:56.013"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:56.013" endtime="20231121 01:41:56.014"/>
</return>
<status status="PASS" starttime="20231121 01:41:56.001" endtime="20231121 01:41:56.014"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.839" endtime="20231121 01:41:56.014"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:56.015" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:56.015" endtime="20231121 01:41:56.016"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:56.018" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:56.016" endtime="20231121 01:41:56.019"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:56.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.019" endtime="20231121 01:41:56.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:56.020" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:56.020" endtime="20231121 01:41:56.021"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:56.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.021" endtime="20231121 01:41:56.022"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:56.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.022" endtime="20231121 01:41:56.022"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:56.022" endtime="20231121 01:41:56.023"/>
</return>
<status status="PASS" starttime="20231121 01:41:56.014" endtime="20231121 01:41:56.023"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} plate ${plate_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:56.024" level="INFO">mock_device_action 332 plate 京A12345</msg>
<status status="PASS" starttime="20231121 01:41:56.024" endtime="20231121 01:41:56.024"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:56.027" level="INFO">mock_device_action 332 plate äº¬A12345</msg>
<status status="PASS" starttime="20231121 01:41:56.024" endtime="20231121 01:41:56.027"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:56.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.027" endtime="20231121 01:41:56.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:56.034" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:56.033" endtime="20231121 01:41:56.034"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:56.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.035" endtime="20231121 01:41:56.035"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:56.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:56.036" endtime="20231121 01:41:56.036"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:56.037" endtime="20231121 01:41:56.037"/>
</return>
<status status="PASS" starttime="20231121 01:41:56.023" endtime="20231121 01:41:56.037"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:56.038" endtime="20231121 01:41:56.038"/>
</kw>
<status status="PASS" starttime="20231121 01:41:56.037" endtime="20231121 01:41:56.039"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.069" endtime="20231121 01:41:56.039"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.069" endtime="20231121 01:41:56.039"/>
</branch>
<branch type="ELSE">
<kw name="Mock Id Read" library="dev_res">
<arg>${driver_id}</arg>
<arg>${id_reader}</arg>
<status status="NOT RUN" starttime="20231121 01:41:56.040" endtime="20231121 01:41:56.040"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:41:56.039" endtime="20231121 01:41:56.040"/>
</branch>
<status status="PASS" starttime="20231121 01:41:55.069" endtime="20231121 01:41:56.040"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:41:59.041" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231121 01:41:56.040" endtime="20231121 01:41:59.042"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:59.044" endtime="20231121 01:41:59.045"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:59.046" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:59.200" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:55 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:59.045" endtime="20231121 01:41:59.201"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.205" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:59.201" endtime="20231121 01:41:59.206"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:59.212" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:59.206" endtime="20231121 01:41:59.212"/>
</kw>
<status status="PASS" starttime="20231121 01:41:59.043" endtime="20231121 01:41:59.212"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.215" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:41:59.212" endtime="20231121 01:41:59.215"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:59.217" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:41:59.217" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:41:59.215" endtime="20231121 01:41:59.217"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.218" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:59.217" endtime="20231121 01:41:59.218"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.219" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:41:59.218" endtime="20231121 01:41:59.219"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:59.220" endtime="20231121 01:41:59.220"/>
</kw>
<status status="PASS" starttime="20231121 01:41:59.219" endtime="20231121 01:41:59.221"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:41:59.221" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:41:59.222" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:41:59.221" endtime="20231121 01:41:59.222"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:41:59.222" endtime="20231121 01:41:59.222"/>
</return>
<msg timestamp="20231121 01:41:59.223" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:41:59.042" endtime="20231121 01:41:59.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:41:59.223" endtime="20231121 01:41:59.224"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:59.225" endtime="20231121 01:41:59.226"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:59.226" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:59.372" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:59 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:59.226" endtime="20231121 01:41:59.372"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.376" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:59.372" endtime="20231121 01:41:59.377"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:59.383" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:59.377" endtime="20231121 01:41:59.383"/>
</kw>
<status status="PASS" starttime="20231121 01:41:59.224" endtime="20231121 01:41:59.384"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.387" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:41:59.384" endtime="20231121 01:41:59.387"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:59.389" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:41:59.389" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:41:59.387" endtime="20231121 01:41:59.389"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.390" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:41:59.389" endtime="20231121 01:41:59.390"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.391" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:41:59.390" endtime="20231121 01:41:59.391"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:41:59.392" endtime="20231121 01:41:59.392"/>
</kw>
<status status="PASS" starttime="20231121 01:41:59.391" endtime="20231121 01:41:59.393"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:41:59.393" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:41:59.394" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:41:59.393" endtime="20231121 01:41:59.394"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:41:59.394" endtime="20231121 01:41:59.394"/>
</return>
<msg timestamp="20231121 01:41:59.394" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:41:59.224" endtime="20231121 01:41:59.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:41:59.395" endtime="20231121 01:41:59.395"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:41:59.398" endtime="20231121 01:41:59.398"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:41:59.399" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:41:59.542" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:59 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:59.399" endtime="20231121 01:41:59.543"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.547" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:41:59.543" endtime="20231121 01:41:59.547"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:59.553" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:41:59.547" endtime="20231121 01:41:59.554"/>
</kw>
<status status="PASS" starttime="20231121 01:41:59.397" endtime="20231121 01:41:59.554"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:59.555" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:59.554" endtime="20231121 01:41:59.555"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.558" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:41:59.555" endtime="20231121 01:41:59.559"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:59.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:59.559" endtime="20231121 01:41:59.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:59.564" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:59.564" endtime="20231121 01:41:59.564"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:59.564" endtime="20231121 01:41:59.565"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:59.565" endtime="20231121 01:41:59.566"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:59.566" endtime="20231121 01:41:59.566"/>
</return>
<status status="PASS" starttime="20231121 01:41:59.554" endtime="20231121 01:41:59.566"/>
</kw>
<status status="PASS" starttime="20231121 01:41:59.397" endtime="20231121 01:41:59.567"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:59.568" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:59.567" endtime="20231121 01:41:59.568"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.571" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:41:59.568" endtime="20231121 01:41:59.571"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:41:59.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:59.571" endtime="20231121 01:41:59.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:59.573" level="INFO"/>
<status status="PASS" starttime="20231121 01:41:59.572" endtime="20231121 01:41:59.573"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:59.573" endtime="20231121 01:41:59.574"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:41:59.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:41:59.574" endtime="20231121 01:41:59.575"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:41:59.575" endtime="20231121 01:41:59.575"/>
</return>
<status status="PASS" starttime="20231121 01:41:59.567" endtime="20231121 01:41:59.575"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:41:59.577" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:59.576" endtime="20231121 01:41:59.577"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:41:59.579" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:41:59.577" endtime="20231121 01:41:59.580"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.265" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:00.266" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:59.580" endtime="20231121 01:42:00.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.267" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:00.266" endtime="20231121 01:42:00.267"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.268" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:00.267" endtime="20231121 01:42:00.268"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.269" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:00.268" endtime="20231121 01:42:00.269"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:00.269" endtime="20231121 01:42:00.269"/>
</return>
<msg timestamp="20231121 01:42:00.270" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:41:59.576" endtime="20231121 01:42:00.270"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:00.271" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:00.271" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:42:00.270" endtime="20231121 01:42:00.271"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:00.272" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:42:00.272" endtime="20231121 01:42:00.273"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:00.273" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231121 01:42:00.273" endtime="20231121 01:42:00.274"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:00.275" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231121 01:42:00.274" endtime="20231121 01:42:00.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:00.276" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:42:00.275" endtime="20231121 01:42:00.277"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:00.277" endtime="20231121 01:42:00.278"/>
</kw>
<status status="PASS" starttime="20231121 01:42:00.277" endtime="20231121 01:42:00.279"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:00.279" endtime="20231121 01:42:00.279"/>
</return>
<msg timestamp="20231121 01:42:00.279" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:41:59.396" endtime="20231121 01:42:00.279"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:00.281" endtime="20231121 01:42:00.281"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:00.282" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:00.449" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:41:59 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:00.282" endtime="20231121 01:42:00.449"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.454" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:00.450" endtime="20231121 01:42:00.454"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.460" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:00.455" endtime="20231121 01:42:00.461"/>
</kw>
<status status="PASS" starttime="20231121 01:42:00.280" endtime="20231121 01:42:00.461"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.462" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:00.462" endtime="20231121 01:42:00.462"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.465" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:00.462" endtime="20231121 01:42:00.466"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.466" endtime="20231121 01:42:00.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.471" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:00.471" endtime="20231121 01:42:00.472"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.472" endtime="20231121 01:42:00.472"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.473" endtime="20231121 01:42:00.473"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:00.473" endtime="20231121 01:42:00.474"/>
</return>
<status status="PASS" starttime="20231121 01:42:00.461" endtime="20231121 01:42:00.474"/>
</kw>
<status status="PASS" starttime="20231121 01:42:00.280" endtime="20231121 01:42:00.474"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.475" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:00.475" endtime="20231121 01:42:00.476"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.479" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:00.476" endtime="20231121 01:42:00.479"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.479" endtime="20231121 01:42:00.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.481" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:00.480" endtime="20231121 01:42:00.481"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.481" endtime="20231121 01:42:00.483"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.483" endtime="20231121 01:42:00.484"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:00.484" endtime="20231121 01:42:00.484"/>
</return>
<status status="PASS" starttime="20231121 01:42:00.474" endtime="20231121 01:42:00.485"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.486" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:42:00.485" endtime="20231121 01:42:00.486"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.489" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:42:00.486" endtime="20231121 01:42:00.489"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.490" endtime="20231121 01:42:00.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.496" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:00.495" endtime="20231121 01:42:00.496"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.496" endtime="20231121 01:42:00.497"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.497" endtime="20231121 01:42:00.498"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:00.498" endtime="20231121 01:42:00.498"/>
</return>
<status status="PASS" starttime="20231121 01:42:00.485" endtime="20231121 01:42:00.498"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:00.499" endtime="20231121 01:42:00.500"/>
</kw>
<status status="PASS" starttime="20231121 01:42:00.499" endtime="20231121 01:42:00.500"/>
</kw>
<status status="PASS" starttime="20231121 01:41:59.396" endtime="20231121 01:42:00.500"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:00.502" endtime="20231121 01:42:00.503"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:00.504" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:00.653" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:00 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:00.503" endtime="20231121 01:42:00.653"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.658" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:00.654" endtime="20231121 01:42:00.658"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.664" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:00.659" endtime="20231121 01:42:00.664"/>
</kw>
<status status="PASS" starttime="20231121 01:42:00.502" endtime="20231121 01:42:00.665"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.666" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:00.666" endtime="20231121 01:42:00.666"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.669" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:00.667" endtime="20231121 01:42:00.669"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.669" endtime="20231121 01:42:00.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.674" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:00.674" endtime="20231121 01:42:00.675"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.675" endtime="20231121 01:42:00.676"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.676" endtime="20231121 01:42:00.676"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:00.677" endtime="20231121 01:42:00.677"/>
</return>
<status status="PASS" starttime="20231121 01:42:00.665" endtime="20231121 01:42:00.677"/>
</kw>
<status status="PASS" starttime="20231121 01:42:00.502" endtime="20231121 01:42:00.677"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.679" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:00.678" endtime="20231121 01:42:00.679"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.682" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:00.679" endtime="20231121 01:42:00.682"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:00.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.682" endtime="20231121 01:42:00.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.684" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:00.683" endtime="20231121 01:42:00.684"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.684" endtime="20231121 01:42:00.685"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:00.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:00.685" endtime="20231121 01:42:00.686"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:00.686" endtime="20231121 01:42:00.686"/>
</return>
<status status="PASS" starttime="20231121 01:42:00.677" endtime="20231121 01:42:00.686"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:00.687" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:00.687" endtime="20231121 01:42:00.688"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:00.690" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:00.688" endtime="20231121 01:42:00.691"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:01.316" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:01.316" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:00.691" endtime="20231121 01:42:01.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:01.317" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:01.317" endtime="20231121 01:42:01.317"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.318" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:01.317" endtime="20231121 01:42:01.318"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.318" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:01.318" endtime="20231121 01:42:01.319"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:01.319" endtime="20231121 01:42:01.319"/>
</return>
<msg timestamp="20231121 01:42:01.320" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:00.686" endtime="20231121 01:42:01.320"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:01.321" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:01.321" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:42:01.320" endtime="20231121 01:42:01.322"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:01.324" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:42:01.322" endtime="20231121 01:42:01.325"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:01.326" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:42:01.325" endtime="20231121 01:42:01.326"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:01.328" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:42:01.326" endtime="20231121 01:42:01.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:01.329" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:42:01.328" endtime="20231121 01:42:01.329"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:01.330" endtime="20231121 01:42:01.331"/>
</kw>
<status status="PASS" starttime="20231121 01:42:01.330" endtime="20231121 01:42:01.331"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:01.331" endtime="20231121 01:42:01.331"/>
</return>
<msg timestamp="20231121 01:42:01.332" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:42:00.501" endtime="20231121 01:42:01.332"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:01.334" endtime="20231121 01:42:01.335"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:01.335" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:01.482" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:00 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:01.335" endtime="20231121 01:42:01.482"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:01.487" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:01.483" endtime="20231121 01:42:01.487"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:01.494" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:01.487" endtime="20231121 01:42:01.494"/>
</kw>
<status status="PASS" starttime="20231121 01:42:01.333" endtime="20231121 01:42:01.495"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:01.496" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:01.496" endtime="20231121 01:42:01.496"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:01.499" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:01.496" endtime="20231121 01:42:01.499"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:01.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.499" endtime="20231121 01:42:01.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:01.505" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:01.505" endtime="20231121 01:42:01.505"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.506" endtime="20231121 01:42:01.506"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.506" endtime="20231121 01:42:01.507"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:01.507" endtime="20231121 01:42:01.508"/>
</return>
<status status="PASS" starttime="20231121 01:42:01.495" endtime="20231121 01:42:01.508"/>
</kw>
<status status="PASS" starttime="20231121 01:42:01.332" endtime="20231121 01:42:01.508"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:01.509" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:01.509" endtime="20231121 01:42:01.509"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:01.512" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:01.510" endtime="20231121 01:42:01.512"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:01.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.513" endtime="20231121 01:42:01.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:01.514" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:01.514" endtime="20231121 01:42:01.515"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.515" endtime="20231121 01:42:01.516"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.516" endtime="20231121 01:42:01.516"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:01.517" endtime="20231121 01:42:01.517"/>
</return>
<status status="PASS" starttime="20231121 01:42:01.508" endtime="20231121 01:42:01.517"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:01.518" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231121 01:42:01.518" endtime="20231121 01:42:01.518"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:01.521" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231121 01:42:01.519" endtime="20231121 01:42:01.521"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:01.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.521" endtime="20231121 01:42:01.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:01.528" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:01.527" endtime="20231121 01:42:01.528"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.528" endtime="20231121 01:42:01.529"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:01.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:01.529" endtime="20231121 01:42:01.530"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:01.530" endtime="20231121 01:42:01.530"/>
</return>
<status status="PASS" starttime="20231121 01:42:01.517" endtime="20231121 01:42:01.531"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:01.531" endtime="20231121 01:42:01.532"/>
</kw>
<status status="PASS" starttime="20231121 01:42:01.531" endtime="20231121 01:42:01.532"/>
</kw>
<status status="PASS" starttime="20231121 01:42:00.500" endtime="20231121 01:42:01.532"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:42:19.533" level="INFO">Slept 18 seconds</msg>
<status status="PASS" starttime="20231121 01:42:01.532" endtime="20231121 01:42:19.534"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:19.536" endtime="20231121 01:42:19.537"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:19.538" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:19.691" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:01 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:19.538" endtime="20231121 01:42:19.691"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:19.696" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:19.692" endtime="20231121 01:42:19.696"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:19.702" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:19.696" endtime="20231121 01:42:19.702"/>
</kw>
<status status="PASS" starttime="20231121 01:42:19.536" endtime="20231121 01:42:19.703"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:19.706" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:42:19.703" endtime="20231121 01:42:19.706"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:19.708" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:42:19.708" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:42:19.706" endtime="20231121 01:42:19.708"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:19.709" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:19.709" endtime="20231121 01:42:19.709"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:19.710" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:42:19.709" endtime="20231121 01:42:19.710"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:19.711" endtime="20231121 01:42:19.711"/>
</kw>
<status status="PASS" starttime="20231121 01:42:19.710" endtime="20231121 01:42:19.712"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:42:19.712" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:42:19.713" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:42:19.712" endtime="20231121 01:42:19.713"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:42:19.713" endtime="20231121 01:42:19.713"/>
</return>
<msg timestamp="20231121 01:42:19.714" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:42:19.535" endtime="20231121 01:42:19.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:42:19.714" endtime="20231121 01:42:19.714"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:19.716" endtime="20231121 01:42:19.717"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:19.717" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:19.860" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:19 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:19.717" endtime="20231121 01:42:19.860"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:19.865" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:19.860" endtime="20231121 01:42:19.865"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:19.872" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:19.865" endtime="20231121 01:42:19.872"/>
</kw>
<status status="PASS" starttime="20231121 01:42:19.715" endtime="20231121 01:42:19.872"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:19.876" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:42:19.873" endtime="20231121 01:42:19.876"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:19.878" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:42:19.878" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:42:19.876" endtime="20231121 01:42:19.878"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:19.879" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:19.878" endtime="20231121 01:42:19.879"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:19.880" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:42:19.879" endtime="20231121 01:42:19.880"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:19.880" endtime="20231121 01:42:19.881"/>
</kw>
<status status="PASS" starttime="20231121 01:42:19.880" endtime="20231121 01:42:19.881"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:42:19.882" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:42:19.882" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:42:19.881" endtime="20231121 01:42:19.882"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:42:19.883" endtime="20231121 01:42:19.883"/>
</return>
<msg timestamp="20231121 01:42:19.883" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:42:19.715" endtime="20231121 01:42:19.883"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:42:19.884" endtime="20231121 01:42:19.884"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:19.886" endtime="20231121 01:42:19.887"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:19.887" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:20.028" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:19 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:19.887" endtime="20231121 01:42:20.028"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.032" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:20.029" endtime="20231121 01:42:20.032"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.038" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:20.033" endtime="20231121 01:42:20.038"/>
</kw>
<status status="PASS" starttime="20231121 01:42:19.886" endtime="20231121 01:42:20.038"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.040" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:20.039" endtime="20231121 01:42:20.040"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.043" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:20.040" endtime="20231121 01:42:20.043"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.044" endtime="20231121 01:42:20.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.049" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:20.049" endtime="20231121 01:42:20.049"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.050" endtime="20231121 01:42:20.050"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.051" endtime="20231121 01:42:20.052"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:20.052" endtime="20231121 01:42:20.052"/>
</return>
<status status="PASS" starttime="20231121 01:42:20.039" endtime="20231121 01:42:20.052"/>
</kw>
<status status="PASS" starttime="20231121 01:42:19.886" endtime="20231121 01:42:20.052"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.054" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:20.053" endtime="20231121 01:42:20.054"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.056" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:20.054" endtime="20231121 01:42:20.057"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.057" endtime="20231121 01:42:20.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.058" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:20.058" endtime="20231121 01:42:20.058"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.059" endtime="20231121 01:42:20.059"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.059" endtime="20231121 01:42:20.060"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:20.060" endtime="20231121 01:42:20.060"/>
</return>
<status status="PASS" starttime="20231121 01:42:20.053" endtime="20231121 01:42:20.061"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.062" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:20.061" endtime="20231121 01:42:20.062"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.064" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:20.062" endtime="20231121 01:42:20.065"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.633" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:20.634" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:20.065" endtime="20231121 01:42:20.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.634" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:20.634" endtime="20231121 01:42:20.635"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.635" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:20.635" endtime="20231121 01:42:20.635"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.636" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:20.635" endtime="20231121 01:42:20.636"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:20.636" endtime="20231121 01:42:20.636"/>
</return>
<msg timestamp="20231121 01:42:20.636" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:20.061" endtime="20231121 01:42:20.636"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:20.637" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:20.637" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:42:20.637" endtime="20231121 01:42:20.638"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:20.638" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:42:20.638" endtime="20231121 01:42:20.638"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:20.639" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231121 01:42:20.638" endtime="20231121 01:42:20.639"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:20.640" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231121 01:42:20.639" endtime="20231121 01:42:20.640"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:20.641" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:42:20.640" endtime="20231121 01:42:20.641"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:20.641" endtime="20231121 01:42:20.642"/>
</kw>
<status status="PASS" starttime="20231121 01:42:20.641" endtime="20231121 01:42:20.642"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:20.642" endtime="20231121 01:42:20.643"/>
</return>
<msg timestamp="20231121 01:42:20.643" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:42:19.885" endtime="20231121 01:42:20.644"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:20.647" endtime="20231121 01:42:20.648"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:20.648" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:20.796" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:19 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:20.648" endtime="20231121 01:42:20.796"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.800" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:20.796" endtime="20231121 01:42:20.800"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.807" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:20.800" endtime="20231121 01:42:20.807"/>
</kw>
<status status="PASS" starttime="20231121 01:42:20.645" endtime="20231121 01:42:20.807"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.809" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:20.808" endtime="20231121 01:42:20.809"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.813" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:20.809" endtime="20231121 01:42:20.813"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.814" endtime="20231121 01:42:20.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.818" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:20.818" endtime="20231121 01:42:20.818"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.819" endtime="20231121 01:42:20.819"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.820" endtime="20231121 01:42:20.820"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:20.820" endtime="20231121 01:42:20.821"/>
</return>
<status status="PASS" starttime="20231121 01:42:20.808" endtime="20231121 01:42:20.821"/>
</kw>
<status status="PASS" starttime="20231121 01:42:20.644" endtime="20231121 01:42:20.821"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.822" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:20.822" endtime="20231121 01:42:20.823"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.825" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:20.823" endtime="20231121 01:42:20.825"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.826" endtime="20231121 01:42:20.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.827" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:20.827" endtime="20231121 01:42:20.828"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.828" endtime="20231121 01:42:20.829"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.829" endtime="20231121 01:42:20.830"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:20.830" endtime="20231121 01:42:20.830"/>
</return>
<status status="PASS" starttime="20231121 01:42:20.821" endtime="20231121 01:42:20.830"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.831" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:42:20.831" endtime="20231121 01:42:20.832"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:20.835" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:42:20.832" endtime="20231121 01:42:20.835"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:20.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.835" endtime="20231121 01:42:20.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:20.842" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:20.842" endtime="20231121 01:42:20.842"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.842" endtime="20231121 01:42:20.843"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:20.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:20.844" endtime="20231121 01:42:20.844"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:20.844" endtime="20231121 01:42:20.845"/>
</return>
<status status="PASS" starttime="20231121 01:42:20.830" endtime="20231121 01:42:20.845"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:20.846" endtime="20231121 01:42:20.846"/>
</kw>
<status status="PASS" starttime="20231121 01:42:20.845" endtime="20231121 01:42:20.846"/>
</kw>
<status status="PASS" starttime="20231121 01:42:19.885" endtime="20231121 01:42:20.846"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:20.849" endtime="20231121 01:42:20.849"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:20.850" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:20.996" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:20 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:20.850" endtime="20231121 01:42:20.996"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.001" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:20.997" endtime="20231121 01:42:21.001"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.007" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:21.001" endtime="20231121 01:42:21.007"/>
</kw>
<status status="PASS" starttime="20231121 01:42:20.848" endtime="20231121 01:42:21.007"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.009" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:21.008" endtime="20231121 01:42:21.009"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.013" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:21.009" endtime="20231121 01:42:21.013"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.013" endtime="20231121 01:42:21.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.018" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:21.018" endtime="20231121 01:42:21.018"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.019" endtime="20231121 01:42:21.019"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.019" endtime="20231121 01:42:21.020"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:21.020" endtime="20231121 01:42:21.020"/>
</return>
<status status="PASS" starttime="20231121 01:42:21.008" endtime="20231121 01:42:21.020"/>
</kw>
<status status="PASS" starttime="20231121 01:42:20.848" endtime="20231121 01:42:21.021"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.022" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:21.021" endtime="20231121 01:42:21.022"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.025" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:21.022" endtime="20231121 01:42:21.025"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.025" endtime="20231121 01:42:21.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.027" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:21.026" endtime="20231121 01:42:21.027"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.027" endtime="20231121 01:42:21.028"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.028" endtime="20231121 01:42:21.029"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:21.029" endtime="20231121 01:42:21.029"/>
</return>
<status status="PASS" starttime="20231121 01:42:21.021" endtime="20231121 01:42:21.029"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.030" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:21.030" endtime="20231121 01:42:21.031"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.033" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:21.031" endtime="20231121 01:42:21.033"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.607" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:21.608" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:21.034" endtime="20231121 01:42:21.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.608" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:21.608" endtime="20231121 01:42:21.609"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.609" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:21.609" endtime="20231121 01:42:21.609"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.610" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:21.609" endtime="20231121 01:42:21.610"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:21.610" endtime="20231121 01:42:21.610"/>
</return>
<msg timestamp="20231121 01:42:21.611" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:21.029" endtime="20231121 01:42:21.611"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:21.611" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:21.611" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:42:21.611" endtime="20231121 01:42:21.612"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:21.612" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:42:21.612" endtime="20231121 01:42:21.612"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:21.613" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:42:21.612" endtime="20231121 01:42:21.613"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:21.614" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:42:21.613" endtime="20231121 01:42:21.614"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:21.615" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:42:21.614" endtime="20231121 01:42:21.615"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:21.616" endtime="20231121 01:42:21.616"/>
</kw>
<status status="PASS" starttime="20231121 01:42:21.615" endtime="20231121 01:42:21.616"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:21.617" endtime="20231121 01:42:21.617"/>
</return>
<msg timestamp="20231121 01:42:21.617" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:42:20.847" endtime="20231121 01:42:21.617"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:21.618" endtime="20231121 01:42:21.620"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:21.621" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:21.771" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:20 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:21.620" endtime="20231121 01:42:21.772"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.776" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:21.772" endtime="20231121 01:42:21.776"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.783" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:21.776" endtime="20231121 01:42:21.783"/>
</kw>
<status status="PASS" starttime="20231121 01:42:21.618" endtime="20231121 01:42:21.784"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.785" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:21.784" endtime="20231121 01:42:21.785"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.788" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:21.785" endtime="20231121 01:42:21.788"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.788" endtime="20231121 01:42:21.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.793" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:21.793" endtime="20231121 01:42:21.794"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.794" endtime="20231121 01:42:21.795"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.795" endtime="20231121 01:42:21.796"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:21.796" endtime="20231121 01:42:21.796"/>
</return>
<status status="PASS" starttime="20231121 01:42:21.784" endtime="20231121 01:42:21.796"/>
</kw>
<status status="PASS" starttime="20231121 01:42:21.617" endtime="20231121 01:42:21.797"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.798" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:21.797" endtime="20231121 01:42:21.798"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.801" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:21.798" endtime="20231121 01:42:21.801"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.801" endtime="20231121 01:42:21.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.803" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:21.802" endtime="20231121 01:42:21.803"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.803" endtime="20231121 01:42:21.804"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.804" endtime="20231121 01:42:21.805"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:21.805" endtime="20231121 01:42:21.805"/>
</return>
<status status="PASS" starttime="20231121 01:42:21.797" endtime="20231121 01:42:21.806"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.807" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:42:21.806" endtime="20231121 01:42:21.807"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:21.810" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:42:21.807" endtime="20231121 01:42:21.810"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:21.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.810" endtime="20231121 01:42:21.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:21.816" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:21.816" endtime="20231121 01:42:21.817"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.817" endtime="20231121 01:42:21.818"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:21.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:21.818" endtime="20231121 01:42:21.819"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:21.819" endtime="20231121 01:42:21.819"/>
</return>
<status status="PASS" starttime="20231121 01:42:21.806" endtime="20231121 01:42:21.819"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:21.820" endtime="20231121 01:42:21.820"/>
</kw>
<status status="PASS" starttime="20231121 01:42:21.819" endtime="20231121 01:42:21.821"/>
</kw>
<status status="PASS" starttime="20231121 01:42:20.847" endtime="20231121 01:42:21.821"/>
</kw>
<status status="PASS" starttime="20231121 01:41:55.058" endtime="20231121 01:42:21.821"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:42:27.823" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20231121 01:42:21.822" endtime="20231121 01:42:27.824"/>
</kw>
<kw name="Check Order Status">
<arg>close</arg>
<kw name="Get Order By Order Number Exist" library="rest_res">
<var>${found_order}</var>
<arg>order_number=${order_number}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:27.830" endtime="20231121 01:42:27.830"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:27.831" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:27.980" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:21 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:27.831" endtime="20231121 01:42:27.980"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:27.984" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:27.980" endtime="20231121 01:42:27.985"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:27.992" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:27.985" endtime="20231121 01:42:27.992"/>
</kw>
<status status="PASS" starttime="20231121 01:42:27.829" endtime="20231121 01:42:27.992"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:27.994" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:27.993" endtime="20231121 01:42:27.994"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:27.997" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:27.995" endtime="20231121 01:42:27.997"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:28.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:27.998" endtime="20231121 01:42:28.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:28.002" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:28.002" endtime="20231121 01:42:28.002"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:28.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:28.003" endtime="20231121 01:42:28.003"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:28.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:28.003" endtime="20231121 01:42:28.004"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:28.004" endtime="20231121 01:42:28.004"/>
</return>
<status status="PASS" starttime="20231121 01:42:27.992" endtime="20231121 01:42:28.005"/>
</kw>
<status status="PASS" starttime="20231121 01:42:27.828" endtime="20231121 01:42:28.005"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:28.006" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:28.006" endtime="20231121 01:42:28.006"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:28.009" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:28.007" endtime="20231121 01:42:28.009"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:28.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:28.010" endtime="20231121 01:42:28.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:28.011" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:28.011" endtime="20231121 01:42:28.012"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:28.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:28.012" endtime="20231121 01:42:28.012"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:28.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:28.013" endtime="20231121 01:42:28.013"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:28.013" endtime="20231121 01:42:28.014"/>
</return>
<status status="PASS" starttime="20231121 01:42:28.005" endtime="20231121 01:42:28.014"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:28.015" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:28.015" endtime="20231121 01:42:28.015"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:28.018" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:28.016" endtime="20231121 01:42:28.018"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:28.022" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:42:28.022" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:28.018" endtime="20231121 01:42:28.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:28.023" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:28.023" endtime="20231121 01:42:28.023"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:28.024" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:28.024" endtime="20231121 01:42:28.024"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:28.025" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:42:28.025" endtime="20231121 01:42:28.025"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:28.025" endtime="20231121 01:42:28.026"/>
</return>
<status status="PASS" starttime="20231121 01:42:28.014" endtime="20231121 01:42:28.026"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:28.027" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:28.027" endtime="20231121 01:42:28.027"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:28.030" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:28.028" endtime="20231121 01:42:28.030"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:30.312" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:42:30.312" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:28.030" endtime="20231121 01:42:30.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.314" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:42:30.313" endtime="20231121 01:42:30.315"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.316" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:30.315" endtime="20231121 01:42:30.316"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.317" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:30.316" endtime="20231121 01:42:30.317"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:30.317" endtime="20231121 01:42:30.317"/>
</return>
<msg timestamp="20231121 01:42:30.318" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:28.026" endtime="20231121 01:42:30.318"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:30.319" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:42:30.319" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:30.318" endtime="20231121 01:42:30.321"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:30.322" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:30.321" endtime="20231121 01:42:30.322"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:30.323" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:42:30.323" endtime="20231121 01:42:30.323"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:30.324" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:42:30.323" endtime="20231121 01:42:30.325"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.326" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:42:30.325" endtime="20231121 01:42:30.326"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:30.330" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:42:30.327" endtime="20231121 01:42:30.330"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:30.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.330" endtime="20231121 01:42:30.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.338" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:30.338" endtime="20231121 01:42:30.338"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.338" endtime="20231121 01:42:30.339"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.339" endtime="20231121 01:42:30.340"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:30.340" endtime="20231121 01:42:30.340"/>
</return>
<status status="PASS" starttime="20231121 01:42:30.325" endtime="20231121 01:42:30.341"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:30.341" endtime="20231121 01:42:30.342"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.341" endtime="20231121 01:42:30.342"/>
</kw>
<status status="PASS" starttime="20231121 01:42:27.827" endtime="20231121 01:42:30.342"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:42:30.343" endtime="20231121 01:42:30.343"/>
</return>
<msg timestamp="20231121 01:42:30.343" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:42:30.344" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:42:30.342" endtime="20231121 01:42:30.344"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:30.345" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:42:30.344" endtime="20231121 01:42:30.345"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:30.347" level="INFO">${header} = {'token': '5ABD99746FF94377831C6416D3829C82'}</msg>
<status status="PASS" starttime="20231121 01:42:30.346" endtime="20231121 01:42:30.347"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:30.374" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '5ABD99746FF94377831C6416D3829C82', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:42:30.375" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-0hZWbpJF31BoeWj6KfxY9z9HgOI"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"486D939CD5DC44A7B82A97AEB61F772E"} 
 </msg>
<msg timestamp="20231121 01:42:30.375" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.347" endtime="20231121 01:42:30.375"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:30.375" endtime="20231121 01:42:30.376"/>
</return>
<msg timestamp="20231121 01:42:30.376" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.346" endtime="20231121 01:42:30.376"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:30.377" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:30.376" endtime="20231121 01:42:30.378"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:30.378" endtime="20231121 01:42:30.378"/>
</return>
<msg timestamp="20231121 01:42:30.379" level="INFO">${token_resp} = 486D939CD5DC44A7B82A97AEB61F772E</msg>
<status status="PASS" starttime="20231121 01:42:30.345" endtime="20231121 01:42:30.379"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:42:30.380" level="INFO">${token} = 486D939CD5DC44A7B82A97AEB61F772E</msg>
<status status="PASS" starttime="20231121 01:42:30.379" endtime="20231121 01:42:30.380"/>
</kw>
<status status="PASS" starttime="20231121 01:42:27.827" endtime="20231121 01:42:30.380"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>order_number=${order_number}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:30.381" level="INFO">${search_condition} = {'order_number': '170050206633'}</msg>
<status status="PASS" starttime="20231121 01:42:30.381" endtime="20231121 01:42:30.381"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/get</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:30.383" level="INFO">${header} = {'token': '486D939CD5DC44A7B82A97AEB61F772E'}</msg>
<status status="PASS" starttime="20231121 01:42:30.383" endtime="20231121 01:42:30.384"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:30.405" level="INFO">POST Request : url=http://localhost:31700/api/order/get 
 path_url=/api/order/get 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '486D939CD5DC44A7B82A97AEB61F772E', 'Content-Length': '32', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050206633"}' 
 </msg>
<msg timestamp="20231121 01:42:30.406" level="INFO">POST Response : url=http://localhost:31700/api/order/get 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1252', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"4e4-Gi4VD2hz09AR0hY6TOk43wDNDXU"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":{"id":33,"order_number":"170050206633","plate_number":"京A12345","back_plate_number":"","driver_name":"","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":20.23,"m_weight":49.21,"enter_weight":0,"reg_info":{"operator_name":"abc","operator_time":"2023-11-21 01:41:13"},"call_info":{"operator_name":"abc","operator_time":"2023-11-21 01:41:13"},"confirm_info":{"operator_name":"abc","operator_time":"2023-11-21 01:41:55"},"seal_no":"","history_records":[{"node_name":"一次称重","node_caller":"自动","occour_time":"2023-11-21 01:41:41","id":55},{"node_name":"二次称重","node_caller":"自动","occour_time":"2023-11-21 01:42:16","id":56}],"order_attachs":[{"att_name":"上磅照片","att_path":"/files/660D1768A16F48E9AB577CE3B4821531.txt","id":158},{"att_name":"过磅录像","att_path":"","id":159},{"att_name":"过磅录像","att_path":"","id":160},{"att_name":"上磅照片","att_path":"/files/2DDF92BA9F0D49218A8D9CDF5C6D3B88.txt","id":161},{"att_name":"过磅录像","att_path":"","id":162},{"att_name":"过磅录像","att_path":"","id":163}],"p_time":"2023-11-21 01:41:41","m_time":"2023-11-21 01:42:16","is_sale":false,"status":100,"company_name":"京东","stuff_from":""}} 
 </msg>
<msg timestamp="20231121 01:42:30.406" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.384" endtime="20231121 01:42:30.406"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:30.406" endtime="20231121 01:42:30.407"/>
</return>
<msg timestamp="20231121 01:42:30.407" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.382" endtime="20231121 01:42:30.407"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:30.408" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:30.407" endtime="20231121 01:42:30.409"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:30.409" endtime="20231121 01:42:30.409"/>
</return>
<msg timestamp="20231121 01:42:30.410" level="INFO">${search_result} = {'id': 33, 'order_number': '170050206633', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG',...</msg>
<status status="PASS" starttime="20231121 01:42:30.382" endtime="20231121 01:42:30.410"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:42:30.410" endtime="20231121 01:42:30.410"/>
</return>
<msg timestamp="20231121 01:42:30.411" level="INFO">${found_order} = {'id': 33, 'order_number': '170050206633', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG',...</msg>
<status status="PASS" starttime="20231121 01:42:27.826" endtime="20231121 01:42:30.411"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${found_order}[plate_number]</arg>
<arg>${plate_no}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231121 01:42:30.411" endtime="20231121 01:42:30.412"/>
</kw>
<if>
<branch type="IF" condition="$open_or_close == 'open'">
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231121 01:42:30.412" endtime="20231121 01:42:30.413"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:42:30.412" endtime="20231121 01:42:30.413"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 01:42:30.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.413" endtime="20231121 01:42:30.414"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.413" endtime="20231121 01:42:30.414"/>
</branch>
<status status="PASS" starttime="20231121 01:42:30.412" endtime="20231121 01:42:30.414"/>
</if>
<status status="PASS" starttime="20231121 01:42:27.825" endtime="20231121 01:42:30.414"/>
</kw>
<kw name="Check Weight Push">
<kw name="Get Last Req" library="rest_res">
<var>${api_sent}</var>
<kw name="GET" library="RequestsLibrary">
<var>${result}</var>
<arg>url=http://localhost:5001/check_call</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20231121 01:42:30.420" level="INFO">GET Request : url=http://localhost:5001/check_call 
 path_url=/check_call 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231121 01:42:30.421" level="INFO">GET Response : url=http://localhost:5001/check_call 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/3.0.1 Python/3.9.6', 'Date': 'Mon, 20 Nov 2023 17:42:30 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '239', 'Connection': 'close'} 
 body={"path": "/pa_web/pa_rest/push_weight", "req": {"id": "123456", "plateNo": "\u4eacA12345", "pWeight": 20.23, "mWeight": 49.21, "jWeight": 28.98, "pTime": "2023-11-21 01:41:41", "mTime": "2023-11-21 01:42:16", "ticketNo": "", "sealNo": ""}} 
 </msg>
<msg timestamp="20231121 01:42:30.421" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.415" endtime="20231121 01:42:30.421"/>
</kw>
<return>
<value>${result.json()}[req]</value>
<status status="PASS" starttime="20231121 01:42:30.421" endtime="20231121 01:42:30.422"/>
</return>
<msg timestamp="20231121 01:42:30.423" level="INFO">${api_sent} = {'id': '123456', 'plateNo': '京A12345', 'pWeight': 20.23, 'mWeight': 49.21, 'jWeight': 28.98, 'pTime': '2023-11-21 01:41:41', 'mTime': '2023-11-21 01:42:16', 'ticketNo': '', 'sealNo': ''}</msg>
<status status="PASS" starttime="20231121 01:42:30.415" endtime="20231121 01:42:30.423"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${api_sent}[plateNo]</arg>
<arg>${plate_no}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231121 01:42:30.423" endtime="20231121 01:42:30.424"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${api_sent}[pWeight]</arg>
<arg>${p_weight}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231121 01:42:30.424" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.424" endtime="20231121 01:42:30.425"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${api_sent}[mWeight]</arg>
<arg>${m_weight}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231121 01:42:30.426" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 01:42:30.425" endtime="20231121 01:42:30.426"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.415" endtime="20231121 01:42:30.426"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Del Order Try</arg>
<arg>${order_number}</arg>
<arg>AND</arg>
<arg>Stop Mock Service</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Del Order Try" library="rest_res">
<arg>${order_number}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:30.429" endtime="20231121 01:42:30.430"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:30.431" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:30.574" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:27 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:30.430" endtime="20231121 01:42:30.574"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:30.579" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:30.575" endtime="20231121 01:42:30.579"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:30.586" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:30.579" endtime="20231121 01:42:30.586"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.429" endtime="20231121 01:42:30.586"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.588" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:30.587" endtime="20231121 01:42:30.588"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:30.592" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:30.588" endtime="20231121 01:42:30.592"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:30.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.592" endtime="20231121 01:42:30.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.597" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:30.597" endtime="20231121 01:42:30.598"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.598" endtime="20231121 01:42:30.598"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.599" endtime="20231121 01:42:30.599"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:30.600" endtime="20231121 01:42:30.600"/>
</return>
<status status="PASS" starttime="20231121 01:42:30.586" endtime="20231121 01:42:30.600"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.428" endtime="20231121 01:42:30.600"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.601" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:30.601" endtime="20231121 01:42:30.601"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:30.604" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:30.602" endtime="20231121 01:42:30.604"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:30.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.605" endtime="20231121 01:42:30.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.606" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:30.606" endtime="20231121 01:42:30.606"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.606" endtime="20231121 01:42:30.607"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:30.607" endtime="20231121 01:42:30.608"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:30.608" endtime="20231121 01:42:30.608"/>
</return>
<status status="PASS" starttime="20231121 01:42:30.600" endtime="20231121 01:42:30.609"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.610" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:30.610" endtime="20231121 01:42:30.610"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:30.613" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:30.610" endtime="20231121 01:42:30.613"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:30.616" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:42:30.616" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:30.614" endtime="20231121 01:42:30.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.617" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:30.617" endtime="20231121 01:42:30.617"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.618" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:30.617" endtime="20231121 01:42:30.618"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:30.619" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:42:30.618" endtime="20231121 01:42:30.619"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:30.619" endtime="20231121 01:42:30.619"/>
</return>
<status status="PASS" starttime="20231121 01:42:30.609" endtime="20231121 01:42:30.620"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:30.621" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:30.620" endtime="20231121 01:42:30.621"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:30.624" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:30.621" endtime="20231121 01:42:30.624"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:32.886" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:42:32.887" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:30.624" endtime="20231121 01:42:32.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:32.888" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:42:32.887" endtime="20231121 01:42:32.888"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:32.889" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:32.888" endtime="20231121 01:42:32.889"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:32.889" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:32.889" endtime="20231121 01:42:32.890"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:32.890" endtime="20231121 01:42:32.890"/>
</return>
<msg timestamp="20231121 01:42:32.890" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:30.620" endtime="20231121 01:42:32.890"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:32.891" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:42:32.891" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:32.891" endtime="20231121 01:42:32.891"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:32.892" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:32.891" endtime="20231121 01:42:32.892"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:32.894" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:42:32.893" endtime="20231121 01:42:32.894"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:32.895" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:42:32.894" endtime="20231121 01:42:32.896"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:32.897" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:42:32.896" endtime="20231121 01:42:32.897"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:32.901" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:42:32.897" endtime="20231121 01:42:32.901"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:32.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:32.902" endtime="20231121 01:42:32.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:32.910" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:32.909" endtime="20231121 01:42:32.910"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:32.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:32.910" endtime="20231121 01:42:32.911"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:32.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:32.911" endtime="20231121 01:42:32.912"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:32.912" endtime="20231121 01:42:32.912"/>
</return>
<status status="PASS" starttime="20231121 01:42:32.896" endtime="20231121 01:42:32.913"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:32.913" endtime="20231121 01:42:32.914"/>
</kw>
<status status="PASS" starttime="20231121 01:42:32.913" endtime="20231121 01:42:32.914"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.428" endtime="20231121 01:42:32.914"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:42:32.915" endtime="20231121 01:42:32.915"/>
</return>
<msg timestamp="20231121 01:42:32.915" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:42:32.916" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:42:32.914" endtime="20231121 01:42:32.916"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:32.917" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:42:32.916" endtime="20231121 01:42:32.917"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:32.919" level="INFO">${header} = {'token': '486D939CD5DC44A7B82A97AEB61F772E'}</msg>
<status status="PASS" starttime="20231121 01:42:32.918" endtime="20231121 01:42:32.919"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:32.960" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '486D939CD5DC44A7B82A97AEB61F772E', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:42:32.961" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-WPmzOnaFONO2VvTjBqRhMkaF2Rs"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"AF6FC8B96D314AA28D461DCA9CF6F410"} 
 </msg>
<msg timestamp="20231121 01:42:32.961" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:32.919" endtime="20231121 01:42:32.961"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:32.961" endtime="20231121 01:42:32.961"/>
</return>
<msg timestamp="20231121 01:42:32.962" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:32.918" endtime="20231121 01:42:32.962"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:32.963" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:32.962" endtime="20231121 01:42:32.964"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:32.964" endtime="20231121 01:42:32.964"/>
</return>
<msg timestamp="20231121 01:42:32.965" level="INFO">${token_resp} = AF6FC8B96D314AA28D461DCA9CF6F410</msg>
<status status="PASS" starttime="20231121 01:42:32.917" endtime="20231121 01:42:32.965"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:42:32.966" level="INFO">${token} = AF6FC8B96D314AA28D461DCA9CF6F410</msg>
<status status="PASS" starttime="20231121 01:42:32.965" endtime="20231121 01:42:32.966"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.428" endtime="20231121 01:42:32.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${del_req}</var>
<arg>order_number=${order_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:32.967" level="INFO">${del_req} = {'order_number': '170050206633'}</msg>
<status status="PASS" starttime="20231121 01:42:32.966" endtime="20231121 01:42:32.967"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<arg>/order/del</arg>
<arg>${del_req}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:32.969" level="INFO">${header} = {'token': 'AF6FC8B96D314AA28D461DCA9CF6F410'}</msg>
<status status="PASS" starttime="20231121 01:42:32.968" endtime="20231121 01:42:32.969"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:32.995" level="INFO">POST Request : url=http://localhost:31700/api/order/del 
 path_url=/api/order/del 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'AF6FC8B96D314AA28D461DCA9CF6F410', 'Content-Length': '32', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050206633"}' 
 </msg>
<msg timestamp="20231121 01:42:32.995" level="INFO">POST Response : url=http://localhost:31700/api/order/del 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:42:32.995" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:32.969" endtime="20231121 01:42:32.995"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:32.995" endtime="20231121 01:42:32.996"/>
</return>
<status status="PASS" starttime="20231121 01:42:32.968" endtime="20231121 01:42:32.996"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.427" endtime="20231121 01:42:32.996"/>
</kw>
<kw name="Stop Mock Service" library="rest_res">
<kw name="Terminate Process" library="Process">
<arg>mock_server_process</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20231121 01:42:32.998" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20231121 01:42:33.103" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20231121 01:42:32.997" endtime="20231121 01:42:33.103"/>
</kw>
<kw name="Get Process Result" library="Process">
<var>${output}</var>
<arg>mock_server_process</arg>
<arg>stderr=True</arg>
<doc>Returns the specified `result object` or some of its attributes.</doc>
<msg timestamp="20231121 01:42:33.105" level="INFO">${output} = [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1...</msg>
<status status="PASS" starttime="20231121 01:42:33.104" endtime="20231121 01:42:33.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.106" level="INFO">[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://26.26.26.1:5001
[33mPress CTRL+C to quit[0m
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 633-514-262
192.168.0.101 - - [21/Nov/2023 01:41:13] "POST /pa_web/pa_rest/vehicle_info?token=abc HTTP/1.1" 200 -
192.168.0.101 - - [21/Nov/2023 01:41:17] "POST /pa_web/pa_rest/call_vehicle?token=abc HTTP/1.1" 200 -
127.0.0.1 - - [21/Nov/2023 01:41:19] "GET /check_call HTTP/1.1" 200 -
192.168.0.101 - - [21/Nov/2023 01:42:17] "POST /pa_web/pa_rest/vehicle_info?token=abc HTTP/1.1" 200 -
192.168.0.101 - - [21/Nov/2023 01:42:17] "POST /pa_web/pa_rest/push_weight?token=abc HTTP/1.1" 200 -
127.0.0.1 - - [21/Nov/2023 01:42:30] "GET /check_call HTTP/1.1" 200 -</msg>
<status status="PASS" starttime="20231121 01:42:33.105" endtime="20231121 01:42:33.107"/>
</kw>
<status status="PASS" starttime="20231121 01:42:32.996" endtime="20231121 01:42:33.107"/>
</kw>
<status status="PASS" starttime="20231121 01:42:30.427" endtime="20231121 01:42:33.107"/>
</kw>
<status status="PASS" starttime="20231121 01:40:59.140" endtime="20231121 01:42:33.108"/>
</test>
<test id="s1-s1-s1-s2-t2" name="Only Scale p_weight Twice" line="35">
<kw name="Create A Order For Scale" type="SETUP">
<kw name="Del Exist Order">
<kw name="Search Order" library="rest_res">
<var>${plate_result}</var>
<arg>${plate_no}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:33.114" endtime="20231121 01:42:33.115"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:33.115" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:33.263" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:30 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:33.115" endtime="20231121 01:42:33.263"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:33.268" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:33.264" endtime="20231121 01:42:33.268"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:33.274" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:33.268" endtime="20231121 01:42:33.275"/>
</kw>
<status status="PASS" starttime="20231121 01:42:33.113" endtime="20231121 01:42:33.275"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.276" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:33.276" endtime="20231121 01:42:33.276"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:33.280" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:33.276" endtime="20231121 01:42:33.280"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:33.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:33.280" endtime="20231121 01:42:33.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.284" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:33.284" endtime="20231121 01:42:33.285"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:33.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:33.285" endtime="20231121 01:42:33.286"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:33.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:33.286" endtime="20231121 01:42:33.287"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:33.287" endtime="20231121 01:42:33.287"/>
</return>
<status status="PASS" starttime="20231121 01:42:33.275" endtime="20231121 01:42:33.287"/>
</kw>
<status status="PASS" starttime="20231121 01:42:33.113" endtime="20231121 01:42:33.288"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.289" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:33.288" endtime="20231121 01:42:33.289"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:33.292" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:33.289" endtime="20231121 01:42:33.292"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:33.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:33.292" endtime="20231121 01:42:33.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.294" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:33.293" endtime="20231121 01:42:33.294"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:33.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:33.294" endtime="20231121 01:42:33.295"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:33.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:33.295" endtime="20231121 01:42:33.296"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:33.296" endtime="20231121 01:42:33.296"/>
</return>
<status status="PASS" starttime="20231121 01:42:33.288" endtime="20231121 01:42:33.297"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.298" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:33.297" endtime="20231121 01:42:33.298"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:33.301" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:33.298" endtime="20231121 01:42:33.301"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:33.304" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:42:33.305" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:33.301" endtime="20231121 01:42:33.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.306" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:33.305" endtime="20231121 01:42:33.306"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:33.307" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:33.306" endtime="20231121 01:42:33.307"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:33.308" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:42:33.308" endtime="20231121 01:42:33.309"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:33.309" endtime="20231121 01:42:33.309"/>
</return>
<status status="PASS" starttime="20231121 01:42:33.297" endtime="20231121 01:42:33.310"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:33.311" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:33.311" endtime="20231121 01:42:33.311"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:33.314" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:33.311" endtime="20231121 01:42:33.314"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:35.594" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:42:35.594" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:33.315" endtime="20231121 01:42:35.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.595" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:42:35.595" endtime="20231121 01:42:35.595"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.596" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:35.595" endtime="20231121 01:42:35.596"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.597" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:35.596" endtime="20231121 01:42:35.597"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:35.597" endtime="20231121 01:42:35.597"/>
</return>
<msg timestamp="20231121 01:42:35.597" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:33.310" endtime="20231121 01:42:35.597"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:35.598" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:42:35.598" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:35.597" endtime="20231121 01:42:35.598"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:35.598" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:35.598" endtime="20231121 01:42:35.599"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:35.599" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:42:35.599" endtime="20231121 01:42:35.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:35.600" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:42:35.600" endtime="20231121 01:42:35.601"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.602" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:42:35.601" endtime="20231121 01:42:35.602"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:35.607" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:42:35.603" endtime="20231121 01:42:35.607"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:35.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.608" endtime="20231121 01:42:35.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.619" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:35.618" endtime="20231121 01:42:35.619"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.619" endtime="20231121 01:42:35.620"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.620" endtime="20231121 01:42:35.621"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:35.621" endtime="20231121 01:42:35.622"/>
</return>
<status status="PASS" starttime="20231121 01:42:35.601" endtime="20231121 01:42:35.622"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:35.623" endtime="20231121 01:42:35.623"/>
</kw>
<status status="PASS" starttime="20231121 01:42:35.622" endtime="20231121 01:42:35.623"/>
</kw>
<status status="PASS" starttime="20231121 01:42:33.113" endtime="20231121 01:42:35.623"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:42:35.624" endtime="20231121 01:42:35.624"/>
</return>
<msg timestamp="20231121 01:42:35.624" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:42:35.624" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:42:35.623" endtime="20231121 01:42:35.625"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:35.625" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:42:35.625" endtime="20231121 01:42:35.626"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:35.628" level="INFO">${header} = {'token': 'AF6FC8B96D314AA28D461DCA9CF6F410'}</msg>
<status status="PASS" starttime="20231121 01:42:35.627" endtime="20231121 01:42:35.628"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:35.653" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'AF6FC8B96D314AA28D461DCA9CF6F410', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:42:35.653" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:35 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-6fGfr9ghrxkrts3hKmQviITDlFQ"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"1D62093AED634BE4991B89278748B26C"} 
 </msg>
<msg timestamp="20231121 01:42:35.654" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:35.628" endtime="20231121 01:42:35.654"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:35.654" endtime="20231121 01:42:35.655"/>
</return>
<msg timestamp="20231121 01:42:35.655" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:35.626" endtime="20231121 01:42:35.655"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:35.656" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:35.656" endtime="20231121 01:42:35.657"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:35.657" endtime="20231121 01:42:35.657"/>
</return>
<msg timestamp="20231121 01:42:35.658" level="INFO">${token_resp} = 1D62093AED634BE4991B89278748B26C</msg>
<status status="PASS" starttime="20231121 01:42:35.626" endtime="20231121 01:42:35.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:42:35.659" level="INFO">${token} = 1D62093AED634BE4991B89278748B26C</msg>
<status status="PASS" starttime="20231121 01:42:35.658" endtime="20231121 01:42:35.659"/>
</kw>
<status status="PASS" starttime="20231121 01:42:33.112" endtime="20231121 01:42:35.659"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:35.661" level="INFO">${search_condition} = {'plate_number': '京A12345', 'driver_phone': '', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231121 01:42:35.659" endtime="20231121 01:42:35.661"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:35.663" level="INFO">${header} = {'token': '1D62093AED634BE4991B89278748B26C'}</msg>
<status status="PASS" starttime="20231121 01:42:35.662" endtime="20231121 01:42:35.663"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:35.681" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '1D62093AED634BE4991B89278748B26C', 'Content-Length': '71', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "\\u4eacA12345", "driver_phone": "", "exp_status": 100}' 
 </msg>
<msg timestamp="20231121 01:42:35.681" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:35 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1a-cDYBqJ/Iqmf1jbwRIjDduJ9P1Vo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[]} 
 </msg>
<msg timestamp="20231121 01:42:35.681" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:35.663" endtime="20231121 01:42:35.681"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:35.682" endtime="20231121 01:42:35.682"/>
</return>
<msg timestamp="20231121 01:42:35.682" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:35.661" endtime="20231121 01:42:35.682"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:35.684" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:35.683" endtime="20231121 01:42:35.684"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:35.684" endtime="20231121 01:42:35.684"/>
</return>
<msg timestamp="20231121 01:42:35.685" level="INFO">${search_result} = []</msg>
<status status="PASS" starttime="20231121 01:42:35.661" endtime="20231121 01:42:35.685"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:42:35.685" endtime="20231121 01:42:35.686"/>
</return>
<msg timestamp="20231121 01:42:35.686" level="INFO">${plate_result} = []</msg>
<status status="PASS" starttime="20231121 01:42:33.111" endtime="20231121 01:42:35.686"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${plate_result_length}</var>
<arg>${plate_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231121 01:42:35.687" level="INFO">Length is 0</msg>
<msg timestamp="20231121 01:42:35.687" level="INFO">${plate_result_length} = 0</msg>
<status status="PASS" starttime="20231121 01:42:35.686" endtime="20231121 01:42:35.688"/>
</kw>
<if>
<branch type="IF" condition="${plate_result_length} &gt; 0">
<kw name="Del Order Try" library="rest_res">
<arg>${plate_result}[0][order_number]</arg>
<status status="NOT RUN" starttime="20231121 01:42:35.688" endtime="20231121 01:42:35.689"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:42:35.688" endtime="20231121 01:42:35.689"/>
</branch>
<status status="PASS" starttime="20231121 01:42:35.688" endtime="20231121 01:42:35.689"/>
</if>
<kw name="Search Order" library="rest_res">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:35.691" endtime="20231121 01:42:35.692"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:35.693" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:35.840" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:33 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:35.692" endtime="20231121 01:42:35.840"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:35.845" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:35.840" endtime="20231121 01:42:35.845"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:35.852" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:35.846" endtime="20231121 01:42:35.852"/>
</kw>
<status status="PASS" starttime="20231121 01:42:35.691" endtime="20231121 01:42:35.852"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.854" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:35.853" endtime="20231121 01:42:35.854"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:35.857" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:35.854" endtime="20231121 01:42:35.857"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:35.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.858" endtime="20231121 01:42:35.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.863" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:35.862" endtime="20231121 01:42:35.863"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.863" endtime="20231121 01:42:35.864"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.864" endtime="20231121 01:42:35.865"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:35.865" endtime="20231121 01:42:35.865"/>
</return>
<status status="PASS" starttime="20231121 01:42:35.853" endtime="20231121 01:42:35.866"/>
</kw>
<status status="PASS" starttime="20231121 01:42:35.691" endtime="20231121 01:42:35.866"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.867" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:35.866" endtime="20231121 01:42:35.867"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:35.870" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:35.867" endtime="20231121 01:42:35.870"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:35.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.870" endtime="20231121 01:42:35.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.872" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:35.871" endtime="20231121 01:42:35.872"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.872" endtime="20231121 01:42:35.873"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:35.873" endtime="20231121 01:42:35.873"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:35.874" endtime="20231121 01:42:35.874"/>
</return>
<status status="PASS" starttime="20231121 01:42:35.866" endtime="20231121 01:42:35.874"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.875" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:35.875" endtime="20231121 01:42:35.875"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:35.878" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:35.876" endtime="20231121 01:42:35.879"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:35.882" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:42:35.882" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:35.879" endtime="20231121 01:42:35.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.883" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:35.882" endtime="20231121 01:42:35.883"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.884" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:35.883" endtime="20231121 01:42:35.884"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:35.884" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:42:35.884" endtime="20231121 01:42:35.885"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:35.885" endtime="20231121 01:42:35.885"/>
</return>
<status status="PASS" starttime="20231121 01:42:35.874" endtime="20231121 01:42:35.885"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:35.886" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:35.886" endtime="20231121 01:42:35.887"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:35.889" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:35.887" endtime="20231121 01:42:35.889"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:38.181" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:42:38.181" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:35.889" endtime="20231121 01:42:38.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.182" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:42:38.182" endtime="20231121 01:42:38.182"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.183" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:38.182" endtime="20231121 01:42:38.183"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.183" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:38.183" endtime="20231121 01:42:38.183"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:38.183" endtime="20231121 01:42:38.184"/>
</return>
<msg timestamp="20231121 01:42:38.184" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:35.885" endtime="20231121 01:42:38.184"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:38.184" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:42:38.185" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:38.184" endtime="20231121 01:42:38.185"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:38.185" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:38.185" endtime="20231121 01:42:38.185"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:38.186" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:42:38.185" endtime="20231121 01:42:38.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:38.187" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:42:38.186" endtime="20231121 01:42:38.187"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.189" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:42:38.188" endtime="20231121 01:42:38.189"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:38.193" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:42:38.189" endtime="20231121 01:42:38.194"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:38.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.194" endtime="20231121 01:42:38.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.206" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:38.206" endtime="20231121 01:42:38.207"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.207" endtime="20231121 01:42:38.208"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.208" endtime="20231121 01:42:38.208"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:38.208" endtime="20231121 01:42:38.209"/>
</return>
<status status="PASS" starttime="20231121 01:42:38.187" endtime="20231121 01:42:38.209"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:38.210" endtime="20231121 01:42:38.210"/>
</kw>
<status status="PASS" starttime="20231121 01:42:38.209" endtime="20231121 01:42:38.210"/>
</kw>
<status status="PASS" starttime="20231121 01:42:35.690" endtime="20231121 01:42:38.211"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:42:38.211" endtime="20231121 01:42:38.211"/>
</return>
<msg timestamp="20231121 01:42:38.212" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:42:38.212" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:42:38.211" endtime="20231121 01:42:38.212"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:38.213" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:42:38.212" endtime="20231121 01:42:38.213"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:38.215" level="INFO">${header} = {'token': '1D62093AED634BE4991B89278748B26C'}</msg>
<status status="PASS" starttime="20231121 01:42:38.215" endtime="20231121 01:42:38.215"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:38.243" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '1D62093AED634BE4991B89278748B26C', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:42:38.243" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:38 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-GB1/8EHZdVMVJCJvQx8o0WrZ2RM"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"0245B6C619FB4DD79121A16D115AE775"} 
 </msg>
<msg timestamp="20231121 01:42:38.244" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:38.215" endtime="20231121 01:42:38.244"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:38.244" endtime="20231121 01:42:38.244"/>
</return>
<msg timestamp="20231121 01:42:38.245" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:38.214" endtime="20231121 01:42:38.245"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:38.246" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:38.245" endtime="20231121 01:42:38.246"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:38.247" endtime="20231121 01:42:38.247"/>
</return>
<msg timestamp="20231121 01:42:38.248" level="INFO">${token_resp} = 0245B6C619FB4DD79121A16D115AE775</msg>
<status status="PASS" starttime="20231121 01:42:38.213" endtime="20231121 01:42:38.248"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:42:38.249" level="INFO">${token} = 0245B6C619FB4DD79121A16D115AE775</msg>
<status status="PASS" starttime="20231121 01:42:38.248" endtime="20231121 01:42:38.249"/>
</kw>
<status status="PASS" starttime="20231121 01:42:35.690" endtime="20231121 01:42:38.249"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:38.250" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231121 01:42:38.249" endtime="20231121 01:42:38.250"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:38.253" level="INFO">${header} = {'token': '0245B6C619FB4DD79121A16D115AE775'}</msg>
<status status="PASS" starttime="20231121 01:42:38.252" endtime="20231121 01:42:38.253"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:38.271" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '0245B6C619FB4DD79121A16D115AE775', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231121 01:42:38.272" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:38 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1a-cDYBqJ/Iqmf1jbwRIjDduJ9P1Vo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[]} 
 </msg>
<msg timestamp="20231121 01:42:38.272" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:38.253" endtime="20231121 01:42:38.272"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:38.272" endtime="20231121 01:42:38.272"/>
</return>
<msg timestamp="20231121 01:42:38.273" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:38.251" endtime="20231121 01:42:38.273"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:38.274" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:38.273" endtime="20231121 01:42:38.274"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:38.275" endtime="20231121 01:42:38.275"/>
</return>
<msg timestamp="20231121 01:42:38.276" level="INFO">${search_result} = []</msg>
<status status="PASS" starttime="20231121 01:42:38.251" endtime="20231121 01:42:38.276"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:42:38.276" endtime="20231121 01:42:38.276"/>
</return>
<msg timestamp="20231121 01:42:38.276" level="INFO">${driver_result} = []</msg>
<status status="PASS" starttime="20231121 01:42:35.689" endtime="20231121 01:42:38.276"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${driver_result_length}</var>
<arg>${driver_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231121 01:42:38.277" level="INFO">Length is 0</msg>
<msg timestamp="20231121 01:42:38.278" level="INFO">${driver_result_length} = 0</msg>
<status status="PASS" starttime="20231121 01:42:38.277" endtime="20231121 01:42:38.278"/>
</kw>
<if>
<branch type="IF" condition="${driver_result_length} &gt; 0">
<kw name="Del Order Try" library="rest_res">
<arg>${plate_result}[0][order_number]</arg>
<status status="NOT RUN" starttime="20231121 01:42:38.278" endtime="20231121 01:42:38.278"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:42:38.278" endtime="20231121 01:42:38.279"/>
</branch>
<status status="PASS" starttime="20231121 01:42:38.278" endtime="20231121 01:42:38.279"/>
</if>
<status status="PASS" starttime="20231121 01:42:33.111" endtime="20231121 01:42:38.279"/>
</kw>
<kw name="Add Order Common" library="rest_res">
<arg>plate_no=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>driver_id=${driver_id}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:38.282" endtime="20231121 01:42:38.283"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:38.283" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:38.433" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:35 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:38.283" endtime="20231121 01:42:38.433"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:38.437" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:38.434" endtime="20231121 01:42:38.438"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:38.444" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:38.438" endtime="20231121 01:42:38.445"/>
</kw>
<status status="PASS" starttime="20231121 01:42:38.282" endtime="20231121 01:42:38.445"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.446" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:38.446" endtime="20231121 01:42:38.446"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:38.449" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:38.446" endtime="20231121 01:42:38.449"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:38.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.450" endtime="20231121 01:42:38.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.455" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:38.455" endtime="20231121 01:42:38.455"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.455" endtime="20231121 01:42:38.456"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.456" endtime="20231121 01:42:38.457"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:38.457" endtime="20231121 01:42:38.457"/>
</return>
<status status="PASS" starttime="20231121 01:42:38.445" endtime="20231121 01:42:38.458"/>
</kw>
<status status="PASS" starttime="20231121 01:42:38.281" endtime="20231121 01:42:38.458"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.459" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:38.458" endtime="20231121 01:42:38.459"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:38.462" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:38.459" endtime="20231121 01:42:38.462"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:38.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.462" endtime="20231121 01:42:38.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.464" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:38.463" endtime="20231121 01:42:38.464"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.464" endtime="20231121 01:42:38.465"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:38.465" endtime="20231121 01:42:38.466"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:38.466" endtime="20231121 01:42:38.466"/>
</return>
<status status="PASS" starttime="20231121 01:42:38.458" endtime="20231121 01:42:38.467"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.468" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:38.467" endtime="20231121 01:42:38.468"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:38.470" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:38.468" endtime="20231121 01:42:38.470"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:38.474" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:42:38.475" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:38.471" endtime="20231121 01:42:38.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.475" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:38.475" endtime="20231121 01:42:38.476"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.476" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:38.476" endtime="20231121 01:42:38.477"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:38.477" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:42:38.477" endtime="20231121 01:42:38.477"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:38.478" endtime="20231121 01:42:38.478"/>
</return>
<status status="PASS" starttime="20231121 01:42:38.467" endtime="20231121 01:42:38.478"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:38.479" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:38.479" endtime="20231121 01:42:38.479"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:38.482" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:38.480" endtime="20231121 01:42:38.482"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:40.772" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:42:40.772" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:38.482" endtime="20231121 01:42:40.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:40.773" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:42:40.773" endtime="20231121 01:42:40.773"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:40.774" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:40.773" endtime="20231121 01:42:40.774"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:40.774" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:40.774" endtime="20231121 01:42:40.774"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:40.775" endtime="20231121 01:42:40.775"/>
</return>
<msg timestamp="20231121 01:42:40.775" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:38.478" endtime="20231121 01:42:40.775"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:40.775" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:42:40.776" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:40.775" endtime="20231121 01:42:40.776"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:40.776" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:40.776" endtime="20231121 01:42:40.776"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:40.777" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:42:40.777" endtime="20231121 01:42:40.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:40.779" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:42:40.778" endtime="20231121 01:42:40.779"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:40.781" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:42:40.780" endtime="20231121 01:42:40.781"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:40.787" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:42:40.782" endtime="20231121 01:42:40.787"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:40.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:40.787" endtime="20231121 01:42:40.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:40.797" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:40.797" endtime="20231121 01:42:40.797"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:40.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:40.798" endtime="20231121 01:42:40.798"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:40.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:40.798" endtime="20231121 01:42:40.799"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:40.799" endtime="20231121 01:42:40.799"/>
</return>
<status status="PASS" starttime="20231121 01:42:40.779" endtime="20231121 01:42:40.800"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:40.800" endtime="20231121 01:42:40.801"/>
</kw>
<status status="PASS" starttime="20231121 01:42:40.800" endtime="20231121 01:42:40.801"/>
</kw>
<status status="PASS" starttime="20231121 01:42:38.280" endtime="20231121 01:42:40.801"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:42:40.802" endtime="20231121 01:42:40.802"/>
</return>
<msg timestamp="20231121 01:42:40.802" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:42:40.803" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:42:40.801" endtime="20231121 01:42:40.803"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:40.804" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:42:40.803" endtime="20231121 01:42:40.804"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:40.806" level="INFO">${header} = {'token': '0245B6C619FB4DD79121A16D115AE775'}</msg>
<status status="PASS" starttime="20231121 01:42:40.806" endtime="20231121 01:42:40.806"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:40.832" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '0245B6C619FB4DD79121A16D115AE775', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:42:40.832" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:40 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-bsuvdfhAeVT0R+Zu+KOoKoJMVic"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"0D10D289F57E4BBFB04D0D24FFB48446"} 
 </msg>
<msg timestamp="20231121 01:42:40.833" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:40.806" endtime="20231121 01:42:40.833"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:40.833" endtime="20231121 01:42:40.834"/>
</return>
<msg timestamp="20231121 01:42:40.834" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:40.805" endtime="20231121 01:42:40.834"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:40.835" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:40.834" endtime="20231121 01:42:40.835"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:40.836" endtime="20231121 01:42:40.836"/>
</return>
<msg timestamp="20231121 01:42:40.837" level="INFO">${token_resp} = 0D10D289F57E4BBFB04D0D24FFB48446</msg>
<status status="PASS" starttime="20231121 01:42:40.804" endtime="20231121 01:42:40.837"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:42:40.838" level="INFO">${token} = 0D10D289F57E4BBFB04D0D24FFB48446</msg>
<status status="PASS" starttime="20231121 01:42:40.837" endtime="20231121 01:42:40.838"/>
</kw>
<status status="PASS" starttime="20231121 01:42:38.280" endtime="20231121 01:42:40.838"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${order_data}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<arg>driver_id=${driver_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:40.839" level="INFO">${order_data} = {'plate_number': '京A12345', 'driver_phone': '18811111111', 'company_name': '京东', 'stuff_name': 'LNG', 'driver_id': '123456789012345678'}</msg>
<status status="PASS" starttime="20231121 01:42:40.838" endtime="20231121 01:42:40.839"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/add</arg>
<arg>${order_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:40.841" level="INFO">${header} = {'token': '0D10D289F57E4BBFB04D0D24FFB48446'}</msg>
<status status="PASS" starttime="20231121 01:42:40.841" endtime="20231121 01:42:40.841"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:40.896" level="INFO">POST Request : url=http://localhost:31700/api/order/add 
 path_url=/api/order/add 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '0D10D289F57E4BBFB04D0D24FFB48446', 'Content-Length': '151', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "\\u4eacA12345", "driver_phone": "18811111111", "company_name": "\\u4eac\\u4e1c", "stuff_name": "LNG", "driver_id": "123456789012345678"}' 
 </msg>
<msg timestamp="20231121 01:42:40.896" level="INFO">POST Response : url=http://localhost:31700/api/order/add 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:40 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:42:40.897" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:40.841" endtime="20231121 01:42:40.897"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:40.897" endtime="20231121 01:42:40.897"/>
</return>
<msg timestamp="20231121 01:42:40.898" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:40.840" endtime="20231121 01:42:40.898"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:40.899" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:40.898" endtime="20231121 01:42:40.899"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:40.900" endtime="20231121 01:42:40.900"/>
</return>
<status status="PASS" starttime="20231121 01:42:40.839" endtime="20231121 01:42:40.900"/>
</kw>
<status status="PASS" starttime="20231121 01:42:38.279" endtime="20231121 01:42:40.901"/>
</kw>
<kw name="Search Order" library="rest_res">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:40.903" endtime="20231121 01:42:40.904"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:40.905" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:41.050" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:38 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:40.905" endtime="20231121 01:42:41.051"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:41.055" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:41.051" endtime="20231121 01:42:41.055"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:41.061" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:41.055" endtime="20231121 01:42:41.061"/>
</kw>
<status status="PASS" starttime="20231121 01:42:40.903" endtime="20231121 01:42:41.061"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:41.062" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:41.062" endtime="20231121 01:42:41.062"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:41.065" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:41.063" endtime="20231121 01:42:41.065"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:41.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:41.065" endtime="20231121 01:42:41.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:41.070" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:41.070" endtime="20231121 01:42:41.071"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:41.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:41.071" endtime="20231121 01:42:41.072"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:41.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:41.072" endtime="20231121 01:42:41.072"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:41.073" endtime="20231121 01:42:41.073"/>
</return>
<status status="PASS" starttime="20231121 01:42:41.061" endtime="20231121 01:42:41.073"/>
</kw>
<status status="PASS" starttime="20231121 01:42:40.903" endtime="20231121 01:42:41.073"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:41.074" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:41.074" endtime="20231121 01:42:41.075"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:41.084" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:42:41.075" endtime="20231121 01:42:41.084"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:41.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:41.085" endtime="20231121 01:42:41.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:41.086" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:41.086" endtime="20231121 01:42:41.087"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:41.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:41.087" endtime="20231121 01:42:41.088"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:41.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:41.088" endtime="20231121 01:42:41.089"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:41.089" endtime="20231121 01:42:41.089"/>
</return>
<status status="PASS" starttime="20231121 01:42:41.073" endtime="20231121 01:42:41.089"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:41.091" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:41.090" endtime="20231121 01:42:41.091"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:41.097" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:42:41.092" endtime="20231121 01:42:41.097"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:41.117" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:42:41.117" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:41.098" endtime="20231121 01:42:41.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:41.118" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:42:41.118" endtime="20231121 01:42:41.118"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:41.119" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:41.118" endtime="20231121 01:42:41.119"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:41.120" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:42:41.120" endtime="20231121 01:42:41.121"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:41.121" endtime="20231121 01:42:41.121"/>
</return>
<status status="PASS" starttime="20231121 01:42:41.089" endtime="20231121 01:42:41.121"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:41.123" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:41.122" endtime="20231121 01:42:41.123"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:41.131" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:42:41.123" endtime="20231121 01:42:41.131"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:43.414" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:42:43.414" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:41.132" endtime="20231121 01:42:43.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.415" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:42:43.414" endtime="20231121 01:42:43.415"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.415" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:43.415" endtime="20231121 01:42:43.416"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.416" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:43.416" endtime="20231121 01:42:43.416"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:43.416" endtime="20231121 01:42:43.417"/>
</return>
<msg timestamp="20231121 01:42:43.417" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:42:41.122" endtime="20231121 01:42:43.417"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:43.417" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:42:43.418" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:43.417" endtime="20231121 01:42:43.418"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:43.418" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:42:43.418" endtime="20231121 01:42:43.418"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:43.419" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:42:43.418" endtime="20231121 01:42:43.419"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:43.421" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:42:43.419" endtime="20231121 01:42:43.421"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.424" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:42:43.423" endtime="20231121 01:42:43.424"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:43.429" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:42:43.425" endtime="20231121 01:42:43.430"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:43.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.430" endtime="20231121 01:42:43.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.441" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:43.440" endtime="20231121 01:42:43.441"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.441" endtime="20231121 01:42:43.442"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.442" endtime="20231121 01:42:43.443"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:43.443" endtime="20231121 01:42:43.443"/>
</return>
<status status="PASS" starttime="20231121 01:42:43.422" endtime="20231121 01:42:43.443"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:43.444" endtime="20231121 01:42:43.444"/>
</kw>
<status status="PASS" starttime="20231121 01:42:43.444" endtime="20231121 01:42:43.445"/>
</kw>
<status status="PASS" starttime="20231121 01:42:40.902" endtime="20231121 01:42:43.445"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:42:43.445" endtime="20231121 01:42:43.446"/>
</return>
<msg timestamp="20231121 01:42:43.446" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:42:43.446" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:42:43.445" endtime="20231121 01:42:43.446"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:43.447" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:42:43.446" endtime="20231121 01:42:43.447"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:43.449" level="INFO">${header} = {'token': '0D10D289F57E4BBFB04D0D24FFB48446'}</msg>
<status status="PASS" starttime="20231121 01:42:43.449" endtime="20231121 01:42:43.449"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:43.475" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '0D10D289F57E4BBFB04D0D24FFB48446', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:42:43.475" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:43 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-y4nrYAFetWq9oGUhQVHh9aHPfxg"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"B18F25BF34C44B57B66703485CCDA28D"} 
 </msg>
<msg timestamp="20231121 01:42:43.475" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:43.450" endtime="20231121 01:42:43.475"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:43.476" endtime="20231121 01:42:43.476"/>
</return>
<msg timestamp="20231121 01:42:43.476" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:43.448" endtime="20231121 01:42:43.476"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:43.478" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:43.477" endtime="20231121 01:42:43.478"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:43.478" endtime="20231121 01:42:43.478"/>
</return>
<msg timestamp="20231121 01:42:43.479" level="INFO">${token_resp} = B18F25BF34C44B57B66703485CCDA28D</msg>
<status status="PASS" starttime="20231121 01:42:43.447" endtime="20231121 01:42:43.480"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:42:43.480" level="INFO">${token} = B18F25BF34C44B57B66703485CCDA28D</msg>
<status status="PASS" starttime="20231121 01:42:43.480" endtime="20231121 01:42:43.481"/>
</kw>
<status status="PASS" starttime="20231121 01:42:40.902" endtime="20231121 01:42:43.481"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:43.482" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231121 01:42:43.481" endtime="20231121 01:42:43.482"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:43.484" level="INFO">${header} = {'token': 'B18F25BF34C44B57B66703485CCDA28D'}</msg>
<status status="PASS" starttime="20231121 01:42:43.484" endtime="20231121 01:42:43.484"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:43.506" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'B18F25BF34C44B57B66703485CCDA28D', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231121 01:42:43.506" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:43 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '558', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"22e-mM4jw+TJwHlcLyrnh1UmhFXbik8"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[{"id":34,"order_number":"170050216034","plate_number":"京A12345","back_plate_number":"","driver_name":"","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":0,"m_weight":0,"enter_weight":0,"reg_info":{"operator_name":"","operator_time":""},"call_info":{"operator_name":"","operator_time":""},"confirm_info":{"operator_name":"","operator_time":""},"seal_no":"","history_records":[],"order_attachs":[],"p_time":"","m_time":"","is_sale":false,"status":1,"company_name":"京东","stuff_from":""}]} 
 </msg>
<msg timestamp="20231121 01:42:43.506" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:43.485" endtime="20231121 01:42:43.506"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:43.507" endtime="20231121 01:42:43.507"/>
</return>
<msg timestamp="20231121 01:42:43.507" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:43.483" endtime="20231121 01:42:43.507"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:43.509" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:43.508" endtime="20231121 01:42:43.509"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:43.509" endtime="20231121 01:42:43.509"/>
</return>
<msg timestamp="20231121 01:42:43.510" level="INFO">${search_result} = [{'id': 34, 'order_number': '170050216034', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231121 01:42:43.483" endtime="20231121 01:42:43.510"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:42:43.511" endtime="20231121 01:42:43.511"/>
</return>
<msg timestamp="20231121 01:42:43.511" level="INFO">${driver_result} = [{'id': 34, 'order_number': '170050216034', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231121 01:42:40.901" endtime="20231121 01:42:43.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${order_number}</arg>
<arg>${driver_result}[0][order_number]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:42:43.512" level="INFO">${order_number} = 170050216034</msg>
<status status="PASS" starttime="20231121 01:42:43.512" endtime="20231121 01:42:43.512"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_fgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:43.515" endtime="20231121 01:42:43.515"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:43.516" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:43.664" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:41 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:43.515" endtime="20231121 01:42:43.665"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:43.669" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:43.665" endtime="20231121 01:42:43.669"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:43.676" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:43.670" endtime="20231121 01:42:43.676"/>
</kw>
<status status="PASS" starttime="20231121 01:42:43.514" endtime="20231121 01:42:43.676"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.678" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:43.677" endtime="20231121 01:42:43.678"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:43.681" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:43.678" endtime="20231121 01:42:43.681"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:43.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.681" endtime="20231121 01:42:43.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.686" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:43.685" endtime="20231121 01:42:43.686"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.686" endtime="20231121 01:42:43.687"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.687" endtime="20231121 01:42:43.688"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:43.688" endtime="20231121 01:42:43.688"/>
</return>
<status status="PASS" starttime="20231121 01:42:43.677" endtime="20231121 01:42:43.688"/>
</kw>
<status status="PASS" starttime="20231121 01:42:43.514" endtime="20231121 01:42:43.688"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.689" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:43.689" endtime="20231121 01:42:43.690"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:43.692" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:43.690" endtime="20231121 01:42:43.693"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:43.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.693" endtime="20231121 01:42:43.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.694" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:43.694" endtime="20231121 01:42:43.695"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.695" endtime="20231121 01:42:43.696"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:43.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:43.696" endtime="20231121 01:42:43.696"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:43.697" endtime="20231121 01:42:43.697"/>
</return>
<status status="PASS" starttime="20231121 01:42:43.689" endtime="20231121 01:42:43.697"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:43.698" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:43.698" endtime="20231121 01:42:43.698"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:43.701" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:43.699" endtime="20231121 01:42:43.701"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.267" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:44.267" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:43.702" endtime="20231121 01:42:44.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.268" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:44.268" endtime="20231121 01:42:44.268"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.268" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:44.268" endtime="20231121 01:42:44.269"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.269" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:44.269" endtime="20231121 01:42:44.269"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:44.270" endtime="20231121 01:42:44.270"/>
</return>
<msg timestamp="20231121 01:42:44.270" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:43.697" endtime="20231121 01:42:44.270"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:44.271" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:44.271" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:42:44.270" endtime="20231121 01:42:44.271"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:44.271" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:42:44.271" endtime="20231121 01:42:44.272"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:44.272" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231121 01:42:44.272" endtime="20231121 01:42:44.272"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:44.273" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231121 01:42:44.273" endtime="20231121 01:42:44.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:44.274" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:42:44.274" endtime="20231121 01:42:44.274"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:44.275" endtime="20231121 01:42:44.276"/>
</kw>
<status status="PASS" starttime="20231121 01:42:44.275" endtime="20231121 01:42:44.276"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:44.276" endtime="20231121 01:42:44.277"/>
</return>
<msg timestamp="20231121 01:42:44.277" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:42:43.513" endtime="20231121 01:42:44.277"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:44.280" endtime="20231121 01:42:44.281"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:44.282" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:44.435" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:43 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:44.281" endtime="20231121 01:42:44.435"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.439" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:44.435" endtime="20231121 01:42:44.440"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.446" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:44.440" endtime="20231121 01:42:44.446"/>
</kw>
<status status="PASS" starttime="20231121 01:42:44.279" endtime="20231121 01:42:44.446"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.447" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:44.447" endtime="20231121 01:42:44.448"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.450" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:44.448" endtime="20231121 01:42:44.450"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.451" endtime="20231121 01:42:44.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.456" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:44.455" endtime="20231121 01:42:44.456"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.456" endtime="20231121 01:42:44.457"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.457" endtime="20231121 01:42:44.457"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:44.458" endtime="20231121 01:42:44.458"/>
</return>
<status status="PASS" starttime="20231121 01:42:44.447" endtime="20231121 01:42:44.458"/>
</kw>
<status status="PASS" starttime="20231121 01:42:44.278" endtime="20231121 01:42:44.458"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.459" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:44.459" endtime="20231121 01:42:44.459"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.462" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:44.460" endtime="20231121 01:42:44.462"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.463" endtime="20231121 01:42:44.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.464" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:44.464" endtime="20231121 01:42:44.465"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.465" endtime="20231121 01:42:44.465"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.466" endtime="20231121 01:42:44.466"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:44.467" endtime="20231121 01:42:44.467"/>
</return>
<status status="PASS" starttime="20231121 01:42:44.458" endtime="20231121 01:42:44.467"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.468" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:42:44.468" endtime="20231121 01:42:44.468"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.471" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:42:44.469" endtime="20231121 01:42:44.471"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.471" endtime="20231121 01:42:44.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.478" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:44.478" endtime="20231121 01:42:44.478"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.478" endtime="20231121 01:42:44.479"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.480" endtime="20231121 01:42:44.480"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:44.480" endtime="20231121 01:42:44.481"/>
</return>
<status status="PASS" starttime="20231121 01:42:44.467" endtime="20231121 01:42:44.481"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:44.481" endtime="20231121 01:42:44.482"/>
</kw>
<status status="PASS" starttime="20231121 01:42:44.481" endtime="20231121 01:42:44.482"/>
</kw>
<status status="PASS" starttime="20231121 01:42:43.513" endtime="20231121 01:42:44.482"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_bgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:44.485" endtime="20231121 01:42:44.485"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:44.486" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:44.633" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:44 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:44.485" endtime="20231121 01:42:44.633"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.638" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:44.634" endtime="20231121 01:42:44.638"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.645" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:44.638" endtime="20231121 01:42:44.645"/>
</kw>
<status status="PASS" starttime="20231121 01:42:44.484" endtime="20231121 01:42:44.645"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.646" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:44.646" endtime="20231121 01:42:44.647"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.651" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:44.647" endtime="20231121 01:42:44.651"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.651" endtime="20231121 01:42:44.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.657" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:44.656" endtime="20231121 01:42:44.657"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.657" endtime="20231121 01:42:44.658"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.658" endtime="20231121 01:42:44.659"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:44.659" endtime="20231121 01:42:44.660"/>
</return>
<status status="PASS" starttime="20231121 01:42:44.646" endtime="20231121 01:42:44.660"/>
</kw>
<status status="PASS" starttime="20231121 01:42:44.484" endtime="20231121 01:42:44.660"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.661" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:44.661" endtime="20231121 01:42:44.661"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.664" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:44.661" endtime="20231121 01:42:44.664"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:44.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.665" endtime="20231121 01:42:44.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.666" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:44.666" endtime="20231121 01:42:44.666"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.667" endtime="20231121 01:42:44.667"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:44.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:44.667" endtime="20231121 01:42:44.668"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:44.668" endtime="20231121 01:42:44.668"/>
</return>
<status status="PASS" starttime="20231121 01:42:44.660" endtime="20231121 01:42:44.669"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:44.670" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:44.669" endtime="20231121 01:42:44.670"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:44.673" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:44.670" endtime="20231121 01:42:44.673"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.262" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:45.262" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:44.673" endtime="20231121 01:42:45.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.263" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:45.262" endtime="20231121 01:42:45.263"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.263" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:45.263" endtime="20231121 01:42:45.263"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.264" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:45.264" endtime="20231121 01:42:45.264"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:45.264" endtime="20231121 01:42:45.264"/>
</return>
<msg timestamp="20231121 01:42:45.265" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:44.669" endtime="20231121 01:42:45.265"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:45.265" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:45.265" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:42:45.265" endtime="20231121 01:42:45.265"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:45.267" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:42:45.266" endtime="20231121 01:42:45.267"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:45.268" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231121 01:42:45.267" endtime="20231121 01:42:45.268"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:45.269" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231121 01:42:45.268" endtime="20231121 01:42:45.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:45.271" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:42:45.269" endtime="20231121 01:42:45.271"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:45.272" endtime="20231121 01:42:45.272"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.271" endtime="20231121 01:42:45.272"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:45.273" endtime="20231121 01:42:45.273"/>
</return>
<msg timestamp="20231121 01:42:45.274" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:42:44.483" endtime="20231121 01:42:45.274"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:45.276" endtime="20231121 01:42:45.277"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:45.278" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:45.439" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:44 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:45.277" endtime="20231121 01:42:45.439"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.443" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:45.439" endtime="20231121 01:42:45.443"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.449" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:45.443" endtime="20231121 01:42:45.449"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.275" endtime="20231121 01:42:45.449"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.450" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:45.450" endtime="20231121 01:42:45.451"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.453" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:45.451" endtime="20231121 01:42:45.454"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.454" endtime="20231121 01:42:45.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.459" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:45.458" endtime="20231121 01:42:45.459"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.459" endtime="20231121 01:42:45.460"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.460" endtime="20231121 01:42:45.461"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:45.461" endtime="20231121 01:42:45.462"/>
</return>
<status status="PASS" starttime="20231121 01:42:45.449" endtime="20231121 01:42:45.462"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.274" endtime="20231121 01:42:45.462"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.463" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:45.463" endtime="20231121 01:42:45.463"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.466" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:45.463" endtime="20231121 01:42:45.466"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.467" endtime="20231121 01:42:45.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.468" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:45.468" endtime="20231121 01:42:45.468"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.469" endtime="20231121 01:42:45.469"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.469" endtime="20231121 01:42:45.470"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:45.470" endtime="20231121 01:42:45.471"/>
</return>
<status status="PASS" starttime="20231121 01:42:45.462" endtime="20231121 01:42:45.471"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.472" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:42:45.472" endtime="20231121 01:42:45.472"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.475" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:42:45.472" endtime="20231121 01:42:45.475"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.476" endtime="20231121 01:42:45.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.482" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:45.482" endtime="20231121 01:42:45.482"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.483" endtime="20231121 01:42:45.483"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.484" endtime="20231121 01:42:45.484"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:45.484" endtime="20231121 01:42:45.484"/>
</return>
<status status="PASS" starttime="20231121 01:42:45.471" endtime="20231121 01:42:45.485"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:45.485" endtime="20231121 01:42:45.486"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.485" endtime="20231121 01:42:45.486"/>
</kw>
<status status="PASS" starttime="20231121 01:42:44.483" endtime="20231121 01:42:45.486"/>
</kw>
<status status="PASS" starttime="20231121 01:42:33.110" endtime="20231121 01:42:45.486"/>
</kw>
<kw name="Check In Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${check_in_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_check_in=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:45.488" level="INFO">${check_in_req} = {'order_number': '170050216034', 'is_check_in': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231121 01:42:45.487" endtime="20231121 01:42:45.488"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/check_in</arg>
<arg>${check_in_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:45.490" level="INFO">${header} = {'token': 'B18F25BF34C44B57B66703485CCDA28D'}</msg>
<status status="PASS" starttime="20231121 01:42:45.490" endtime="20231121 01:42:45.490"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:45.525" level="INFO">POST Request : url=http://localhost:31700/api/order/check_in 
 path_url=/api/order/check_in 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'B18F25BF34C44B57B66703485CCDA28D', 'Content-Length': '72', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050216034", "is_check_in": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231121 01:42:45.525" level="INFO">POST Response : url=http://localhost:31700/api/order/check_in 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:45 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:42:45.526" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:45.490" endtime="20231121 01:42:45.526"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:45.526" endtime="20231121 01:42:45.527"/>
</return>
<msg timestamp="20231121 01:42:45.527" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:45.489" endtime="20231121 01:42:45.528"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:45.529" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:45.528" endtime="20231121 01:42:45.529"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:45.529" endtime="20231121 01:42:45.530"/>
</return>
<status status="PASS" starttime="20231121 01:42:45.488" endtime="20231121 01:42:45.531"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.487" endtime="20231121 01:42:45.531"/>
</kw>
<kw name="Call Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${call_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_call=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:45.532" level="INFO">${call_req} = {'order_number': '170050216034', 'is_call': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231121 01:42:45.532" endtime="20231121 01:42:45.532"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/call</arg>
<arg>${call_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:42:45.534" level="INFO">${header} = {'token': 'B18F25BF34C44B57B66703485CCDA28D'}</msg>
<status status="PASS" starttime="20231121 01:42:45.534" endtime="20231121 01:42:45.535"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:42:45.592" level="INFO">POST Request : url=http://localhost:31700/api/order/call 
 path_url=/api/order/call 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'B18F25BF34C44B57B66703485CCDA28D', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050216034", "is_call": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231121 01:42:45.592" level="INFO">POST Response : url=http://localhost:31700/api/order/call 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:42:45 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:42:45.593" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:45.535" endtime="20231121 01:42:45.593"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:42:45.593" endtime="20231121 01:42:45.593"/>
</return>
<msg timestamp="20231121 01:42:45.594" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:42:45.533" endtime="20231121 01:42:45.594"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:42:45.595" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:42:45.594" endtime="20231121 01:42:45.596"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:42:45.596" endtime="20231121 01:42:45.596"/>
</return>
<status status="PASS" starttime="20231121 01:42:45.533" endtime="20231121 01:42:45.597"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.531" endtime="20231121 01:42:45.597"/>
</kw>
<kw name="One Time Scale">
<arg>p</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${weight}</var>
<arg>${p_weight}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:45.598" level="INFO">${weight} = 20.23</msg>
<status status="PASS" starttime="20231121 01:42:45.598" endtime="20231121 01:42:45.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:45.599" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:42:45.599" endtime="20231121 01:42:45.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:45.600" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:42:45.600" endtime="20231121 01:42:45.600"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:45.601" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231121 01:42:45.601" endtime="20231121 01:42:45.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_reader}</var>
<arg>${s_fid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:45.602" level="INFO">${id_reader} = fi</msg>
<status status="PASS" starttime="20231121 01:42:45.601" endtime="20231121 01:42:45.602"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weight}</arg>
<arg>${m_weight}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:42:45.603" endtime="20231121 01:42:45.603"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:42:45.603" endtime="20231121 01:42:45.603"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:42:45.604" endtime="20231121 01:42:45.604"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:42:45.604" endtime="20231121 01:42:45.604"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_reader}</arg>
<arg>${s_bid}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231121 01:42:45.605" endtime="20231121 01:42:45.605"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:42:45.602" endtime="20231121 01:42:45.605"/>
</branch>
<status status="PASS" starttime="20231121 01:42:45.602" endtime="20231121 01:42:45.605"/>
</if>
<if>
<branch type="IF" condition="$cam_or_id == 'cam'">
<kw name="Mock Plate Cap" library="dev_res">
<arg>${plate_no}</arg>
<arg>${pc}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:45.607" endtime="20231121 01:42:45.608"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:45.609" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:45.751" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:45 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:45.608" endtime="20231121 01:42:45.751"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.755" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:45.751" endtime="20231121 01:42:45.755"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.762" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:45.756" endtime="20231121 01:42:45.762"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.607" endtime="20231121 01:42:45.762"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.763" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:45.763" endtime="20231121 01:42:45.763"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.767" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:45.764" endtime="20231121 01:42:45.767"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.767" endtime="20231121 01:42:45.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.773" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:45.772" endtime="20231121 01:42:45.773"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.773" endtime="20231121 01:42:45.774"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.774" endtime="20231121 01:42:45.775"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:45.775" endtime="20231121 01:42:45.775"/>
</return>
<status status="PASS" starttime="20231121 01:42:45.762" endtime="20231121 01:42:45.775"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.606" endtime="20231121 01:42:45.775"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.776" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:45.776" endtime="20231121 01:42:45.777"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.780" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:45.777" endtime="20231121 01:42:45.780"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:45.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.780" endtime="20231121 01:42:45.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.782" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:45.781" endtime="20231121 01:42:45.782"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.782" endtime="20231121 01:42:45.782"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:45.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:45.783" endtime="20231121 01:42:45.783"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:45.784" endtime="20231121 01:42:45.784"/>
</return>
<status status="PASS" starttime="20231121 01:42:45.776" endtime="20231121 01:42:45.784"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:45.785" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:45.785" endtime="20231121 01:42:45.785"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:45.788" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:45.786" endtime="20231121 01:42:45.788"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:46.359" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:46.360" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:45.789" endtime="20231121 01:42:46.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:46.361" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:46.360" endtime="20231121 01:42:46.361"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.361" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:46.361" endtime="20231121 01:42:46.362"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.362" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:46.362" endtime="20231121 01:42:46.362"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:46.362" endtime="20231121 01:42:46.362"/>
</return>
<msg timestamp="20231121 01:42:46.363" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:45.784" endtime="20231121 01:42:46.363"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:46.363" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:46.363" level="INFO">${lines} = | 34 | s    | 331:fpc |</msg>
<status status="PASS" starttime="20231121 01:42:46.363" endtime="20231121 01:42:46.363"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:46.364" level="INFO">${line} = | 34 | s    | 331:fpc |</msg>
<status status="PASS" starttime="20231121 01:42:46.364" endtime="20231121 01:42:46.364"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:46.364" level="INFO">${line_array} = ['| 34 | s    | 331', 'fpc |']</msg>
<status status="PASS" starttime="20231121 01:42:46.364" endtime="20231121 01:42:46.365"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:46.366" level="INFO">${dev_name_array} = ['|', '34', '|', 's', '|', '331']</msg>
<status status="PASS" starttime="20231121 01:42:46.365" endtime="20231121 01:42:46.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:46.367" level="INFO">${dev_id} = 331</msg>
<status status="PASS" starttime="20231121 01:42:46.366" endtime="20231121 01:42:46.367"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:46.367" endtime="20231121 01:42:46.367"/>
</kw>
<status status="PASS" starttime="20231121 01:42:46.367" endtime="20231121 01:42:46.368"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:46.368" endtime="20231121 01:42:46.368"/>
</return>
<msg timestamp="20231121 01:42:46.369" level="INFO">${dev_id} = 331</msg>
<status status="PASS" starttime="20231121 01:42:45.606" endtime="20231121 01:42:46.369"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:46.370" endtime="20231121 01:42:46.371"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:46.372" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:46.527" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:45 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:46.372" endtime="20231121 01:42:46.527"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:46.532" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:46.527" endtime="20231121 01:42:46.532"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:46.541" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:46.533" endtime="20231121 01:42:46.542"/>
</kw>
<status status="PASS" starttime="20231121 01:42:46.369" endtime="20231121 01:42:46.542"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:46.543" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:46.543" endtime="20231121 01:42:46.544"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:46.547" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:46.544" endtime="20231121 01:42:46.548"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:46.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.548" endtime="20231121 01:42:46.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:46.554" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:46.554" endtime="20231121 01:42:46.555"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.555" endtime="20231121 01:42:46.556"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.556" endtime="20231121 01:42:46.557"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:46.557" endtime="20231121 01:42:46.557"/>
</return>
<status status="PASS" starttime="20231121 01:42:46.542" endtime="20231121 01:42:46.557"/>
</kw>
<status status="PASS" starttime="20231121 01:42:46.369" endtime="20231121 01:42:46.557"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:46.558" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:46.558" endtime="20231121 01:42:46.559"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:46.562" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:46.559" endtime="20231121 01:42:46.563"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:46.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.563" endtime="20231121 01:42:46.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:46.565" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:46.564" endtime="20231121 01:42:46.565"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.565" endtime="20231121 01:42:46.566"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.566" endtime="20231121 01:42:46.567"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:46.567" endtime="20231121 01:42:46.567"/>
</return>
<status status="PASS" starttime="20231121 01:42:46.558" endtime="20231121 01:42:46.567"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} plate ${plate_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:46.568" level="INFO">mock_device_action 331 plate 京A12345</msg>
<status status="PASS" starttime="20231121 01:42:46.568" endtime="20231121 01:42:46.569"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:46.572" level="INFO">mock_device_action 331 plate äº¬A12345</msg>
<status status="PASS" starttime="20231121 01:42:46.569" endtime="20231121 01:42:46.572"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:46.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.572" endtime="20231121 01:42:46.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:46.580" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:46.579" endtime="20231121 01:42:46.580"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.580" endtime="20231121 01:42:46.581"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:46.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:46.581" endtime="20231121 01:42:46.582"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:46.583" endtime="20231121 01:42:46.583"/>
</return>
<status status="PASS" starttime="20231121 01:42:46.567" endtime="20231121 01:42:46.583"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:46.584" endtime="20231121 01:42:46.584"/>
</kw>
<status status="PASS" starttime="20231121 01:42:46.583" endtime="20231121 01:42:46.585"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.605" endtime="20231121 01:42:46.585"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.605" endtime="20231121 01:42:46.585"/>
</branch>
<branch type="ELSE">
<kw name="Mock Id Read" library="dev_res">
<arg>${driver_id}</arg>
<arg>${id_reader}</arg>
<status status="NOT RUN" starttime="20231121 01:42:46.585" endtime="20231121 01:42:46.586"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:42:46.585" endtime="20231121 01:42:46.586"/>
</branch>
<status status="PASS" starttime="20231121 01:42:45.605" endtime="20231121 01:42:46.586"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:42:49.587" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231121 01:42:46.586" endtime="20231121 01:42:49.588"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:49.590" endtime="20231121 01:42:49.591"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:49.591" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:49.742" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:46 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:49.591" endtime="20231121 01:42:49.742"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:49.746" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:49.742" endtime="20231121 01:42:49.747"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:49.753" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:49.747" endtime="20231121 01:42:49.753"/>
</kw>
<status status="PASS" starttime="20231121 01:42:49.589" endtime="20231121 01:42:49.754"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:49.757" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:42:49.754" endtime="20231121 01:42:49.757"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:49.758" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:42:49.759" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:42:49.757" endtime="20231121 01:42:49.759"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:49.760" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:49.759" endtime="20231121 01:42:49.760"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:49.761" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:42:49.760" endtime="20231121 01:42:49.761"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:49.762" endtime="20231121 01:42:49.762"/>
</kw>
<status status="PASS" starttime="20231121 01:42:49.761" endtime="20231121 01:42:49.763"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:42:49.763" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:42:49.763" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:42:49.763" endtime="20231121 01:42:49.764"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:42:49.764" endtime="20231121 01:42:49.764"/>
</return>
<msg timestamp="20231121 01:42:49.764" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:42:49.588" endtime="20231121 01:42:49.764"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:42:49.765" endtime="20231121 01:42:49.765"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:49.766" endtime="20231121 01:42:49.767"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:49.768" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:49.911" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:49 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:49.767" endtime="20231121 01:42:49.911"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:49.915" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:49.912" endtime="20231121 01:42:49.915"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:49.922" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:49.916" endtime="20231121 01:42:49.922"/>
</kw>
<status status="PASS" starttime="20231121 01:42:49.766" endtime="20231121 01:42:49.922"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:49.926" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:42:49.922" endtime="20231121 01:42:49.926"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:49.928" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:42:49.928" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:42:49.926" endtime="20231121 01:42:49.928"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:49.929" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:42:49.929" endtime="20231121 01:42:49.929"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:49.930" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:42:49.930" endtime="20231121 01:42:49.930"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:49.931" endtime="20231121 01:42:49.931"/>
</kw>
<status status="PASS" starttime="20231121 01:42:49.930" endtime="20231121 01:42:49.932"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:42:49.932" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:42:49.933" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:42:49.932" endtime="20231121 01:42:49.933"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:42:49.933" endtime="20231121 01:42:49.933"/>
</return>
<msg timestamp="20231121 01:42:49.933" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:42:49.765" endtime="20231121 01:42:49.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:42:49.934" endtime="20231121 01:42:49.935"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:49.937" endtime="20231121 01:42:49.937"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:49.938" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:50.085" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:49 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:49.937" endtime="20231121 01:42:50.085"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.089" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:50.085" endtime="20231121 01:42:50.089"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.096" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:50.090" endtime="20231121 01:42:50.097"/>
</kw>
<status status="PASS" starttime="20231121 01:42:49.936" endtime="20231121 01:42:50.097"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.098" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:50.098" endtime="20231121 01:42:50.098"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.101" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:50.098" endtime="20231121 01:42:50.101"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.102" endtime="20231121 01:42:50.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.107" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:50.107" endtime="20231121 01:42:50.107"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.107" endtime="20231121 01:42:50.108"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.108" endtime="20231121 01:42:50.109"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:50.109" endtime="20231121 01:42:50.109"/>
</return>
<status status="PASS" starttime="20231121 01:42:50.097" endtime="20231121 01:42:50.110"/>
</kw>
<status status="PASS" starttime="20231121 01:42:49.936" endtime="20231121 01:42:50.110"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.111" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:50.110" endtime="20231121 01:42:50.111"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.114" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:50.111" endtime="20231121 01:42:50.114"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.114" endtime="20231121 01:42:50.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.116" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:50.115" endtime="20231121 01:42:50.116"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.116" endtime="20231121 01:42:50.117"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.117" endtime="20231121 01:42:50.118"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:50.118" endtime="20231121 01:42:50.118"/>
</return>
<status status="PASS" starttime="20231121 01:42:50.110" endtime="20231121 01:42:50.118"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.119" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:50.119" endtime="20231121 01:42:50.120"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.122" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:50.120" endtime="20231121 01:42:50.123"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.696" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:50.697" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:50.123" endtime="20231121 01:42:50.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.698" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:50.697" endtime="20231121 01:42:50.698"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.698" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:50.698" endtime="20231121 01:42:50.698"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.699" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:50.698" endtime="20231121 01:42:50.699"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:50.699" endtime="20231121 01:42:50.699"/>
</return>
<msg timestamp="20231121 01:42:50.699" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:50.118" endtime="20231121 01:42:50.699"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:50.700" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:50.700" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:42:50.700" endtime="20231121 01:42:50.700"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:50.701" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:42:50.700" endtime="20231121 01:42:50.701"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:50.701" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231121 01:42:50.701" endtime="20231121 01:42:50.702"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:50.703" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231121 01:42:50.702" endtime="20231121 01:42:50.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:50.704" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:42:50.703" endtime="20231121 01:42:50.704"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:50.704" endtime="20231121 01:42:50.705"/>
</kw>
<status status="PASS" starttime="20231121 01:42:50.704" endtime="20231121 01:42:50.705"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:50.705" endtime="20231121 01:42:50.705"/>
</return>
<msg timestamp="20231121 01:42:50.706" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:42:49.935" endtime="20231121 01:42:50.706"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:50.708" endtime="20231121 01:42:50.709"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:50.710" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:50.861" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:50 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:50.709" endtime="20231121 01:42:50.861"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.865" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:50.862" endtime="20231121 01:42:50.865"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.871" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:50.866" endtime="20231121 01:42:50.872"/>
</kw>
<status status="PASS" starttime="20231121 01:42:50.707" endtime="20231121 01:42:50.872"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.873" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:50.873" endtime="20231121 01:42:50.873"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.877" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:50.873" endtime="20231121 01:42:50.877"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.878" endtime="20231121 01:42:50.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.883" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:50.882" endtime="20231121 01:42:50.883"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.883" endtime="20231121 01:42:50.884"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.884" endtime="20231121 01:42:50.885"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:50.885" endtime="20231121 01:42:50.885"/>
</return>
<status status="PASS" starttime="20231121 01:42:50.872" endtime="20231121 01:42:50.885"/>
</kw>
<status status="PASS" starttime="20231121 01:42:50.706" endtime="20231121 01:42:50.885"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.886" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:50.886" endtime="20231121 01:42:50.887"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.889" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:50.887" endtime="20231121 01:42:50.889"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.890" endtime="20231121 01:42:50.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.891" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:50.891" endtime="20231121 01:42:50.891"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.892" endtime="20231121 01:42:50.892"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.893" endtime="20231121 01:42:50.893"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:50.893" endtime="20231121 01:42:50.893"/>
</return>
<status status="PASS" starttime="20231121 01:42:50.886" endtime="20231121 01:42:50.894"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.895" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:42:50.894" endtime="20231121 01:42:50.895"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:50.898" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:42:50.895" endtime="20231121 01:42:50.898"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:50.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.898" endtime="20231121 01:42:50.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:50.905" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:50.904" endtime="20231121 01:42:50.905"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.905" endtime="20231121 01:42:50.906"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:50.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:50.906" endtime="20231121 01:42:50.907"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:50.907" endtime="20231121 01:42:50.907"/>
</return>
<status status="PASS" starttime="20231121 01:42:50.894" endtime="20231121 01:42:50.907"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:50.908" endtime="20231121 01:42:50.908"/>
</kw>
<status status="PASS" starttime="20231121 01:42:50.907" endtime="20231121 01:42:50.909"/>
</kw>
<status status="PASS" starttime="20231121 01:42:49.935" endtime="20231121 01:42:50.909"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:50.911" endtime="20231121 01:42:50.912"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:50.912" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:51.054" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:50 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:50.912" endtime="20231121 01:42:51.055"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.059" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:51.055" endtime="20231121 01:42:51.059"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.067" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:51.060" endtime="20231121 01:42:51.068"/>
</kw>
<status status="PASS" starttime="20231121 01:42:50.911" endtime="20231121 01:42:51.068"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.069" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:51.069" endtime="20231121 01:42:51.069"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.073" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:51.070" endtime="20231121 01:42:51.073"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.074" endtime="20231121 01:42:51.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.078" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:51.078" endtime="20231121 01:42:51.079"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.079" endtime="20231121 01:42:51.080"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.080" endtime="20231121 01:42:51.080"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:51.081" endtime="20231121 01:42:51.081"/>
</return>
<status status="PASS" starttime="20231121 01:42:51.068" endtime="20231121 01:42:51.081"/>
</kw>
<status status="PASS" starttime="20231121 01:42:50.910" endtime="20231121 01:42:51.081"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.082" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:51.082" endtime="20231121 01:42:51.083"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.085" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:51.083" endtime="20231121 01:42:51.085"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.086" endtime="20231121 01:42:51.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.087" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:51.087" endtime="20231121 01:42:51.087"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.087" endtime="20231121 01:42:51.088"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.088" endtime="20231121 01:42:51.089"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:51.089" endtime="20231121 01:42:51.089"/>
</return>
<status status="PASS" starttime="20231121 01:42:51.081" endtime="20231121 01:42:51.090"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.091" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:51.090" endtime="20231121 01:42:51.091"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.093" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:42:51.091" endtime="20231121 01:42:51.094"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.667" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:42:51.668" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:51.094" endtime="20231121 01:42:51.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.668" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:42:51.668" endtime="20231121 01:42:51.668"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.669" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:51.668" endtime="20231121 01:42:51.669"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.669" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:51.669" endtime="20231121 01:42:51.670"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:51.670" endtime="20231121 01:42:51.670"/>
</return>
<msg timestamp="20231121 01:42:51.670" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:42:51.090" endtime="20231121 01:42:51.670"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:42:51.671" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:42:51.671" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:42:51.670" endtime="20231121 01:42:51.671"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:42:51.672" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:42:51.671" endtime="20231121 01:42:51.672"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:42:51.672" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:42:51.672" endtime="20231121 01:42:51.672"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:42:51.673" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:42:51.673" endtime="20231121 01:42:51.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:42:51.674" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:42:51.674" endtime="20231121 01:42:51.674"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:51.676" endtime="20231121 01:42:51.676"/>
</kw>
<status status="PASS" starttime="20231121 01:42:51.675" endtime="20231121 01:42:51.677"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:42:51.677" endtime="20231121 01:42:51.677"/>
</return>
<msg timestamp="20231121 01:42:51.678" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:42:50.910" endtime="20231121 01:42:51.678"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:42:51.679" endtime="20231121 01:42:51.680"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:42:51.681" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:42:51.838" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:51 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:51.680" endtime="20231121 01:42:51.838"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.843" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:42:51.839" endtime="20231121 01:42:51.843"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.849" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:42:51.843" endtime="20231121 01:42:51.849"/>
</kw>
<status status="PASS" starttime="20231121 01:42:51.679" endtime="20231121 01:42:51.850"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.851" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:51.850" endtime="20231121 01:42:51.851"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.854" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:42:51.851" endtime="20231121 01:42:51.854"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.854" endtime="20231121 01:42:51.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.859" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:51.859" endtime="20231121 01:42:51.859"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.859" endtime="20231121 01:42:51.860"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.860" endtime="20231121 01:42:51.861"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:51.861" endtime="20231121 01:42:51.861"/>
</return>
<status status="PASS" starttime="20231121 01:42:51.850" endtime="20231121 01:42:51.862"/>
</kw>
<status status="PASS" starttime="20231121 01:42:51.678" endtime="20231121 01:42:51.862"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.863" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:51.863" endtime="20231121 01:42:51.863"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.866" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:42:51.863" endtime="20231121 01:42:51.866"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.866" endtime="20231121 01:42:51.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.868" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:51.867" endtime="20231121 01:42:51.868"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.868" endtime="20231121 01:42:51.869"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.869" endtime="20231121 01:42:51.870"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:51.870" endtime="20231121 01:42:51.870"/>
</return>
<status status="PASS" starttime="20231121 01:42:51.862" endtime="20231121 01:42:51.870"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.872" level="INFO">mock_device_action 340 scale 20.23</msg>
<status status="PASS" starttime="20231121 01:42:51.871" endtime="20231121 01:42:51.872"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:42:51.874" level="INFO">mock_device_action 340 scale 20.23</msg>
<status status="PASS" starttime="20231121 01:42:51.872" endtime="20231121 01:42:51.875"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:42:51.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.875" endtime="20231121 01:42:51.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:42:51.881" level="INFO"/>
<status status="PASS" starttime="20231121 01:42:51.881" endtime="20231121 01:42:51.881"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.881" endtime="20231121 01:42:51.882"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:42:51.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:42:51.883" endtime="20231121 01:42:51.883"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:42:51.883" endtime="20231121 01:42:51.884"/>
</return>
<status status="PASS" starttime="20231121 01:42:51.871" endtime="20231121 01:42:51.884"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:42:51.885" endtime="20231121 01:42:51.885"/>
</kw>
<status status="PASS" starttime="20231121 01:42:51.884" endtime="20231121 01:42:51.885"/>
</kw>
<status status="PASS" starttime="20231121 01:42:50.909" endtime="20231121 01:42:51.885"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:43:09.887" level="INFO">Slept 18 seconds</msg>
<status status="PASS" starttime="20231121 01:42:51.886" endtime="20231121 01:43:09.887"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:09.889" endtime="20231121 01:43:09.890"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:09.891" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:10.037" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:42:51 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:09.890" endtime="20231121 01:43:10.038"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.043" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:10.038" endtime="20231121 01:43:10.043"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:10.050" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:10.043" endtime="20231121 01:43:10.050"/>
</kw>
<status status="PASS" starttime="20231121 01:43:09.888" endtime="20231121 01:43:10.050"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.053" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:43:10.051" endtime="20231121 01:43:10.053"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:10.055" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:43:10.055" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:43:10.054" endtime="20231121 01:43:10.056"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.056" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:43:10.056" endtime="20231121 01:43:10.056"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.057" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:43:10.057" endtime="20231121 01:43:10.058"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:10.058" endtime="20231121 01:43:10.059"/>
</kw>
<status status="PASS" starttime="20231121 01:43:10.058" endtime="20231121 01:43:10.059"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:43:10.060" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:43:10.060" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:43:10.059" endtime="20231121 01:43:10.060"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:43:10.060" endtime="20231121 01:43:10.060"/>
</return>
<msg timestamp="20231121 01:43:10.061" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:43:09.888" endtime="20231121 01:43:10.061"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:43:10.061" endtime="20231121 01:43:10.062"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:10.063" endtime="20231121 01:43:10.064"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:10.065" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:10.213" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:09 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:10.064" endtime="20231121 01:43:10.213"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.218" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:10.214" endtime="20231121 01:43:10.218"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:10.224" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:10.218" endtime="20231121 01:43:10.225"/>
</kw>
<status status="PASS" starttime="20231121 01:43:10.063" endtime="20231121 01:43:10.225"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.228" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:43:10.225" endtime="20231121 01:43:10.228"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:10.230" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:43:10.230" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:43:10.229" endtime="20231121 01:43:10.231"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.231" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:43:10.231" endtime="20231121 01:43:10.231"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.232" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:43:10.232" endtime="20231121 01:43:10.232"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:10.233" endtime="20231121 01:43:10.233"/>
</kw>
<status status="PASS" starttime="20231121 01:43:10.233" endtime="20231121 01:43:10.234"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:43:10.234" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:43:10.235" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:43:10.234" endtime="20231121 01:43:10.235"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:43:10.235" endtime="20231121 01:43:10.235"/>
</return>
<msg timestamp="20231121 01:43:10.235" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:43:10.062" endtime="20231121 01:43:10.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:43:10.236" endtime="20231121 01:43:10.236"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:10.239" endtime="20231121 01:43:10.239"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:10.240" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:10.384" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:10 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:10.240" endtime="20231121 01:43:10.384"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.389" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:10.385" endtime="20231121 01:43:10.389"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:10.395" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:10.390" endtime="20231121 01:43:10.396"/>
</kw>
<status status="PASS" starttime="20231121 01:43:10.238" endtime="20231121 01:43:10.396"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:10.397" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:10.397" endtime="20231121 01:43:10.397"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.400" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:10.397" endtime="20231121 01:43:10.400"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:10.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:10.400" endtime="20231121 01:43:10.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:10.406" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:10.405" endtime="20231121 01:43:10.406"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:10.406" endtime="20231121 01:43:10.407"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:10.407" endtime="20231121 01:43:10.408"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:10.408" endtime="20231121 01:43:10.408"/>
</return>
<status status="PASS" starttime="20231121 01:43:10.396" endtime="20231121 01:43:10.408"/>
</kw>
<status status="PASS" starttime="20231121 01:43:10.238" endtime="20231121 01:43:10.408"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:10.410" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:10.409" endtime="20231121 01:43:10.410"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.413" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:10.410" endtime="20231121 01:43:10.413"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:10.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:10.413" endtime="20231121 01:43:10.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:10.415" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:10.415" endtime="20231121 01:43:10.415"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:10.416" endtime="20231121 01:43:10.416"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:10.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:10.417" endtime="20231121 01:43:10.417"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:10.417" endtime="20231121 01:43:10.418"/>
</return>
<status status="PASS" starttime="20231121 01:43:10.409" endtime="20231121 01:43:10.418"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:10.419" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:10.419" endtime="20231121 01:43:10.420"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:10.422" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:10.420" endtime="20231121 01:43:10.422"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.011" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:43:11.011" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:10.423" endtime="20231121 01:43:11.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.012" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:43:11.011" endtime="20231121 01:43:11.012"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.012" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:11.012" endtime="20231121 01:43:11.012"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.013" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:11.013" endtime="20231121 01:43:11.013"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:11.013" endtime="20231121 01:43:11.013"/>
</return>
<msg timestamp="20231121 01:43:11.014" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:10.418" endtime="20231121 01:43:11.014"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:43:11.014" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:43:11.015" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:43:11.014" endtime="20231121 01:43:11.015"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:43:11.015" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:43:11.015" endtime="20231121 01:43:11.016"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:43:11.016" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231121 01:43:11.016" endtime="20231121 01:43:11.017"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:43:11.018" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231121 01:43:11.017" endtime="20231121 01:43:11.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:11.019" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:43:11.018" endtime="20231121 01:43:11.019"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:11.019" endtime="20231121 01:43:11.020"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.019" endtime="20231121 01:43:11.020"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:43:11.020" endtime="20231121 01:43:11.020"/>
</return>
<msg timestamp="20231121 01:43:11.021" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:43:10.237" endtime="20231121 01:43:11.021"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:11.022" endtime="20231121 01:43:11.022"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:11.023" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:11.173" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:10 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:11.023" endtime="20231121 01:43:11.173"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.178" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:11.173" endtime="20231121 01:43:11.178"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.185" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:11.178" endtime="20231121 01:43:11.185"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.021" endtime="20231121 01:43:11.186"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.187" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:11.187" endtime="20231121 01:43:11.187"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.190" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:11.188" endtime="20231121 01:43:11.191"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.191" endtime="20231121 01:43:11.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.196" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:11.196" endtime="20231121 01:43:11.196"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.196" endtime="20231121 01:43:11.197"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.197" endtime="20231121 01:43:11.198"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:11.198" endtime="20231121 01:43:11.198"/>
</return>
<status status="PASS" starttime="20231121 01:43:11.186" endtime="20231121 01:43:11.199"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.021" endtime="20231121 01:43:11.199"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.200" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:11.199" endtime="20231121 01:43:11.200"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.203" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:11.200" endtime="20231121 01:43:11.203"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.203" endtime="20231121 01:43:11.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.205" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:11.205" endtime="20231121 01:43:11.205"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.205" endtime="20231121 01:43:11.206"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.206" endtime="20231121 01:43:11.207"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:11.207" endtime="20231121 01:43:11.207"/>
</return>
<status status="PASS" starttime="20231121 01:43:11.199" endtime="20231121 01:43:11.207"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.210" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:43:11.208" endtime="20231121 01:43:11.210"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.213" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:43:11.210" endtime="20231121 01:43:11.213"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.213" endtime="20231121 01:43:11.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.219" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:11.219" endtime="20231121 01:43:11.219"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.220" endtime="20231121 01:43:11.220"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.220" endtime="20231121 01:43:11.221"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:11.221" endtime="20231121 01:43:11.222"/>
</return>
<status status="PASS" starttime="20231121 01:43:11.208" endtime="20231121 01:43:11.222"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:11.223" endtime="20231121 01:43:11.223"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.222" endtime="20231121 01:43:11.223"/>
</kw>
<status status="PASS" starttime="20231121 01:43:10.237" endtime="20231121 01:43:11.223"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:11.226" endtime="20231121 01:43:11.226"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:11.227" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:11.372" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:11 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:11.227" endtime="20231121 01:43:11.372"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.376" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:11.372" endtime="20231121 01:43:11.376"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.382" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:11.376" endtime="20231121 01:43:11.382"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.225" endtime="20231121 01:43:11.382"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.384" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:11.383" endtime="20231121 01:43:11.384"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.387" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:11.384" endtime="20231121 01:43:11.388"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.388" endtime="20231121 01:43:11.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.393" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:11.393" endtime="20231121 01:43:11.394"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.394" endtime="20231121 01:43:11.394"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.395" endtime="20231121 01:43:11.395"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:11.396" endtime="20231121 01:43:11.396"/>
</return>
<status status="PASS" starttime="20231121 01:43:11.383" endtime="20231121 01:43:11.396"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.225" endtime="20231121 01:43:11.396"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.397" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:11.397" endtime="20231121 01:43:11.398"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.400" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:11.398" endtime="20231121 01:43:11.400"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.401" endtime="20231121 01:43:11.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.402" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:11.402" endtime="20231121 01:43:11.403"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.403" endtime="20231121 01:43:11.403"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:11.404" endtime="20231121 01:43:11.404"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:11.405" endtime="20231121 01:43:11.405"/>
</return>
<status status="PASS" starttime="20231121 01:43:11.396" endtime="20231121 01:43:11.405"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.406" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:11.406" endtime="20231121 01:43:11.406"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:11.409" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:11.406" endtime="20231121 01:43:11.409"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:11.971" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:43:11.972" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:11.409" endtime="20231121 01:43:11.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:11.972" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:43:11.972" endtime="20231121 01:43:11.972"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.974" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:11.973" endtime="20231121 01:43:11.974"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:11.975" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:11.975" endtime="20231121 01:43:11.976"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:11.976" endtime="20231121 01:43:11.976"/>
</return>
<msg timestamp="20231121 01:43:11.977" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:11.405" endtime="20231121 01:43:11.977"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:43:11.978" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:43:11.978" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:43:11.977" endtime="20231121 01:43:11.979"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:43:11.979" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:43:11.979" endtime="20231121 01:43:11.979"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:43:11.980" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:43:11.980" endtime="20231121 01:43:11.981"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:43:11.982" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:43:11.981" endtime="20231121 01:43:11.983"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:11.984" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:43:11.983" endtime="20231121 01:43:11.985"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:11.986" endtime="20231121 01:43:11.986"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.985" endtime="20231121 01:43:11.987"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:43:11.987" endtime="20231121 01:43:11.987"/>
</return>
<msg timestamp="20231121 01:43:11.987" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:43:11.224" endtime="20231121 01:43:11.987"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:11.989" endtime="20231121 01:43:11.990"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:11.990" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:12.138" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:11 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:11.990" endtime="20231121 01:43:12.138"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:12.142" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:12.138" endtime="20231121 01:43:12.143"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:12.149" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:12.143" endtime="20231121 01:43:12.149"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.988" endtime="20231121 01:43:12.150"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:12.151" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:12.150" endtime="20231121 01:43:12.151"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:12.154" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:12.151" endtime="20231121 01:43:12.154"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:12.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.154" endtime="20231121 01:43:12.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:12.159" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:12.159" endtime="20231121 01:43:12.159"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:12.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.160" endtime="20231121 01:43:12.160"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:12.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.161" endtime="20231121 01:43:12.161"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:12.161" endtime="20231121 01:43:12.161"/>
</return>
<status status="PASS" starttime="20231121 01:43:12.150" endtime="20231121 01:43:12.162"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.988" endtime="20231121 01:43:12.162"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:12.163" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:12.163" endtime="20231121 01:43:12.163"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:12.166" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:12.163" endtime="20231121 01:43:12.166"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:12.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.166" endtime="20231121 01:43:12.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:12.168" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:12.168" endtime="20231121 01:43:12.168"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:12.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.168" endtime="20231121 01:43:12.169"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:12.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.169" endtime="20231121 01:43:12.170"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:12.170" endtime="20231121 01:43:12.170"/>
</return>
<status status="PASS" starttime="20231121 01:43:12.162" endtime="20231121 01:43:12.170"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:12.172" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:43:12.171" endtime="20231121 01:43:12.172"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:12.174" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:43:12.172" endtime="20231121 01:43:12.175"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:12.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.175" endtime="20231121 01:43:12.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:12.181" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:12.181" endtime="20231121 01:43:12.181"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:12.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.181" endtime="20231121 01:43:12.182"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:12.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:12.182" endtime="20231121 01:43:12.183"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:12.183" endtime="20231121 01:43:12.183"/>
</return>
<status status="PASS" starttime="20231121 01:43:12.170" endtime="20231121 01:43:12.184"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:12.184" endtime="20231121 01:43:12.185"/>
</kw>
<status status="PASS" starttime="20231121 01:43:12.184" endtime="20231121 01:43:12.185"/>
</kw>
<status status="PASS" starttime="20231121 01:43:11.224" endtime="20231121 01:43:12.185"/>
</kw>
<status status="PASS" starttime="20231121 01:42:45.597" endtime="20231121 01:43:12.185"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:43:32.186" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20231121 01:43:12.186" endtime="20231121 01:43:32.187"/>
</kw>
<kw name="One Time Scale">
<arg>m</arg>
<arg>id</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${weight}</var>
<arg>${p_weight}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:32.190" level="INFO">${weight} = 20.23</msg>
<status status="PASS" starttime="20231121 01:43:32.189" endtime="20231121 01:43:32.190"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:32.191" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:43:32.190" endtime="20231121 01:43:32.191"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:32.192" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:43:32.191" endtime="20231121 01:43:32.192"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:32.193" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231121 01:43:32.193" endtime="20231121 01:43:32.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_reader}</var>
<arg>${s_fid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:32.195" level="INFO">${id_reader} = fi</msg>
<status status="PASS" starttime="20231121 01:43:32.194" endtime="20231121 01:43:32.195"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weight}</arg>
<arg>${m_weight}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:43:32.197" level="INFO">${weight} = 49.21</msg>
<status status="PASS" starttime="20231121 01:43:32.196" endtime="20231121 01:43:32.197"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:43:32.198" level="INFO">${e_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:43:32.197" endtime="20231121 01:43:32.198"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:43:32.199" level="INFO">${l_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:43:32.198" endtime="20231121 01:43:32.199"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:43:32.200" level="INFO">${pc} = bpc</msg>
<status status="PASS" starttime="20231121 01:43:32.199" endtime="20231121 01:43:32.200"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_reader}</arg>
<arg>${s_bid}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:43:32.201" level="INFO">${id_reader} = bi</msg>
<status status="PASS" starttime="20231121 01:43:32.200" endtime="20231121 01:43:32.201"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.195" endtime="20231121 01:43:32.201"/>
</branch>
<status status="PASS" starttime="20231121 01:43:32.195" endtime="20231121 01:43:32.201"/>
</if>
<if>
<branch type="IF" condition="$cam_or_id == 'cam'">
<kw name="Mock Plate Cap" library="dev_res">
<arg>${plate_no}</arg>
<arg>${pc}</arg>
<status status="NOT RUN" starttime="20231121 01:43:32.202" endtime="20231121 01:43:32.202"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:43:32.201" endtime="20231121 01:43:32.202"/>
</branch>
<branch type="ELSE">
<kw name="Mock Id Read" library="dev_res">
<arg>${driver_id}</arg>
<arg>${id_reader}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:32.206" endtime="20231121 01:43:32.206"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:32.207" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:32.355" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:12 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:32.207" endtime="20231121 01:43:32.356"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:32.359" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:32.356" endtime="20231121 01:43:32.360"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:32.367" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:32.360" endtime="20231121 01:43:32.367"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.205" endtime="20231121 01:43:32.367"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:32.368" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:32.368" endtime="20231121 01:43:32.369"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:32.372" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:32.369" endtime="20231121 01:43:32.372"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:32.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:32.373" endtime="20231121 01:43:32.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:32.377" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:32.377" endtime="20231121 01:43:32.377"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:32.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:32.378" endtime="20231121 01:43:32.378"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:32.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:32.378" endtime="20231121 01:43:32.379"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:32.380" endtime="20231121 01:43:32.380"/>
</return>
<status status="PASS" starttime="20231121 01:43:32.367" endtime="20231121 01:43:32.380"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.205" endtime="20231121 01:43:32.380"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:32.381" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:32.381" endtime="20231121 01:43:32.381"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:32.384" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:32.382" endtime="20231121 01:43:32.384"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:32.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:32.384" endtime="20231121 01:43:32.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:32.386" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:32.386" endtime="20231121 01:43:32.386"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:32.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:32.386" endtime="20231121 01:43:32.387"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:32.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:32.387" endtime="20231121 01:43:32.388"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:32.388" endtime="20231121 01:43:32.388"/>
</return>
<status status="PASS" starttime="20231121 01:43:32.380" endtime="20231121 01:43:32.389"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:32.390" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:32.389" endtime="20231121 01:43:32.390"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:32.393" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:32.390" endtime="20231121 01:43:32.393"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:32.970" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:43:32.970" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:32.393" endtime="20231121 01:43:32.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:32.971" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:43:32.971" endtime="20231121 01:43:32.971"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:32.972" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:32.971" endtime="20231121 01:43:32.972"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:32.972" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:32.972" endtime="20231121 01:43:32.972"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:32.972" endtime="20231121 01:43:32.973"/>
</return>
<msg timestamp="20231121 01:43:32.973" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:32.389" endtime="20231121 01:43:32.973"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:43:32.973" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:43:32.973" level="INFO">${lines} = |    |      | 336:bi  |</msg>
<status status="PASS" starttime="20231121 01:43:32.973" endtime="20231121 01:43:32.974"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:43:32.974" level="INFO">${line} = |    |      | 336:bi  |</msg>
<status status="PASS" starttime="20231121 01:43:32.974" endtime="20231121 01:43:32.974"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:43:32.975" level="INFO">${line_array} = ['|    |      | 336', 'bi  |']</msg>
<status status="PASS" starttime="20231121 01:43:32.974" endtime="20231121 01:43:32.975"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:43:32.976" level="INFO">${dev_name_array} = ['|', '|', '|', '336']</msg>
<status status="PASS" starttime="20231121 01:43:32.975" endtime="20231121 01:43:32.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:32.977" level="INFO">${dev_id} = 336</msg>
<status status="PASS" starttime="20231121 01:43:32.976" endtime="20231121 01:43:32.977"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:32.978" endtime="20231121 01:43:32.978"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.977" endtime="20231121 01:43:32.978"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:43:32.979" endtime="20231121 01:43:32.979"/>
</return>
<msg timestamp="20231121 01:43:32.980" level="INFO">${dev_id} = 336</msg>
<status status="PASS" starttime="20231121 01:43:32.204" endtime="20231121 01:43:32.980"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:32.981" endtime="20231121 01:43:32.982"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:32.983" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:33.150" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:32 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:32.982" endtime="20231121 01:43:33.150"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:33.154" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:33.151" endtime="20231121 01:43:33.154"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:33.173" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:33.155" endtime="20231121 01:43:33.173"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.980" endtime="20231121 01:43:33.173"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:33.175" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:33.174" endtime="20231121 01:43:33.175"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:33.178" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:33.175" endtime="20231121 01:43:33.178"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:33.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.178" endtime="20231121 01:43:33.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:33.184" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:33.184" endtime="20231121 01:43:33.184"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:33.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.185" endtime="20231121 01:43:33.185"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:33.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.186" endtime="20231121 01:43:33.186"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:33.187" endtime="20231121 01:43:33.187"/>
</return>
<status status="PASS" starttime="20231121 01:43:33.174" endtime="20231121 01:43:33.187"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.980" endtime="20231121 01:43:33.188"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:33.189" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:33.188" endtime="20231121 01:43:33.189"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:33.194" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:33.189" endtime="20231121 01:43:33.195"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:33.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.195" endtime="20231121 01:43:33.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:33.197" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:33.197" endtime="20231121 01:43:33.197"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:33.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.197" endtime="20231121 01:43:33.198"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:33.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.199" endtime="20231121 01:43:33.199"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:33.200" endtime="20231121 01:43:33.200"/>
</return>
<status status="PASS" starttime="20231121 01:43:33.188" endtime="20231121 01:43:33.200"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} id_reader ${id_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:33.201" level="INFO">mock_device_action 336 id_reader 123456789012345678</msg>
<status status="PASS" starttime="20231121 01:43:33.201" endtime="20231121 01:43:33.202"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:33.206" level="INFO">mock_device_action 336 id_reader 123456789012345678</msg>
<status status="PASS" starttime="20231121 01:43:33.202" endtime="20231121 01:43:33.206"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:33.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.207" endtime="20231121 01:43:33.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:33.218" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:33.218" endtime="20231121 01:43:33.219"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:33.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.219" endtime="20231121 01:43:33.220"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:33.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:33.220" endtime="20231121 01:43:33.221"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:33.222" endtime="20231121 01:43:33.222"/>
</return>
<status status="PASS" starttime="20231121 01:43:33.200" endtime="20231121 01:43:33.222"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:33.224" endtime="20231121 01:43:33.225"/>
</kw>
<status status="PASS" starttime="20231121 01:43:33.223" endtime="20231121 01:43:33.225"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.203" endtime="20231121 01:43:33.226"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.203" endtime="20231121 01:43:33.226"/>
</branch>
<status status="PASS" starttime="20231121 01:43:32.201" endtime="20231121 01:43:33.226"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:43:36.228" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231121 01:43:33.226" endtime="20231121 01:43:36.228"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:36.230" endtime="20231121 01:43:36.231"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:36.232" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:36.380" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:33 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:36.231" endtime="20231121 01:43:36.380"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.384" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:36.380" endtime="20231121 01:43:36.384"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:36.391" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:36.384" endtime="20231121 01:43:36.391"/>
</kw>
<status status="PASS" starttime="20231121 01:43:36.230" endtime="20231121 01:43:36.391"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.395" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:43:36.392" endtime="20231121 01:43:36.395"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:36.397" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:43:36.397" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:43:36.396" endtime="20231121 01:43:36.398"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.398" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:43:36.398" endtime="20231121 01:43:36.398"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.399" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:43:36.399" endtime="20231121 01:43:36.399"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:36.400" endtime="20231121 01:43:36.401"/>
</kw>
<status status="PASS" starttime="20231121 01:43:36.400" endtime="20231121 01:43:36.401"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:43:36.401" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:43:36.402" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:43:36.401" endtime="20231121 01:43:36.402"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:43:36.402" endtime="20231121 01:43:36.402"/>
</return>
<msg timestamp="20231121 01:43:36.402" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:43:36.229" endtime="20231121 01:43:36.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:43:36.403" endtime="20231121 01:43:36.404"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:36.405" endtime="20231121 01:43:36.406"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:36.406" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:36.550" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:36 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:36.406" endtime="20231121 01:43:36.551"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.555" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:36.551" endtime="20231121 01:43:36.555"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:36.561" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:36.555" endtime="20231121 01:43:36.561"/>
</kw>
<status status="PASS" starttime="20231121 01:43:36.405" endtime="20231121 01:43:36.561"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.565" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:43:36.562" endtime="20231121 01:43:36.565"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:36.567" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:43:36.567" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:43:36.565" endtime="20231121 01:43:36.567"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.568" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:43:36.567" endtime="20231121 01:43:36.568"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.569" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:43:36.568" endtime="20231121 01:43:36.569"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:36.569" endtime="20231121 01:43:36.570"/>
</kw>
<status status="PASS" starttime="20231121 01:43:36.569" endtime="20231121 01:43:36.570"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:43:36.571" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:43:36.571" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:43:36.571" endtime="20231121 01:43:36.571"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:43:36.572" endtime="20231121 01:43:36.572"/>
</return>
<msg timestamp="20231121 01:43:36.572" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:43:36.404" endtime="20231121 01:43:36.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:43:36.573" endtime="20231121 01:43:36.573"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:36.576" endtime="20231121 01:43:36.576"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:36.577" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:36.724" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:36 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:36.576" endtime="20231121 01:43:36.725"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.729" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:36.725" endtime="20231121 01:43:36.729"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:36.736" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:36.729" endtime="20231121 01:43:36.736"/>
</kw>
<status status="PASS" starttime="20231121 01:43:36.575" endtime="20231121 01:43:36.736"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:36.738" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:36.737" endtime="20231121 01:43:36.738"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.741" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:36.738" endtime="20231121 01:43:36.741"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:36.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:36.742" endtime="20231121 01:43:36.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:36.746" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:36.746" endtime="20231121 01:43:36.747"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:36.747" endtime="20231121 01:43:36.748"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:36.748" endtime="20231121 01:43:36.748"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:36.749" endtime="20231121 01:43:36.749"/>
</return>
<status status="PASS" starttime="20231121 01:43:36.736" endtime="20231121 01:43:36.749"/>
</kw>
<status status="PASS" starttime="20231121 01:43:36.575" endtime="20231121 01:43:36.749"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:36.750" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:36.750" endtime="20231121 01:43:36.750"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.753" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:36.751" endtime="20231121 01:43:36.753"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:36.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:36.754" endtime="20231121 01:43:36.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:36.755" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:36.755" endtime="20231121 01:43:36.755"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:36.756" endtime="20231121 01:43:36.756"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:36.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:36.757" endtime="20231121 01:43:36.757"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:36.757" endtime="20231121 01:43:36.758"/>
</return>
<status status="PASS" starttime="20231121 01:43:36.749" endtime="20231121 01:43:36.758"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:36.759" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:36.758" endtime="20231121 01:43:36.759"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:36.762" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:36.759" endtime="20231121 01:43:36.762"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.351" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:43:37.351" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:36.762" endtime="20231121 01:43:37.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.352" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:43:37.352" endtime="20231121 01:43:37.353"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.353" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:37.353" endtime="20231121 01:43:37.353"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.354" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:37.354" endtime="20231121 01:43:37.354"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:37.354" endtime="20231121 01:43:37.355"/>
</return>
<msg timestamp="20231121 01:43:37.355" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:36.758" endtime="20231121 01:43:37.355"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:43:37.356" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:43:37.356" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:43:37.355" endtime="20231121 01:43:37.356"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:43:37.357" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:43:37.356" endtime="20231121 01:43:37.358"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:43:37.358" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231121 01:43:37.358" endtime="20231121 01:43:37.359"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:43:37.360" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231121 01:43:37.359" endtime="20231121 01:43:37.360"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:37.361" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:43:37.360" endtime="20231121 01:43:37.362"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:37.362" endtime="20231121 01:43:37.363"/>
</kw>
<status status="PASS" starttime="20231121 01:43:37.362" endtime="20231121 01:43:37.363"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:43:37.363" endtime="20231121 01:43:37.363"/>
</return>
<msg timestamp="20231121 01:43:37.364" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:43:36.574" endtime="20231121 01:43:37.364"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:37.365" endtime="20231121 01:43:37.366"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:37.366" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:37.513" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:36 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:37.366" endtime="20231121 01:43:37.513"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.517" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:37.513" endtime="20231121 01:43:37.517"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.524" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:37.518" endtime="20231121 01:43:37.524"/>
</kw>
<status status="PASS" starttime="20231121 01:43:37.364" endtime="20231121 01:43:37.524"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.525" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:37.525" endtime="20231121 01:43:37.525"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.529" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:37.526" endtime="20231121 01:43:37.529"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.529" endtime="20231121 01:43:37.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.534" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:37.534" endtime="20231121 01:43:37.534"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.534" endtime="20231121 01:43:37.535"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.535" endtime="20231121 01:43:37.536"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:37.537" endtime="20231121 01:43:37.537"/>
</return>
<status status="PASS" starttime="20231121 01:43:37.524" endtime="20231121 01:43:37.537"/>
</kw>
<status status="PASS" starttime="20231121 01:43:37.364" endtime="20231121 01:43:37.537"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.538" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:37.538" endtime="20231121 01:43:37.538"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.541" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:37.539" endtime="20231121 01:43:37.541"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.541" endtime="20231121 01:43:37.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.543" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:37.543" endtime="20231121 01:43:37.543"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.544" endtime="20231121 01:43:37.544"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.544" endtime="20231121 01:43:37.545"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:37.545" endtime="20231121 01:43:37.545"/>
</return>
<status status="PASS" starttime="20231121 01:43:37.537" endtime="20231121 01:43:37.546"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.547" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:43:37.546" endtime="20231121 01:43:37.547"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.550" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:43:37.547" endtime="20231121 01:43:37.550"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.550" endtime="20231121 01:43:37.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.557" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:37.556" endtime="20231121 01:43:37.557"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.557" endtime="20231121 01:43:37.558"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.558" endtime="20231121 01:43:37.559"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:37.559" endtime="20231121 01:43:37.559"/>
</return>
<status status="PASS" starttime="20231121 01:43:37.546" endtime="20231121 01:43:37.559"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:37.560" endtime="20231121 01:43:37.560"/>
</kw>
<status status="PASS" starttime="20231121 01:43:37.559" endtime="20231121 01:43:37.561"/>
</kw>
<status status="PASS" starttime="20231121 01:43:36.573" endtime="20231121 01:43:37.561"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:37.563" endtime="20231121 01:43:37.564"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:37.564" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:37.715" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:37 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:37.564" endtime="20231121 01:43:37.715"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.720" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:37.715" endtime="20231121 01:43:37.721"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.727" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:37.721" endtime="20231121 01:43:37.727"/>
</kw>
<status status="PASS" starttime="20231121 01:43:37.563" endtime="20231121 01:43:37.728"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.729" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:37.728" endtime="20231121 01:43:37.729"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.732" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:37.729" endtime="20231121 01:43:37.732"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.732" endtime="20231121 01:43:37.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.737" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:37.737" endtime="20231121 01:43:37.737"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.738" endtime="20231121 01:43:37.738"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.738" endtime="20231121 01:43:37.739"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:37.739" endtime="20231121 01:43:37.739"/>
</return>
<status status="PASS" starttime="20231121 01:43:37.728" endtime="20231121 01:43:37.740"/>
</kw>
<status status="PASS" starttime="20231121 01:43:37.562" endtime="20231121 01:43:37.740"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.741" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:37.741" endtime="20231121 01:43:37.741"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.744" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:37.741" endtime="20231121 01:43:37.744"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:37.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.744" endtime="20231121 01:43:37.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.746" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:37.746" endtime="20231121 01:43:37.746"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.746" endtime="20231121 01:43:37.747"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:37.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:37.747" endtime="20231121 01:43:37.748"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:37.748" endtime="20231121 01:43:37.748"/>
</return>
<status status="PASS" starttime="20231121 01:43:37.740" endtime="20231121 01:43:37.749"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:37.750" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:37.749" endtime="20231121 01:43:37.750"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:37.753" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:37.750" endtime="20231121 01:43:37.753"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:38.349" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:43:38.349" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:37.753" endtime="20231121 01:43:38.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:38.350" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:43:38.350" endtime="20231121 01:43:38.350"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.351" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:38.350" endtime="20231121 01:43:38.351"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.351" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:38.351" endtime="20231121 01:43:38.351"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:38.352" endtime="20231121 01:43:38.352"/>
</return>
<msg timestamp="20231121 01:43:38.352" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:37.749" endtime="20231121 01:43:38.352"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:43:38.353" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:43:38.353" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:43:38.352" endtime="20231121 01:43:38.353"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:43:38.354" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:43:38.354" endtime="20231121 01:43:38.355"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:43:38.355" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:43:38.355" endtime="20231121 01:43:38.356"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:43:38.357" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:43:38.356" endtime="20231121 01:43:38.357"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:38.358" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:43:38.357" endtime="20231121 01:43:38.358"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:38.358" endtime="20231121 01:43:38.359"/>
</kw>
<status status="PASS" starttime="20231121 01:43:38.358" endtime="20231121 01:43:38.359"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:43:38.359" endtime="20231121 01:43:38.359"/>
</return>
<msg timestamp="20231121 01:43:38.359" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:43:37.562" endtime="20231121 01:43:38.360"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:38.361" endtime="20231121 01:43:38.362"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:38.362" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:38.511" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:37 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:38.362" endtime="20231121 01:43:38.511"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:38.516" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:38.512" endtime="20231121 01:43:38.516"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:38.522" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:38.516" endtime="20231121 01:43:38.522"/>
</kw>
<status status="PASS" starttime="20231121 01:43:38.360" endtime="20231121 01:43:38.523"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:38.524" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:38.524" endtime="20231121 01:43:38.524"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:38.527" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:38.524" endtime="20231121 01:43:38.527"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:38.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.527" endtime="20231121 01:43:38.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:38.533" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:38.532" endtime="20231121 01:43:38.533"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.533" endtime="20231121 01:43:38.534"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.534" endtime="20231121 01:43:38.535"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:38.535" endtime="20231121 01:43:38.535"/>
</return>
<status status="PASS" starttime="20231121 01:43:38.523" endtime="20231121 01:43:38.535"/>
</kw>
<status status="PASS" starttime="20231121 01:43:38.360" endtime="20231121 01:43:38.535"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:38.537" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:38.536" endtime="20231121 01:43:38.537"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:38.540" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:38.537" endtime="20231121 01:43:38.540"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:38.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.540" endtime="20231121 01:43:38.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:38.542" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:38.541" endtime="20231121 01:43:38.542"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.542" endtime="20231121 01:43:38.543"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.543" endtime="20231121 01:43:38.544"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:38.544" endtime="20231121 01:43:38.544"/>
</return>
<status status="PASS" starttime="20231121 01:43:38.536" endtime="20231121 01:43:38.545"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:38.546" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231121 01:43:38.545" endtime="20231121 01:43:38.546"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:38.549" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231121 01:43:38.546" endtime="20231121 01:43:38.549"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:38.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.549" endtime="20231121 01:43:38.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:38.556" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:38.556" endtime="20231121 01:43:38.556"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.556" endtime="20231121 01:43:38.557"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:38.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:38.557" endtime="20231121 01:43:38.558"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:38.558" endtime="20231121 01:43:38.558"/>
</return>
<status status="PASS" starttime="20231121 01:43:38.545" endtime="20231121 01:43:38.559"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:38.559" endtime="20231121 01:43:38.560"/>
</kw>
<status status="PASS" starttime="20231121 01:43:38.559" endtime="20231121 01:43:38.560"/>
</kw>
<status status="PASS" starttime="20231121 01:43:37.561" endtime="20231121 01:43:38.560"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:43:56.561" level="INFO">Slept 18 seconds</msg>
<status status="PASS" starttime="20231121 01:43:38.561" endtime="20231121 01:43:56.562"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:56.564" endtime="20231121 01:43:56.565"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:56.566" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:56.717" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:38 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:56.565" endtime="20231121 01:43:56.717"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:56.722" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:56.718" endtime="20231121 01:43:56.722"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:56.728" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:56.722" endtime="20231121 01:43:56.728"/>
</kw>
<status status="PASS" starttime="20231121 01:43:56.563" endtime="20231121 01:43:56.729"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:56.732" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:43:56.729" endtime="20231121 01:43:56.732"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:56.734" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:43:56.734" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:43:56.733" endtime="20231121 01:43:56.734"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:56.735" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:43:56.735" endtime="20231121 01:43:56.735"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:56.736" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:43:56.735" endtime="20231121 01:43:56.736"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:56.737" endtime="20231121 01:43:56.737"/>
</kw>
<status status="PASS" starttime="20231121 01:43:56.736" endtime="20231121 01:43:56.738"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:43:56.739" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:43:56.739" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:43:56.738" endtime="20231121 01:43:56.739"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:43:56.739" endtime="20231121 01:43:56.739"/>
</return>
<msg timestamp="20231121 01:43:56.740" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:43:56.562" endtime="20231121 01:43:56.740"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:43:56.740" endtime="20231121 01:43:56.741"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:56.742" endtime="20231121 01:43:56.743"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:56.743" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:56.889" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:56 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:56.743" endtime="20231121 01:43:56.889"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:56.893" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:56.889" endtime="20231121 01:43:56.894"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:56.900" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:56.894" endtime="20231121 01:43:56.900"/>
</kw>
<status status="PASS" starttime="20231121 01:43:56.741" endtime="20231121 01:43:56.900"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:56.904" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:43:56.900" endtime="20231121 01:43:56.904"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:56.906" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:43:56.906" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:43:56.904" endtime="20231121 01:43:56.907"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:56.907" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:43:56.907" endtime="20231121 01:43:56.907"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:56.908" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:43:56.908" endtime="20231121 01:43:56.908"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:56.909" endtime="20231121 01:43:56.910"/>
</kw>
<status status="PASS" starttime="20231121 01:43:56.909" endtime="20231121 01:43:56.910"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:43:56.911" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:43:56.911" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:43:56.910" endtime="20231121 01:43:56.911"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:43:56.912" endtime="20231121 01:43:56.912"/>
</return>
<msg timestamp="20231121 01:43:56.912" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:43:56.741" endtime="20231121 01:43:56.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:43:56.913" endtime="20231121 01:43:56.913"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:56.916" endtime="20231121 01:43:56.916"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:56.917" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:57.063" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:56 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:56.917" endtime="20231121 01:43:57.063"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.067" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:57.063" endtime="20231121 01:43:57.067"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.074" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:57.067" endtime="20231121 01:43:57.074"/>
</kw>
<status status="PASS" starttime="20231121 01:43:56.915" endtime="20231121 01:43:57.074"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.076" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:57.075" endtime="20231121 01:43:57.076"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.079" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:57.076" endtime="20231121 01:43:57.080"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.080" endtime="20231121 01:43:57.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.085" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:57.084" endtime="20231121 01:43:57.085"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.085" endtime="20231121 01:43:57.086"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.086" endtime="20231121 01:43:57.087"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:57.087" endtime="20231121 01:43:57.087"/>
</return>
<status status="PASS" starttime="20231121 01:43:57.075" endtime="20231121 01:43:57.088"/>
</kw>
<status status="PASS" starttime="20231121 01:43:56.915" endtime="20231121 01:43:57.088"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.089" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:57.089" endtime="20231121 01:43:57.089"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.092" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:57.089" endtime="20231121 01:43:57.092"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.092" endtime="20231121 01:43:57.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.094" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:57.093" endtime="20231121 01:43:57.094"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.094" endtime="20231121 01:43:57.095"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.095" endtime="20231121 01:43:57.096"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:57.096" endtime="20231121 01:43:57.096"/>
</return>
<status status="PASS" starttime="20231121 01:43:57.088" endtime="20231121 01:43:57.096"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.098" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:57.097" endtime="20231121 01:43:57.098"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.101" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:57.098" endtime="20231121 01:43:57.101"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.690" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:43:57.690" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:57.101" endtime="20231121 01:43:57.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.691" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:43:57.690" endtime="20231121 01:43:57.691"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.692" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:57.691" endtime="20231121 01:43:57.692"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.693" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:57.692" endtime="20231121 01:43:57.693"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:57.694" endtime="20231121 01:43:57.694"/>
</return>
<msg timestamp="20231121 01:43:57.694" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:57.097" endtime="20231121 01:43:57.694"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:43:57.695" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:43:57.695" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:43:57.694" endtime="20231121 01:43:57.695"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:43:57.696" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:43:57.695" endtime="20231121 01:43:57.696"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:43:57.696" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231121 01:43:57.696" endtime="20231121 01:43:57.697"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:43:57.698" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231121 01:43:57.697" endtime="20231121 01:43:57.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:57.699" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:43:57.698" endtime="20231121 01:43:57.699"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:57.699" endtime="20231121 01:43:57.700"/>
</kw>
<status status="PASS" starttime="20231121 01:43:57.699" endtime="20231121 01:43:57.700"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:43:57.700" endtime="20231121 01:43:57.701"/>
</return>
<msg timestamp="20231121 01:43:57.701" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:43:56.914" endtime="20231121 01:43:57.702"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:57.705" endtime="20231121 01:43:57.706"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:57.707" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:57.853" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:57 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:57.707" endtime="20231121 01:43:57.853"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.857" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:57.853" endtime="20231121 01:43:57.857"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.864" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:57.858" endtime="20231121 01:43:57.865"/>
</kw>
<status status="PASS" starttime="20231121 01:43:57.704" endtime="20231121 01:43:57.865"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.866" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:57.866" endtime="20231121 01:43:57.866"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.869" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:57.866" endtime="20231121 01:43:57.869"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.869" endtime="20231121 01:43:57.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.874" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:57.874" endtime="20231121 01:43:57.874"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.875" endtime="20231121 01:43:57.875"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.875" endtime="20231121 01:43:57.876"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:57.876" endtime="20231121 01:43:57.877"/>
</return>
<status status="PASS" starttime="20231121 01:43:57.865" endtime="20231121 01:43:57.877"/>
</kw>
<status status="PASS" starttime="20231121 01:43:57.703" endtime="20231121 01:43:57.877"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.878" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:57.878" endtime="20231121 01:43:57.878"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.881" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:57.878" endtime="20231121 01:43:57.881"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.882" endtime="20231121 01:43:57.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.883" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:57.883" endtime="20231121 01:43:57.884"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.884" endtime="20231121 01:43:57.885"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.885" endtime="20231121 01:43:57.886"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:57.886" endtime="20231121 01:43:57.886"/>
</return>
<status status="PASS" starttime="20231121 01:43:57.877" endtime="20231121 01:43:57.886"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.887" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:43:57.887" endtime="20231121 01:43:57.888"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:57.891" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:43:57.888" endtime="20231121 01:43:57.891"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:57.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.891" endtime="20231121 01:43:57.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:57.897" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:57.897" endtime="20231121 01:43:57.898"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.898" endtime="20231121 01:43:57.899"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:57.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:57.899" endtime="20231121 01:43:57.899"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:57.900" endtime="20231121 01:43:57.900"/>
</return>
<status status="PASS" starttime="20231121 01:43:57.886" endtime="20231121 01:43:57.900"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:57.901" endtime="20231121 01:43:57.901"/>
</kw>
<status status="PASS" starttime="20231121 01:43:57.900" endtime="20231121 01:43:57.901"/>
</kw>
<status status="PASS" starttime="20231121 01:43:56.913" endtime="20231121 01:43:57.902"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:57.904" endtime="20231121 01:43:57.905"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:57.905" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:58.049" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:57 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:57.905" endtime="20231121 01:43:58.050"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.054" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:58.050" endtime="20231121 01:43:58.055"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.061" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:58.055" endtime="20231121 01:43:58.061"/>
</kw>
<status status="PASS" starttime="20231121 01:43:57.904" endtime="20231121 01:43:58.062"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.063" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:58.062" endtime="20231121 01:43:58.063"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.067" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:58.063" endtime="20231121 01:43:58.067"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.067" endtime="20231121 01:43:58.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.072" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:58.072" endtime="20231121 01:43:58.073"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.073" endtime="20231121 01:43:58.074"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.074" endtime="20231121 01:43:58.075"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:58.075" endtime="20231121 01:43:58.075"/>
</return>
<status status="PASS" starttime="20231121 01:43:58.062" endtime="20231121 01:43:58.075"/>
</kw>
<status status="PASS" starttime="20231121 01:43:57.903" endtime="20231121 01:43:58.075"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.077" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:58.076" endtime="20231121 01:43:58.077"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.079" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:58.077" endtime="20231121 01:43:58.080"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.080" endtime="20231121 01:43:58.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.081" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:58.081" endtime="20231121 01:43:58.082"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.082" endtime="20231121 01:43:58.082"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.083" endtime="20231121 01:43:58.083"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:58.083" endtime="20231121 01:43:58.084"/>
</return>
<status status="PASS" starttime="20231121 01:43:58.076" endtime="20231121 01:43:58.084"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.085" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:58.085" endtime="20231121 01:43:58.085"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.088" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:43:58.085" endtime="20231121 01:43:58.088"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.664" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:43:58.664" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:58.088" endtime="20231121 01:43:58.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.665" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:43:58.664" endtime="20231121 01:43:58.665"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.665" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:58.665" endtime="20231121 01:43:58.665"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.666" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:58.665" endtime="20231121 01:43:58.666"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:58.666" endtime="20231121 01:43:58.666"/>
</return>
<msg timestamp="20231121 01:43:58.666" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:43:58.084" endtime="20231121 01:43:58.666"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:43:58.667" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:43:58.667" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:43:58.667" endtime="20231121 01:43:58.667"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:43:58.668" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:43:58.667" endtime="20231121 01:43:58.668"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:43:58.669" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:43:58.668" endtime="20231121 01:43:58.669"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:43:58.670" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:43:58.669" endtime="20231121 01:43:58.670"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:43:58.671" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:43:58.670" endtime="20231121 01:43:58.671"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:58.672" endtime="20231121 01:43:58.672"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.671" endtime="20231121 01:43:58.672"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:43:58.672" endtime="20231121 01:43:58.673"/>
</return>
<msg timestamp="20231121 01:43:58.673" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:43:57.903" endtime="20231121 01:43:58.673"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:58.675" endtime="20231121 01:43:58.676"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:58.678" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:58.830" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:58 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:58.677" endtime="20231121 01:43:58.830"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.833" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:58.831" endtime="20231121 01:43:58.834"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.840" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:58.834" endtime="20231121 01:43:58.840"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.674" endtime="20231121 01:43:58.840"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.841" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:58.841" endtime="20231121 01:43:58.842"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.844" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:58.842" endtime="20231121 01:43:58.844"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.844" endtime="20231121 01:43:58.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.850" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:58.849" endtime="20231121 01:43:58.850"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.850" endtime="20231121 01:43:58.850"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.851" endtime="20231121 01:43:58.851"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:58.852" endtime="20231121 01:43:58.852"/>
</return>
<status status="PASS" starttime="20231121 01:43:58.841" endtime="20231121 01:43:58.852"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.673" endtime="20231121 01:43:58.852"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.854" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:58.853" endtime="20231121 01:43:58.854"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.863" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:43:58.854" endtime="20231121 01:43:58.864"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.864" endtime="20231121 01:43:58.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.867" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:58.866" endtime="20231121 01:43:58.867"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.868" endtime="20231121 01:43:58.868"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.869" endtime="20231121 01:43:58.870"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:58.870" endtime="20231121 01:43:58.870"/>
</return>
<status status="PASS" starttime="20231121 01:43:58.852" endtime="20231121 01:43:58.871"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.872" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:43:58.872" endtime="20231121 01:43:58.872"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:58.880" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:43:58.872" endtime="20231121 01:43:58.880"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:58.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.881" endtime="20231121 01:43:58.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:58.894" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:58.893" endtime="20231121 01:43:58.894"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.894" endtime="20231121 01:43:58.895"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:58.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:58.895" endtime="20231121 01:43:58.896"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:58.896" endtime="20231121 01:43:58.896"/>
</return>
<status status="PASS" starttime="20231121 01:43:58.871" endtime="20231121 01:43:58.897"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:43:58.897" endtime="20231121 01:43:58.898"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.897" endtime="20231121 01:43:58.898"/>
</kw>
<status status="PASS" starttime="20231121 01:43:57.902" endtime="20231121 01:43:58.899"/>
</kw>
<status status="PASS" starttime="20231121 01:43:32.188" endtime="20231121 01:43:58.899"/>
</kw>
<kw name="Search Order" library="rest_res">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:43:58.904" endtime="20231121 01:43:58.905"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:43:58.905" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:43:59.063" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:58 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:58.905" endtime="20231121 01:43:59.064"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:59.067" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:43:59.064" endtime="20231121 01:43:59.067"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:59.074" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:43:59.068" endtime="20231121 01:43:59.074"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.903" endtime="20231121 01:43:59.074"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:59.075" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:59.075" endtime="20231121 01:43:59.076"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:59.079" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:43:59.076" endtime="20231121 01:43:59.079"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:59.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:59.080" endtime="20231121 01:43:59.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:59.085" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:59.084" endtime="20231121 01:43:59.085"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:59.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:59.085" endtime="20231121 01:43:59.086"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:59.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:59.086" endtime="20231121 01:43:59.087"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:59.087" endtime="20231121 01:43:59.087"/>
</return>
<status status="PASS" starttime="20231121 01:43:59.074" endtime="20231121 01:43:59.087"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.902" endtime="20231121 01:43:59.088"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:59.089" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:43:59.089" endtime="20231121 01:43:59.089"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:59.092" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:43:59.089" endtime="20231121 01:43:59.093"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:59.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:59.093" endtime="20231121 01:43:59.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:59.095" level="INFO"/>
<status status="PASS" starttime="20231121 01:43:59.094" endtime="20231121 01:43:59.095"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:59.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:59.095" endtime="20231121 01:43:59.096"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:59.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:43:59.096" endtime="20231121 01:43:59.097"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:59.097" endtime="20231121 01:43:59.098"/>
</return>
<status status="PASS" starttime="20231121 01:43:59.088" endtime="20231121 01:43:59.098"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:59.099" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:43:59.099" endtime="20231121 01:43:59.100"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:59.104" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:43:59.100" endtime="20231121 01:43:59.104"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:43:59.108" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:43:59.108" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:43:59.104" endtime="20231121 01:43:59.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:59.109" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:43:59.108" endtime="20231121 01:43:59.109"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:59.110" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:43:59.109" endtime="20231121 01:43:59.110"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:43:59.111" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:43:59.110" endtime="20231121 01:43:59.111"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:43:59.111" endtime="20231121 01:43:59.111"/>
</return>
<status status="PASS" starttime="20231121 01:43:59.098" endtime="20231121 01:43:59.111"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:43:59.113" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:43:59.112" endtime="20231121 01:43:59.113"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:43:59.116" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:43:59.113" endtime="20231121 01:43:59.116"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:01.427" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:44:01.427" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:43:59.116" endtime="20231121 01:44:01.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.428" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:44:01.428" endtime="20231121 01:44:01.429"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.430" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:44:01.429" endtime="20231121 01:44:01.430"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.430" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:44:01.430" endtime="20231121 01:44:01.431"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:01.431" endtime="20231121 01:44:01.431"/>
</return>
<msg timestamp="20231121 01:44:01.431" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:43:59.112" endtime="20231121 01:44:01.431"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:44:01.432" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:44:01.432" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:44:01.432" endtime="20231121 01:44:01.433"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:44:01.433" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:44:01.433" endtime="20231121 01:44:01.434"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:44:01.434" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:44:01.434" endtime="20231121 01:44:01.435"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:01.436" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:44:01.435" endtime="20231121 01:44:01.436"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.437" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:44:01.437" endtime="20231121 01:44:01.438"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:01.441" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:44:01.438" endtime="20231121 01:44:01.441"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:01.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.441" endtime="20231121 01:44:01.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.449" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:01.449" endtime="20231121 01:44:01.449"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.450" endtime="20231121 01:44:01.450"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.451" endtime="20231121 01:44:01.451"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:01.452" endtime="20231121 01:44:01.452"/>
</return>
<status status="PASS" starttime="20231121 01:44:01.436" endtime="20231121 01:44:01.452"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:01.453" endtime="20231121 01:44:01.453"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.452" endtime="20231121 01:44:01.453"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.901" endtime="20231121 01:44:01.454"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:44:01.454" endtime="20231121 01:44:01.455"/>
</return>
<msg timestamp="20231121 01:44:01.455" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:44:01.455" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:44:01.454" endtime="20231121 01:44:01.455"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:01.456" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:44:01.456" endtime="20231121 01:44:01.456"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:01.459" level="INFO">${header} = {'token': 'B18F25BF34C44B57B66703485CCDA28D'}</msg>
<status status="PASS" starttime="20231121 01:44:01.458" endtime="20231121 01:44:01.459"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:44:01.486" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'B18F25BF34C44B57B66703485CCDA28D', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:44:01.486" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:44:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-cxTJh30dIVOYrHuGCTmaaKC2mCI"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"F6A67E622957419A874E8A4DD309C074"} 
 </msg>
<msg timestamp="20231121 01:44:01.486" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:01.459" endtime="20231121 01:44:01.487"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:44:01.487" endtime="20231121 01:44:01.487"/>
</return>
<msg timestamp="20231121 01:44:01.487" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:01.457" endtime="20231121 01:44:01.488"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:44:01.489" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:44:01.488" endtime="20231121 01:44:01.489"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:44:01.489" endtime="20231121 01:44:01.490"/>
</return>
<msg timestamp="20231121 01:44:01.490" level="INFO">${token_resp} = F6A67E622957419A874E8A4DD309C074</msg>
<status status="PASS" starttime="20231121 01:44:01.457" endtime="20231121 01:44:01.491"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:44:01.491" level="INFO">${token} = F6A67E622957419A874E8A4DD309C074</msg>
<status status="PASS" starttime="20231121 01:44:01.491" endtime="20231121 01:44:01.492"/>
</kw>
<status status="PASS" starttime="20231121 01:43:58.900" endtime="20231121 01:44:01.492"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:01.493" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231121 01:44:01.492" endtime="20231121 01:44:01.493"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:01.495" level="INFO">${header} = {'token': 'F6A67E622957419A874E8A4DD309C074'}</msg>
<status status="PASS" starttime="20231121 01:44:01.495" endtime="20231121 01:44:01.496"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:44:01.516" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'F6A67E622957419A874E8A4DD309C074', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231121 01:44:01.517" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:44:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1009', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3f1-WhghAwdUYHyOB2jZFB3WVdL9k6o"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[{"id":34,"order_number":"170050216034","plate_number":"京A12345","back_plate_number":"","driver_name":"","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":49.21,"m_weight":0,"enter_weight":0,"reg_info":{"operator_name":"abc","operator_time":"2023-11-21 01:42:45"},"call_info":{"operator_name":"abc","operator_time":"2023-11-21 01:42:45"},"confirm_info":{"operator_name":"","operator_time":""},"seal_no":"","history_records":[{"node_name":"一次称重","node_caller":"自动","occour_time":"2023-11-21 01:43:52","id":57}],"order_attachs":[{"att_name":"上磅照片","att_path":"/files/B7B9962995504424BA4C3CB829A0FBD0.txt","id":164},{"att_name":"过磅录像","att_path":"","id":165},{"att_name":"过磅录像","att_path":"","id":166},{"att_name":"上磅照片","att_path":"/files/04CE8BB821C54BC58E9BD0805B83510C.txt","id":167}],"p_time":"2023-11-21 01:43:52","m_time":"","is_sale":false,"status":2,"company_name":"京东","stuff_from":""}]} 
 </msg>
<msg timestamp="20231121 01:44:01.517" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:01.496" endtime="20231121 01:44:01.517"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:44:01.517" endtime="20231121 01:44:01.517"/>
</return>
<msg timestamp="20231121 01:44:01.518" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:01.494" endtime="20231121 01:44:01.518"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:44:01.519" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:44:01.518" endtime="20231121 01:44:01.520"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:44:01.520" endtime="20231121 01:44:01.520"/>
</return>
<msg timestamp="20231121 01:44:01.521" level="INFO">${search_result} = [{'id': 34, 'order_number': '170050216034', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231121 01:44:01.494" endtime="20231121 01:44:01.521"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231121 01:44:01.521" endtime="20231121 01:44:01.522"/>
</return>
<msg timestamp="20231121 01:44:01.522" level="INFO">${driver_result} = [{'id': 34, 'order_number': '170050216034', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231121 01:43:58.899" endtime="20231121 01:44:01.522"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${driver_result}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231121 01:44:01.523" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20231121 01:44:01.522" endtime="20231121 01:44:01.523"/>
</kw>
<kw name="Confirm Order" library="field_opt">
<arg>order_number=${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${confirm_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_confirm=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:01.525" level="INFO">${confirm_req} = {'order_number': '170050216034', 'is_confirm': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231121 01:44:01.524" endtime="20231121 01:44:01.525"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/confirm</arg>
<arg>${confirm_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:01.527" level="INFO">${header} = {'token': 'F6A67E622957419A874E8A4DD309C074'}</msg>
<status status="PASS" starttime="20231121 01:44:01.526" endtime="20231121 01:44:01.528"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:44:01.560" level="INFO">POST Request : url=http://localhost:31700/api/order/confirm 
 path_url=/api/order/confirm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'F6A67E622957419A874E8A4DD309C074', 'Content-Length': '71', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050216034", "is_confirm": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231121 01:44:01.561" level="INFO">POST Response : url=http://localhost:31700/api/order/confirm 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:44:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1d-2l+eR6Tw+kxHihPdYUt2upGNfBc"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":false} 
 </msg>
<msg timestamp="20231121 01:44:01.561" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:01.528" endtime="20231121 01:44:01.562"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:44:01.562" endtime="20231121 01:44:01.562"/>
</return>
<msg timestamp="20231121 01:44:01.563" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:01.526" endtime="20231121 01:44:01.563"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:44:01.564" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:44:01.563" endtime="20231121 01:44:01.565"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:44:01.565" endtime="20231121 01:44:01.565"/>
</return>
<status status="PASS" starttime="20231121 01:44:01.525" endtime="20231121 01:44:01.566"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.523" endtime="20231121 01:44:01.566"/>
</kw>
<kw name="One Time Scale">
<arg>m</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${weight}</var>
<arg>${p_weight}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:01.568" level="INFO">${weight} = 20.23</msg>
<status status="PASS" starttime="20231121 01:44:01.567" endtime="20231121 01:44:01.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:01.568" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:44:01.568" endtime="20231121 01:44:01.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:01.569" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:44:01.569" endtime="20231121 01:44:01.569"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:01.570" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231121 01:44:01.569" endtime="20231121 01:44:01.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_reader}</var>
<arg>${s_fid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:01.571" level="INFO">${id_reader} = fi</msg>
<status status="PASS" starttime="20231121 01:44:01.571" endtime="20231121 01:44:01.571"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weight}</arg>
<arg>${m_weight}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:44:01.573" level="INFO">${weight} = 49.21</msg>
<status status="PASS" starttime="20231121 01:44:01.572" endtime="20231121 01:44:01.573"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:44:01.574" level="INFO">${e_gate} = bg</msg>
<status status="PASS" starttime="20231121 01:44:01.573" endtime="20231121 01:44:01.574"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:44:01.575" level="INFO">${l_gate} = fg</msg>
<status status="PASS" starttime="20231121 01:44:01.574" endtime="20231121 01:44:01.575"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:44:01.576" level="INFO">${pc} = bpc</msg>
<status status="PASS" starttime="20231121 01:44:01.575" endtime="20231121 01:44:01.576"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_reader}</arg>
<arg>${s_bid}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231121 01:44:01.577" level="INFO">${id_reader} = bi</msg>
<status status="PASS" starttime="20231121 01:44:01.576" endtime="20231121 01:44:01.577"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.572" endtime="20231121 01:44:01.577"/>
</branch>
<status status="PASS" starttime="20231121 01:44:01.572" endtime="20231121 01:44:01.577"/>
</if>
<if>
<branch type="IF" condition="$cam_or_id == 'cam'">
<kw name="Mock Plate Cap" library="dev_res">
<arg>${plate_no}</arg>
<arg>${pc}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:01.580" endtime="20231121 01:44:01.580"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:01.581" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:01.740" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:43:59 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:01.581" endtime="20231121 01:44:01.740"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:01.745" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:01.740" endtime="20231121 01:44:01.745"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:01.753" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:01.746" endtime="20231121 01:44:01.754"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.579" endtime="20231121 01:44:01.754"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.755" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:01.755" endtime="20231121 01:44:01.755"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:01.759" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:01.756" endtime="20231121 01:44:01.759"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:01.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.760" endtime="20231121 01:44:01.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.765" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:01.765" endtime="20231121 01:44:01.765"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.766" endtime="20231121 01:44:01.767"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.767" endtime="20231121 01:44:01.768"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:01.768" endtime="20231121 01:44:01.768"/>
</return>
<status status="PASS" starttime="20231121 01:44:01.754" endtime="20231121 01:44:01.768"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.579" endtime="20231121 01:44:01.768"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.770" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:01.769" endtime="20231121 01:44:01.770"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:01.773" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:01.770" endtime="20231121 01:44:01.773"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:01.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.773" endtime="20231121 01:44:01.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.775" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:01.774" endtime="20231121 01:44:01.775"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.775" endtime="20231121 01:44:01.776"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:01.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:01.776" endtime="20231121 01:44:01.777"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:01.777" endtime="20231121 01:44:01.777"/>
</return>
<status status="PASS" starttime="20231121 01:44:01.769" endtime="20231121 01:44:01.777"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:01.778" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:01.778" endtime="20231121 01:44:01.779"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:01.781" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:01.779" endtime="20231121 01:44:01.781"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:02.391" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:44:02.391" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:01.782" endtime="20231121 01:44:02.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:02.392" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:44:02.392" endtime="20231121 01:44:02.392"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.393" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:02.392" endtime="20231121 01:44:02.393"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.393" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:02.393" endtime="20231121 01:44:02.393"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:02.393" endtime="20231121 01:44:02.394"/>
</return>
<msg timestamp="20231121 01:44:02.394" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:01.777" endtime="20231121 01:44:02.394"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:44:02.395" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:44:02.396" level="INFO">${lines} = |    |      | 332:bpc |</msg>
<status status="PASS" starttime="20231121 01:44:02.395" endtime="20231121 01:44:02.396"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:44:02.397" level="INFO">${line} = |    |      | 332:bpc |</msg>
<status status="PASS" starttime="20231121 01:44:02.396" endtime="20231121 01:44:02.397"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:44:02.398" level="INFO">${line_array} = ['|    |      | 332', 'bpc |']</msg>
<status status="PASS" starttime="20231121 01:44:02.397" endtime="20231121 01:44:02.398"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:44:02.400" level="INFO">${dev_name_array} = ['|', '|', '|', '332']</msg>
<status status="PASS" starttime="20231121 01:44:02.398" endtime="20231121 01:44:02.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:02.401" level="INFO">${dev_id} = 332</msg>
<status status="PASS" starttime="20231121 01:44:02.400" endtime="20231121 01:44:02.401"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:02.402" endtime="20231121 01:44:02.403"/>
</kw>
<status status="PASS" starttime="20231121 01:44:02.401" endtime="20231121 01:44:02.403"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:44:02.403" endtime="20231121 01:44:02.404"/>
</return>
<msg timestamp="20231121 01:44:02.404" level="INFO">${dev_id} = 332</msg>
<status status="PASS" starttime="20231121 01:44:01.578" endtime="20231121 01:44:02.404"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:02.406" endtime="20231121 01:44:02.406"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:02.407" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:02.554" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:01 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:02.407" endtime="20231121 01:44:02.554"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:02.558" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:02.554" endtime="20231121 01:44:02.558"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:02.565" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:02.559" endtime="20231121 01:44:02.565"/>
</kw>
<status status="PASS" starttime="20231121 01:44:02.405" endtime="20231121 01:44:02.566"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:02.567" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:02.566" endtime="20231121 01:44:02.567"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:02.570" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:02.567" endtime="20231121 01:44:02.570"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:02.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.570" endtime="20231121 01:44:02.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:02.575" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:02.575" endtime="20231121 01:44:02.575"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.576" endtime="20231121 01:44:02.577"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.577" endtime="20231121 01:44:02.577"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:02.578" endtime="20231121 01:44:02.578"/>
</return>
<status status="PASS" starttime="20231121 01:44:02.566" endtime="20231121 01:44:02.578"/>
</kw>
<status status="PASS" starttime="20231121 01:44:02.404" endtime="20231121 01:44:02.578"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:02.579" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:02.579" endtime="20231121 01:44:02.580"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:02.582" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:02.580" endtime="20231121 01:44:02.582"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:02.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.583" endtime="20231121 01:44:02.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:02.584" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:02.584" endtime="20231121 01:44:02.584"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.585" endtime="20231121 01:44:02.586"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.586" endtime="20231121 01:44:02.586"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:02.587" endtime="20231121 01:44:02.587"/>
</return>
<status status="PASS" starttime="20231121 01:44:02.578" endtime="20231121 01:44:02.587"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} plate ${plate_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:02.588" level="INFO">mock_device_action 332 plate 京A12345</msg>
<status status="PASS" starttime="20231121 01:44:02.588" endtime="20231121 01:44:02.589"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:02.591" level="INFO">mock_device_action 332 plate äº¬A12345</msg>
<status status="PASS" starttime="20231121 01:44:02.589" endtime="20231121 01:44:02.592"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:02.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.592" endtime="20231121 01:44:02.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:02.598" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:02.598" endtime="20231121 01:44:02.598"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.598" endtime="20231121 01:44:02.599"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:02.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:02.599" endtime="20231121 01:44:02.600"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:02.600" endtime="20231121 01:44:02.601"/>
</return>
<status status="PASS" starttime="20231121 01:44:02.587" endtime="20231121 01:44:02.601"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:02.602" endtime="20231121 01:44:02.602"/>
</kw>
<status status="PASS" starttime="20231121 01:44:02.601" endtime="20231121 01:44:02.602"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.577" endtime="20231121 01:44:02.603"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.577" endtime="20231121 01:44:02.603"/>
</branch>
<branch type="ELSE">
<kw name="Mock Id Read" library="dev_res">
<arg>${driver_id}</arg>
<arg>${id_reader}</arg>
<status status="NOT RUN" starttime="20231121 01:44:02.603" endtime="20231121 01:44:02.604"/>
</kw>
<status status="NOT RUN" starttime="20231121 01:44:02.603" endtime="20231121 01:44:02.604"/>
</branch>
<status status="PASS" starttime="20231121 01:44:01.577" endtime="20231121 01:44:02.604"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:44:05.606" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231121 01:44:02.604" endtime="20231121 01:44:05.607"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:05.609" endtime="20231121 01:44:05.611"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:05.611" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:05.760" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:02 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:05.611" endtime="20231121 01:44:05.760"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:05.764" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:05.761" endtime="20231121 01:44:05.764"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:05.771" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:05.765" endtime="20231121 01:44:05.771"/>
</kw>
<status status="PASS" starttime="20231121 01:44:05.609" endtime="20231121 01:44:05.771"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:05.775" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:44:05.772" endtime="20231121 01:44:05.775"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:05.778" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:44:05.778" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:44:05.776" endtime="20231121 01:44:05.778"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:05.779" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:44:05.778" endtime="20231121 01:44:05.779"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:05.780" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:44:05.779" endtime="20231121 01:44:05.780"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:05.781" endtime="20231121 01:44:05.781"/>
</kw>
<status status="PASS" starttime="20231121 01:44:05.780" endtime="20231121 01:44:05.782"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:44:05.782" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:44:05.783" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:44:05.782" endtime="20231121 01:44:05.783"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:44:05.783" endtime="20231121 01:44:05.783"/>
</return>
<msg timestamp="20231121 01:44:05.783" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:44:05.608" endtime="20231121 01:44:05.784"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:44:05.784" endtime="20231121 01:44:05.784"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:05.786" endtime="20231121 01:44:05.786"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:05.787" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:05.932" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:05 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:05.787" endtime="20231121 01:44:05.932"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:05.936" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:05.932" endtime="20231121 01:44:05.936"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:05.943" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:05.937" endtime="20231121 01:44:05.943"/>
</kw>
<status status="PASS" starttime="20231121 01:44:05.785" endtime="20231121 01:44:05.943"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:05.947" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:44:05.944" endtime="20231121 01:44:05.947"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:05.949" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:44:05.949" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:44:05.948" endtime="20231121 01:44:05.950"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:05.950" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:44:05.950" endtime="20231121 01:44:05.950"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:05.951" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:44:05.951" endtime="20231121 01:44:05.951"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:05.952" endtime="20231121 01:44:05.953"/>
</kw>
<status status="PASS" starttime="20231121 01:44:05.951" endtime="20231121 01:44:05.953"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:44:05.954" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:44:05.954" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:44:05.953" endtime="20231121 01:44:05.954"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:44:05.954" endtime="20231121 01:44:05.954"/>
</return>
<msg timestamp="20231121 01:44:05.954" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:44:05.785" endtime="20231121 01:44:05.955"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:44:05.955" endtime="20231121 01:44:05.956"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:05.958" endtime="20231121 01:44:05.959"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:05.959" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:06.100" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:05 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:05.959" endtime="20231121 01:44:06.101"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.105" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:06.101" endtime="20231121 01:44:06.106"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.112" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:06.106" endtime="20231121 01:44:06.112"/>
</kw>
<status status="PASS" starttime="20231121 01:44:05.958" endtime="20231121 01:44:06.112"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.114" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:06.113" endtime="20231121 01:44:06.114"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.118" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:06.114" endtime="20231121 01:44:06.118"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.118" endtime="20231121 01:44:06.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.123" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:06.123" endtime="20231121 01:44:06.123"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.123" endtime="20231121 01:44:06.124"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.124" endtime="20231121 01:44:06.125"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:06.125" endtime="20231121 01:44:06.125"/>
</return>
<status status="PASS" starttime="20231121 01:44:06.113" endtime="20231121 01:44:06.126"/>
</kw>
<status status="PASS" starttime="20231121 01:44:05.957" endtime="20231121 01:44:06.126"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.127" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:06.127" endtime="20231121 01:44:06.127"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.130" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:06.127" endtime="20231121 01:44:06.130"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.130" endtime="20231121 01:44:06.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.132" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:06.132" endtime="20231121 01:44:06.132"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.132" endtime="20231121 01:44:06.133"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.133" endtime="20231121 01:44:06.134"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:06.134" endtime="20231121 01:44:06.134"/>
</return>
<status status="PASS" starttime="20231121 01:44:06.126" endtime="20231121 01:44:06.135"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.136" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:06.135" endtime="20231121 01:44:06.136"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.139" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:06.136" endtime="20231121 01:44:06.139"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.718" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:44:06.719" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:06.139" endtime="20231121 01:44:06.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.720" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:44:06.719" endtime="20231121 01:44:06.720"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.720" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:06.720" endtime="20231121 01:44:06.720"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.721" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:06.721" endtime="20231121 01:44:06.721"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:06.721" endtime="20231121 01:44:06.721"/>
</return>
<msg timestamp="20231121 01:44:06.722" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:06.135" endtime="20231121 01:44:06.722"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:44:06.722" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:44:06.722" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:44:06.722" endtime="20231121 01:44:06.722"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:44:06.723" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231121 01:44:06.723" endtime="20231121 01:44:06.723"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:44:06.724" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231121 01:44:06.724" endtime="20231121 01:44:06.724"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:44:06.726" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231121 01:44:06.724" endtime="20231121 01:44:06.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:06.728" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:44:06.727" endtime="20231121 01:44:06.729"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:06.729" endtime="20231121 01:44:06.730"/>
</kw>
<status status="PASS" starttime="20231121 01:44:06.729" endtime="20231121 01:44:06.730"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:44:06.730" endtime="20231121 01:44:06.731"/>
</return>
<msg timestamp="20231121 01:44:06.731" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231121 01:44:05.957" endtime="20231121 01:44:06.731"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:06.733" endtime="20231121 01:44:06.734"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:06.735" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:06.882" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:06 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:06.734" endtime="20231121 01:44:06.883"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.887" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:06.883" endtime="20231121 01:44:06.887"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.893" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:06.887" endtime="20231121 01:44:06.893"/>
</kw>
<status status="PASS" starttime="20231121 01:44:06.732" endtime="20231121 01:44:06.894"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.895" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:06.894" endtime="20231121 01:44:06.895"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.898" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:06.895" endtime="20231121 01:44:06.898"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.898" endtime="20231121 01:44:06.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.904" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:06.903" endtime="20231121 01:44:06.904"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.904" endtime="20231121 01:44:06.905"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.905" endtime="20231121 01:44:06.906"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:06.906" endtime="20231121 01:44:06.907"/>
</return>
<status status="PASS" starttime="20231121 01:44:06.894" endtime="20231121 01:44:06.907"/>
</kw>
<status status="PASS" starttime="20231121 01:44:06.732" endtime="20231121 01:44:06.907"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.908" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:06.908" endtime="20231121 01:44:06.908"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.911" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:06.909" endtime="20231121 01:44:06.911"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.911" endtime="20231121 01:44:06.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.913" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:06.913" endtime="20231121 01:44:06.913"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.913" endtime="20231121 01:44:06.914"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.914" endtime="20231121 01:44:06.915"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:06.915" endtime="20231121 01:44:06.915"/>
</return>
<status status="PASS" starttime="20231121 01:44:06.907" endtime="20231121 01:44:06.916"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.917" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:44:06.916" endtime="20231121 01:44:06.917"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:06.920" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231121 01:44:06.917" endtime="20231121 01:44:06.920"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:06.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.920" endtime="20231121 01:44:06.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:06.927" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:06.926" endtime="20231121 01:44:06.927"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.927" endtime="20231121 01:44:06.928"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:06.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:06.928" endtime="20231121 01:44:06.929"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:06.929" endtime="20231121 01:44:06.930"/>
</return>
<status status="PASS" starttime="20231121 01:44:06.916" endtime="20231121 01:44:06.930"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:06.930" endtime="20231121 01:44:06.931"/>
</kw>
<status status="PASS" starttime="20231121 01:44:06.930" endtime="20231121 01:44:06.931"/>
</kw>
<status status="PASS" starttime="20231121 01:44:05.956" endtime="20231121 01:44:06.931"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:06.934" endtime="20231121 01:44:06.934"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:06.935" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:07.084" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:06 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:06.935" endtime="20231121 01:44:07.084"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.088" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:07.084" endtime="20231121 01:44:07.088"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.093" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:07.088" endtime="20231121 01:44:07.094"/>
</kw>
<status status="PASS" starttime="20231121 01:44:06.933" endtime="20231121 01:44:07.094"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.095" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:07.095" endtime="20231121 01:44:07.095"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.098" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:07.096" endtime="20231121 01:44:07.098"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.099" endtime="20231121 01:44:07.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.104" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:07.103" endtime="20231121 01:44:07.104"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.104" endtime="20231121 01:44:07.105"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.105" endtime="20231121 01:44:07.105"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:07.106" endtime="20231121 01:44:07.106"/>
</return>
<status status="PASS" starttime="20231121 01:44:07.094" endtime="20231121 01:44:07.106"/>
</kw>
<status status="PASS" starttime="20231121 01:44:06.933" endtime="20231121 01:44:07.106"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.107" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:07.107" endtime="20231121 01:44:07.108"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.110" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:07.108" endtime="20231121 01:44:07.111"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.111" endtime="20231121 01:44:07.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.113" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:07.112" endtime="20231121 01:44:07.113"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.113" endtime="20231121 01:44:07.114"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.114" endtime="20231121 01:44:07.114"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:07.115" endtime="20231121 01:44:07.115"/>
</return>
<status status="PASS" starttime="20231121 01:44:07.106" endtime="20231121 01:44:07.115"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.116" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:07.116" endtime="20231121 01:44:07.117"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.119" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:07.117" endtime="20231121 01:44:07.120"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.729" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:44:07.729" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:07.120" endtime="20231121 01:44:07.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.730" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:44:07.729" endtime="20231121 01:44:07.730"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.730" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:07.730" endtime="20231121 01:44:07.730"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.731" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:07.730" endtime="20231121 01:44:07.731"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:07.731" endtime="20231121 01:44:07.731"/>
</return>
<msg timestamp="20231121 01:44:07.731" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:07.115" endtime="20231121 01:44:07.731"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:44:07.732" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:44:07.732" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:44:07.732" endtime="20231121 01:44:07.732"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:44:07.733" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:44:07.732" endtime="20231121 01:44:07.733"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:44:07.733" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:44:07.733" endtime="20231121 01:44:07.733"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:44:07.735" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:44:07.734" endtime="20231121 01:44:07.735"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:07.736" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:44:07.735" endtime="20231121 01:44:07.736"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:07.737" endtime="20231121 01:44:07.737"/>
</kw>
<status status="PASS" starttime="20231121 01:44:07.736" endtime="20231121 01:44:07.737"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:44:07.737" endtime="20231121 01:44:07.738"/>
</return>
<msg timestamp="20231121 01:44:07.738" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:44:06.932" endtime="20231121 01:44:07.738"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:07.742" endtime="20231121 01:44:07.743"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:07.744" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:07.892" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:07 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:07.743" endtime="20231121 01:44:07.892"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.896" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:07.893" endtime="20231121 01:44:07.897"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.903" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:07.897" endtime="20231121 01:44:07.903"/>
</kw>
<status status="PASS" starttime="20231121 01:44:07.741" endtime="20231121 01:44:07.903"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.904" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:07.904" endtime="20231121 01:44:07.905"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.908" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:07.905" endtime="20231121 01:44:07.909"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.909" endtime="20231121 01:44:07.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.914" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:07.914" endtime="20231121 01:44:07.914"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.915" endtime="20231121 01:44:07.915"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.915" endtime="20231121 01:44:07.916"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:07.916" endtime="20231121 01:44:07.916"/>
</return>
<status status="PASS" starttime="20231121 01:44:07.904" endtime="20231121 01:44:07.917"/>
</kw>
<status status="PASS" starttime="20231121 01:44:07.739" endtime="20231121 01:44:07.917"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.918" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:07.917" endtime="20231121 01:44:07.918"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.921" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:07.918" endtime="20231121 01:44:07.921"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.922" endtime="20231121 01:44:07.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.923" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:07.923" endtime="20231121 01:44:07.923"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.923" endtime="20231121 01:44:07.924"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.924" endtime="20231121 01:44:07.925"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:07.925" endtime="20231121 01:44:07.925"/>
</return>
<status status="PASS" starttime="20231121 01:44:07.917" endtime="20231121 01:44:07.926"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.927" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231121 01:44:07.926" endtime="20231121 01:44:07.927"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:07.930" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231121 01:44:07.927" endtime="20231121 01:44:07.930"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:07.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.930" endtime="20231121 01:44:07.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:07.936" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:07.936" endtime="20231121 01:44:07.937"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.937" endtime="20231121 01:44:07.938"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:07.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:07.938" endtime="20231121 01:44:07.938"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:07.939" endtime="20231121 01:44:07.939"/>
</return>
<status status="PASS" starttime="20231121 01:44:07.926" endtime="20231121 01:44:07.939"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:07.940" endtime="20231121 01:44:07.940"/>
</kw>
<status status="PASS" starttime="20231121 01:44:07.939" endtime="20231121 01:44:07.940"/>
</kw>
<status status="PASS" starttime="20231121 01:44:06.931" endtime="20231121 01:44:07.940"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231121 01:44:25.941" level="INFO">Slept 18 seconds</msg>
<status status="PASS" starttime="20231121 01:44:07.941" endtime="20231121 01:44:25.942"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:25.944" endtime="20231121 01:44:25.945"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:25.946" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:26.097" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:07 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:25.946" endtime="20231121 01:44:26.097"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.101" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:26.097" endtime="20231121 01:44:26.101"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:26.107" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:26.101" endtime="20231121 01:44:26.107"/>
</kw>
<status status="PASS" starttime="20231121 01:44:25.943" endtime="20231121 01:44:26.108"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.111" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231121 01:44:26.108" endtime="20231121 01:44:26.111"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:26.113" level="INFO">å¼é¨</msg>
<msg timestamp="20231121 01:44:26.113" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231121 01:44:26.111" endtime="20231121 01:44:26.113"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.114" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:44:26.113" endtime="20231121 01:44:26.114"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.115" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231121 01:44:26.114" endtime="20231121 01:44:26.115"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:26.116" endtime="20231121 01:44:26.116"/>
</kw>
<status status="PASS" starttime="20231121 01:44:26.115" endtime="20231121 01:44:26.116"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:44:26.117" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:44:26.117" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231121 01:44:26.117" endtime="20231121 01:44:26.118"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:44:26.118" endtime="20231121 01:44:26.118"/>
</return>
<msg timestamp="20231121 01:44:26.118" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231121 01:44:25.942" endtime="20231121 01:44:26.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:44:26.119" endtime="20231121 01:44:26.119"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:26.121" endtime="20231121 01:44:26.121"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:26.122" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:26.269" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:26 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:26.122" endtime="20231121 01:44:26.269"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.273" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:26.269" endtime="20231121 01:44:26.273"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:26.280" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:26.273" endtime="20231121 01:44:26.280"/>
</kw>
<status status="PASS" starttime="20231121 01:44:26.120" endtime="20231121 01:44:26.280"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.284" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231121 01:44:26.280" endtime="20231121 01:44:26.284"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:26.287" level="INFO">å³é¨</msg>
<msg timestamp="20231121 01:44:26.287" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231121 01:44:26.285" endtime="20231121 01:44:26.288"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.289" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231121 01:44:26.288" endtime="20231121 01:44:26.289"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.290" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231121 01:44:26.289" endtime="20231121 01:44:26.290"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:26.291" endtime="20231121 01:44:26.291"/>
</kw>
<status status="PASS" starttime="20231121 01:44:26.290" endtime="20231121 01:44:26.292"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231121 01:44:26.292" level="INFO">1 lines returned</msg>
<msg timestamp="20231121 01:44:26.293" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231121 01:44:26.292" endtime="20231121 01:44:26.293"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231121 01:44:26.293" endtime="20231121 01:44:26.294"/>
</return>
<msg timestamp="20231121 01:44:26.294" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231121 01:44:26.119" endtime="20231121 01:44:26.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231121 01:44:26.294" endtime="20231121 01:44:26.295"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:26.297" endtime="20231121 01:44:26.298"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:26.299" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:26.447" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:26 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:26.298" endtime="20231121 01:44:26.447"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.451" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:26.447" endtime="20231121 01:44:26.452"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:26.460" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:26.452" endtime="20231121 01:44:26.460"/>
</kw>
<status status="PASS" starttime="20231121 01:44:26.297" endtime="20231121 01:44:26.460"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:26.462" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:26.461" endtime="20231121 01:44:26.462"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.465" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:26.462" endtime="20231121 01:44:26.465"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:26.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:26.465" endtime="20231121 01:44:26.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:26.471" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:26.471" endtime="20231121 01:44:26.471"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:26.471" endtime="20231121 01:44:26.472"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:26.472" endtime="20231121 01:44:26.473"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:26.473" endtime="20231121 01:44:26.473"/>
</return>
<status status="PASS" starttime="20231121 01:44:26.460" endtime="20231121 01:44:26.473"/>
</kw>
<status status="PASS" starttime="20231121 01:44:26.297" endtime="20231121 01:44:26.474"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:26.475" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:26.474" endtime="20231121 01:44:26.475"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.477" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:26.475" endtime="20231121 01:44:26.478"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:26.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:26.478" endtime="20231121 01:44:26.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:26.480" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:26.479" endtime="20231121 01:44:26.480"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:26.480" endtime="20231121 01:44:26.481"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:26.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:26.481" endtime="20231121 01:44:26.482"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:26.482" endtime="20231121 01:44:26.482"/>
</return>
<status status="PASS" starttime="20231121 01:44:26.474" endtime="20231121 01:44:26.482"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:26.483" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:26.483" endtime="20231121 01:44:26.483"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:26.486" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:26.484" endtime="20231121 01:44:26.486"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.065" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:44:27.065" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:26.487" endtime="20231121 01:44:27.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.066" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:44:27.065" endtime="20231121 01:44:27.066"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.066" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:27.066" endtime="20231121 01:44:27.066"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.067" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:27.067" endtime="20231121 01:44:27.068"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:27.069" endtime="20231121 01:44:27.069"/>
</return>
<msg timestamp="20231121 01:44:27.069" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:26.482" endtime="20231121 01:44:27.070"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:44:27.071" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:44:27.071" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:44:27.070" endtime="20231121 01:44:27.071"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:44:27.072" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231121 01:44:27.072" endtime="20231121 01:44:27.072"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:44:27.073" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231121 01:44:27.072" endtime="20231121 01:44:27.073"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:44:27.075" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231121 01:44:27.073" endtime="20231121 01:44:27.075"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:27.076" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:44:27.075" endtime="20231121 01:44:27.076"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:27.076" endtime="20231121 01:44:27.077"/>
</kw>
<status status="PASS" starttime="20231121 01:44:27.076" endtime="20231121 01:44:27.077"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:44:27.077" endtime="20231121 01:44:27.078"/>
</return>
<msg timestamp="20231121 01:44:27.078" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231121 01:44:26.296" endtime="20231121 01:44:27.079"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:27.081" endtime="20231121 01:44:27.082"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:27.083" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:27.240" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:26 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:27.083" endtime="20231121 01:44:27.241"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.245" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:27.241" endtime="20231121 01:44:27.245"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.253" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:27.246" endtime="20231121 01:44:27.253"/>
</kw>
<status status="PASS" starttime="20231121 01:44:27.080" endtime="20231121 01:44:27.253"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.255" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:27.254" endtime="20231121 01:44:27.255"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.259" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:27.255" endtime="20231121 01:44:27.259"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.259" endtime="20231121 01:44:27.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.265" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:27.264" endtime="20231121 01:44:27.265"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.265" endtime="20231121 01:44:27.266"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.266" endtime="20231121 01:44:27.267"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:27.267" endtime="20231121 01:44:27.267"/>
</return>
<status status="PASS" starttime="20231121 01:44:27.253" endtime="20231121 01:44:27.267"/>
</kw>
<status status="PASS" starttime="20231121 01:44:27.079" endtime="20231121 01:44:27.268"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.269" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:27.268" endtime="20231121 01:44:27.269"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.273" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:27.270" endtime="20231121 01:44:27.273"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.273" endtime="20231121 01:44:27.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.275" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:27.275" endtime="20231121 01:44:27.276"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.276" endtime="20231121 01:44:27.277"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.277" endtime="20231121 01:44:27.278"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:27.278" endtime="20231121 01:44:27.278"/>
</return>
<status status="PASS" starttime="20231121 01:44:27.268" endtime="20231121 01:44:27.278"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.280" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:44:27.279" endtime="20231121 01:44:27.280"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.283" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231121 01:44:27.280" endtime="20231121 01:44:27.283"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.284" endtime="20231121 01:44:27.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.291" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:27.291" endtime="20231121 01:44:27.291"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.291" endtime="20231121 01:44:27.292"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.292" endtime="20231121 01:44:27.293"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:27.293" endtime="20231121 01:44:27.294"/>
</return>
<status status="PASS" starttime="20231121 01:44:27.279" endtime="20231121 01:44:27.294"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:27.295" endtime="20231121 01:44:27.296"/>
</kw>
<status status="PASS" starttime="20231121 01:44:27.294" endtime="20231121 01:44:27.296"/>
</kw>
<status status="PASS" starttime="20231121 01:44:26.295" endtime="20231121 01:44:27.296"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:27.299" endtime="20231121 01:44:27.300"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:27.300" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:27.450" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:27 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:27.300" endtime="20231121 01:44:27.450"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.455" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:27.450" endtime="20231121 01:44:27.455"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.462" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:27.455" endtime="20231121 01:44:27.462"/>
</kw>
<status status="PASS" starttime="20231121 01:44:27.298" endtime="20231121 01:44:27.462"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.463" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:27.463" endtime="20231121 01:44:27.464"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.468" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:27.464" endtime="20231121 01:44:27.468"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.468" endtime="20231121 01:44:27.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.474" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:27.473" endtime="20231121 01:44:27.474"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.474" endtime="20231121 01:44:27.475"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.475" endtime="20231121 01:44:27.476"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:27.476" endtime="20231121 01:44:27.476"/>
</return>
<status status="PASS" starttime="20231121 01:44:27.462" endtime="20231121 01:44:27.476"/>
</kw>
<status status="PASS" starttime="20231121 01:44:27.298" endtime="20231121 01:44:27.476"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.478" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:27.477" endtime="20231121 01:44:27.478"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.481" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:27.478" endtime="20231121 01:44:27.481"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:27.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.481" endtime="20231121 01:44:27.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.483" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:27.482" endtime="20231121 01:44:27.483"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.483" endtime="20231121 01:44:27.484"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:27.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:27.484" endtime="20231121 01:44:27.484"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:27.485" endtime="20231121 01:44:27.485"/>
</return>
<status status="PASS" starttime="20231121 01:44:27.477" endtime="20231121 01:44:27.485"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:27.487" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:27.486" endtime="20231121 01:44:27.487"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:27.489" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231121 01:44:27.487" endtime="20231121 01:44:27.489"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.079" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231121 01:44:28.079" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:27.490" endtime="20231121 01:44:28.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.080" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231121 01:44:28.080" endtime="20231121 01:44:28.080"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.081" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:28.080" endtime="20231121 01:44:28.081"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.081" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:28.081" endtime="20231121 01:44:28.081"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:28.082" endtime="20231121 01:44:28.082"/>
</return>
<msg timestamp="20231121 01:44:28.082" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231121 01:44:27.485" endtime="20231121 01:44:28.082"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:44:28.082" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231121 01:44:28.083" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:44:28.082" endtime="20231121 01:44:28.083"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:44:28.083" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231121 01:44:28.083" endtime="20231121 01:44:28.083"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:44:28.084" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231121 01:44:28.083" endtime="20231121 01:44:28.084"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231121 01:44:28.085" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231121 01:44:28.084" endtime="20231121 01:44:28.085"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:28.086" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:44:28.086" endtime="20231121 01:44:28.086"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:28.087" endtime="20231121 01:44:28.088"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.087" endtime="20231121 01:44:28.088"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231121 01:44:28.088" endtime="20231121 01:44:28.089"/>
</return>
<msg timestamp="20231121 01:44:28.089" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231121 01:44:27.297" endtime="20231121 01:44:28.089"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:28.091" endtime="20231121 01:44:28.092"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:28.093" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:28.243" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:27 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:28.092" endtime="20231121 01:44:28.243"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.247" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:28.243" endtime="20231121 01:44:28.247"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.254" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:28.247" endtime="20231121 01:44:28.254"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.090" endtime="20231121 01:44:28.254"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.256" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:28.255" endtime="20231121 01:44:28.256"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.259" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:28.256" endtime="20231121 01:44:28.259"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.259" endtime="20231121 01:44:28.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.264" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:28.264" endtime="20231121 01:44:28.264"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.265" endtime="20231121 01:44:28.265"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.265" endtime="20231121 01:44:28.266"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:28.266" endtime="20231121 01:44:28.267"/>
</return>
<status status="PASS" starttime="20231121 01:44:28.255" endtime="20231121 01:44:28.267"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.089" endtime="20231121 01:44:28.267"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.268" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:28.268" endtime="20231121 01:44:28.268"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.271" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:28.269" endtime="20231121 01:44:28.271"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.271" endtime="20231121 01:44:28.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.273" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:28.273" endtime="20231121 01:44:28.273"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.273" endtime="20231121 01:44:28.274"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.274" endtime="20231121 01:44:28.275"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:28.275" endtime="20231121 01:44:28.275"/>
</return>
<status status="PASS" starttime="20231121 01:44:28.267" endtime="20231121 01:44:28.275"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.276" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:44:28.276" endtime="20231121 01:44:28.277"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.279" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231121 01:44:28.277" endtime="20231121 01:44:28.280"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.280" endtime="20231121 01:44:28.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.287" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:28.286" endtime="20231121 01:44:28.287"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.287" endtime="20231121 01:44:28.288"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.288" endtime="20231121 01:44:28.289"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:28.289" endtime="20231121 01:44:28.289"/>
</return>
<status status="PASS" starttime="20231121 01:44:28.276" endtime="20231121 01:44:28.290"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:28.290" endtime="20231121 01:44:28.291"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.290" endtime="20231121 01:44:28.291"/>
</kw>
<status status="PASS" starttime="20231121 01:44:27.296" endtime="20231121 01:44:28.291"/>
</kw>
<status status="PASS" starttime="20231121 01:44:01.567" endtime="20231121 01:44:28.291"/>
</kw>
<kw name="Del Order Try" library="rest_res" type="TEARDOWN">
<arg>${order_number}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:28.295" endtime="20231121 01:44:28.295"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:28.296" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:28.443" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:28 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:28.296" endtime="20231121 01:44:28.444"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.448" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:28.444" endtime="20231121 01:44:28.448"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.454" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:28.448" endtime="20231121 01:44:28.454"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.294" endtime="20231121 01:44:28.454"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.455" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:28.455" endtime="20231121 01:44:28.456"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.459" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:28.456" endtime="20231121 01:44:28.460"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.460" endtime="20231121 01:44:28.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.465" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:28.464" endtime="20231121 01:44:28.465"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.465" endtime="20231121 01:44:28.466"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.466" endtime="20231121 01:44:28.467"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:28.467" endtime="20231121 01:44:28.467"/>
</return>
<status status="PASS" starttime="20231121 01:44:28.454" endtime="20231121 01:44:28.468"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.294" endtime="20231121 01:44:28.468"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.469" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:44:28.469" endtime="20231121 01:44:28.469"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.472" level="INFO">rbac</msg>
<status status="PASS" starttime="20231121 01:44:28.469" endtime="20231121 01:44:28.472"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.472" endtime="20231121 01:44:28.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.474" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:28.473" endtime="20231121 01:44:28.474"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.474" endtime="20231121 01:44:28.475"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:28.475" endtime="20231121 01:44:28.476"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:28.476" endtime="20231121 01:44:28.477"/>
</return>
<status status="PASS" starttime="20231121 01:44:28.468" endtime="20231121 01:44:28.477"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.478" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:44:28.478" endtime="20231121 01:44:28.478"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.481" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231121 01:44:28.479" endtime="20231121 01:44:28.481"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:28.485" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231121 01:44:28.485" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:44:28.481" endtime="20231121 01:44:28.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.486" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231121 01:44:28.485" endtime="20231121 01:44:28.486"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.487" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231121 01:44:28.486" endtime="20231121 01:44:28.487"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:28.488" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231121 01:44:28.487" endtime="20231121 01:44:28.488"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:28.488" endtime="20231121 01:44:28.489"/>
</return>
<status status="PASS" starttime="20231121 01:44:28.477" endtime="20231121 01:44:28.489"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:28.490" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:44:28.490" endtime="20231121 01:44:28.490"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:28.493" level="INFO">show_users</msg>
<status status="PASS" starttime="20231121 01:44:28.490" endtime="20231121 01:44:28.493"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:30.826" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231121 01:44:30.826" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:44:28.493" endtime="20231121 01:44:30.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:30.827" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231121 01:44:30.827" endtime="20231121 01:44:30.827"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:30.828" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:44:30.827" endtime="20231121 01:44:30.828"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:30.828" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:44:30.828" endtime="20231121 01:44:30.829"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:30.829" endtime="20231121 01:44:30.829"/>
</return>
<msg timestamp="20231121 01:44:30.829" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231121 01:44:28.489" endtime="20231121 01:44:30.829"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231121 01:44:30.830" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231121 01:44:30.830" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:44:30.829" endtime="20231121 01:44:30.830"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231121 01:44:30.831" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231121 01:44:30.830" endtime="20231121 01:44:30.831"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231121 01:44:30.831" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231121 01:44:30.831" endtime="20231121 01:44:30.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231121 01:44:30.833" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231121 01:44:30.832" endtime="20231121 01:44:30.833"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:30.834" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231121 01:44:30.833" endtime="20231121 01:44:30.834"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:30.839" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231121 01:44:30.834" endtime="20231121 01:44:30.839"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:30.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:30.840" endtime="20231121 01:44:30.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:30.851" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:30.851" endtime="20231121 01:44:30.851"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:30.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:30.851" endtime="20231121 01:44:30.852"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:30.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:30.852" endtime="20231121 01:44:30.853"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:30.853" endtime="20231121 01:44:30.853"/>
</return>
<status status="PASS" starttime="20231121 01:44:30.833" endtime="20231121 01:44:30.854"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:30.855" endtime="20231121 01:44:30.855"/>
</kw>
<status status="PASS" starttime="20231121 01:44:30.854" endtime="20231121 01:44:30.855"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.293" endtime="20231121 01:44:30.855"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231121 01:44:30.856" endtime="20231121 01:44:30.856"/>
</return>
<msg timestamp="20231121 01:44:30.857" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231121 01:44:30.857" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231121 01:44:30.856" endtime="20231121 01:44:30.857"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:30.858" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231121 01:44:30.857" endtime="20231121 01:44:30.858"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:30.860" level="INFO">${header} = {'token': 'F6A67E622957419A874E8A4DD309C074'}</msg>
<status status="PASS" starttime="20231121 01:44:30.860" endtime="20231121 01:44:30.860"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:44:30.888" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'F6A67E622957419A874E8A4DD309C074', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231121 01:44:30.888" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:44:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-FVrfoXc2Mw70Cknmhk7oHDFWgvU"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"1999BA589EA749B784537FD08EA70A0F"} 
 </msg>
<msg timestamp="20231121 01:44:30.888" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:30.860" endtime="20231121 01:44:30.888"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:44:30.889" endtime="20231121 01:44:30.889"/>
</return>
<msg timestamp="20231121 01:44:30.889" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:30.859" endtime="20231121 01:44:30.889"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231121 01:44:30.891" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231121 01:44:30.890" endtime="20231121 01:44:30.891"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231121 01:44:30.891" endtime="20231121 01:44:30.891"/>
</return>
<msg timestamp="20231121 01:44:30.892" level="INFO">${token_resp} = 1999BA589EA749B784537FD08EA70A0F</msg>
<status status="PASS" starttime="20231121 01:44:30.858" endtime="20231121 01:44:30.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 01:44:30.893" level="INFO">${token} = 1999BA589EA749B784537FD08EA70A0F</msg>
<status status="PASS" starttime="20231121 01:44:30.893" endtime="20231121 01:44:30.893"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.293" endtime="20231121 01:44:30.894"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${del_req}</var>
<arg>order_number=${order_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:30.894" level="INFO">${del_req} = {'order_number': '170050216034'}</msg>
<status status="PASS" starttime="20231121 01:44:30.894" endtime="20231121 01:44:30.895"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<arg>/order/del</arg>
<arg>${del_req}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231121 01:44:30.896" level="INFO">${header} = {'token': '1999BA589EA749B784537FD08EA70A0F'}</msg>
<status status="PASS" starttime="20231121 01:44:30.896" endtime="20231121 01:44:30.896"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231121 01:44:30.922" level="INFO">POST Request : url=http://localhost:31700/api/order/del 
 path_url=/api/order/del 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '1999BA589EA749B784537FD08EA70A0F', 'Content-Length': '32', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170050216034"}' 
 </msg>
<msg timestamp="20231121 01:44:30.922" level="INFO">POST Response : url=http://localhost:31700/api/order/del 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 20 Nov 2023 17:44:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231121 01:44:30.922" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231121 01:44:30.897" endtime="20231121 01:44:30.922"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231121 01:44:30.922" endtime="20231121 01:44:30.923"/>
</return>
<status status="PASS" starttime="20231121 01:44:30.895" endtime="20231121 01:44:30.923"/>
</kw>
<status status="PASS" starttime="20231121 01:44:28.292" endtime="20231121 01:44:30.923"/>
</kw>
<status status="PASS" starttime="20231121 01:42:33.109" endtime="20231121 01:44:30.923"/>
</test>
<kw name="Clear Dev Config" library="dev_res" type="TEARDOWN">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231121 01:44:30.926" endtime="20231121 01:44:30.926"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231121 01:44:30.927" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231121 01:44:31.076" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Nov 21 01:44:28 2023 from 172.17.0.1
root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:30.927" endtime="20231121 01:44:31.077"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:31.081" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231121 01:44:31.077" endtime="20231121 01:44:31.081"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:31.089" level="INFO">root@e0910d78d939:~#</msg>
<status status="PASS" starttime="20231121 01:44:31.082" endtime="20231121 01:44:31.089"/>
</kw>
<status status="PASS" starttime="20231121 01:44:30.925" endtime="20231121 01:44:31.089"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:31.090" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:31.090" endtime="20231121 01:44:31.090"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:31.093" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231121 01:44:31.091" endtime="20231121 01:44:31.094"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:31.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.094" endtime="20231121 01:44:31.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:31.098" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:31.098" endtime="20231121 01:44:31.099"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:31.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.099" endtime="20231121 01:44:31.099"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:31.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.100" endtime="20231121 01:44:31.100"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:31.100" endtime="20231121 01:44:31.100"/>
</return>
<status status="PASS" starttime="20231121 01:44:31.089" endtime="20231121 01:44:31.101"/>
</kw>
<status status="PASS" starttime="20231121 01:44:30.925" endtime="20231121 01:44:31.101"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:31.102" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:31.102" endtime="20231121 01:44:31.102"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:31.105" level="INFO">device</msg>
<status status="PASS" starttime="20231121 01:44:31.102" endtime="20231121 01:44:31.105"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:31.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.105" endtime="20231121 01:44:31.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:31.107" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:31.107" endtime="20231121 01:44:31.107"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:31.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.107" endtime="20231121 01:44:31.108"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:31.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.108" endtime="20231121 01:44:31.109"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:31.109" endtime="20231121 01:44:31.109"/>
</return>
<status status="PASS" starttime="20231121 01:44:31.101" endtime="20231121 01:44:31.110"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>clear_device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:31.111" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231121 01:44:31.110" endtime="20231121 01:44:31.111"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231121 01:44:31.114" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231121 01:44:31.111" endtime="20231121 01:44:31.114"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231121 01:44:31.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.114" endtime="20231121 01:44:31.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 01:44:31.375" level="INFO"/>
<status status="PASS" starttime="20231121 01:44:31.375" endtime="20231121 01:44:31.375"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:31.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.375" endtime="20231121 01:44:31.376"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231121 01:44:31.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 01:44:31.376" endtime="20231121 01:44:31.377"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231121 01:44:31.377" endtime="20231121 01:44:31.377"/>
</return>
<status status="PASS" starttime="20231121 01:44:31.110" endtime="20231121 01:44:31.378"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231121 01:44:31.378" endtime="20231121 01:44:31.379"/>
</kw>
<status status="PASS" starttime="20231121 01:44:31.378" endtime="20231121 01:44:31.379"/>
</kw>
<status status="PASS" starttime="20231121 01:44:30.925" endtime="20231121 01:44:31.379"/>
</kw>
<status status="PASS" starttime="20231121 01:40:55.628" endtime="20231121 01:44:31.379"/>
</suite>
<status status="PASS" starttime="20231121 01:40:31.462" endtime="20231121 01:44:31.382"/>
</suite>
<status status="PASS" starttime="20231121 01:40:31.460" endtime="20231121 01:44:31.384"/>
</suite>
<status status="PASS" starttime="20231121 01:40:31.402" endtime="20231121 01:44:31.386"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Zhuochuangzhihui">Zhuochuangzhihui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Auto">Zhuochuangzhihui.Auto</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1" name="Test Running">Zhuochuangzhihui.Auto.Test Running</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Dev Err Test">Zhuochuangzhihui.Auto.Test Running.Dev Err Test</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1-s2" name="Postive Test">Zhuochuangzhihui.Auto.Test Running.Postive Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
