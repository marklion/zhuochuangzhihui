<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20231120 02:07:00.245" rpa="false" schemaversion="4">
<suite id="s1" name="Zhuochuangzhihui" source="/Users/liuyang/work/zhuochuangzhihui">
<suite id="s1-s1" name="Auto" source="/Users/liuyang/work/zhuochuangzhihui/auto">
<suite id="s1-s1-s1" name="Test Running" source="/Users/liuyang/work/zhuochuangzhihui/auto/test_running">
<suite id="s1-s1-s1-s1" name="Postive Test" source="/Users/liuyang/work/zhuochuangzhihui/auto/test_running/postive_test.robot">
<kw name="Config Best Dev" library="dev_res" type="SETUP">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:01.176" endtime="20231120 02:07:01.177"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:01.177" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:01.339" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 01:59:44 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:01.177" endtime="20231120 02:07:01.340"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.344" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:01.340" endtime="20231120 02:07:01.344"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.351" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:01.345" endtime="20231120 02:07:01.351"/>
</kw>
<status status="PASS" starttime="20231120 02:07:01.176" endtime="20231120 02:07:01.351"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.353" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:01.352" endtime="20231120 02:07:01.353"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.357" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:01.354" endtime="20231120 02:07:01.357"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.357" endtime="20231120 02:07:01.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.363" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.362" endtime="20231120 02:07:01.363"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.363" endtime="20231120 02:07:01.364"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.364" endtime="20231120 02:07:01.365"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.365" endtime="20231120 02:07:01.365"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.351" endtime="20231120 02:07:01.365"/>
</kw>
<status status="PASS" starttime="20231120 02:07:01.175" endtime="20231120 02:07:01.365"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.367" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:01.366" endtime="20231120 02:07:01.367"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.370" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:01.367" endtime="20231120 02:07:01.370"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.371" endtime="20231120 02:07:01.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.372" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.372" endtime="20231120 02:07:01.372"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.373" endtime="20231120 02:07:01.373"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.373" endtime="20231120 02:07:01.374"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.374" endtime="20231120 02:07:01.374"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.366" endtime="20231120 02:07:01.375"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_set s 1</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.376" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231120 02:07:01.375" endtime="20231120 02:07:01.376"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.379" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231120 02:07:01.376" endtime="20231120 02:07:01.379"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.379" endtime="20231120 02:07:01.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.405" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.405" endtime="20231120 02:07:01.405"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.406" endtime="20231120 02:07:01.406"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.406" endtime="20231120 02:07:01.407"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.407" endtime="20231120 02:07:01.408"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.375" endtime="20231120 02:07:01.408"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fpc} '-t s' 1 s front_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.409" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231120 02:07:01.408" endtime="20231120 02:07:01.409"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.413" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231120 02:07:01.409" endtime="20231120 02:07:01.413"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.413" endtime="20231120 02:07:01.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.480" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.480" endtime="20231120 02:07:01.480"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.480" endtime="20231120 02:07:01.481"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.482" endtime="20231120 02:07:01.482"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.482" endtime="20231120 02:07:01.483"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.408" endtime="20231120 02:07:01.483"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bpc} '-t s' 1 s back_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.484" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231120 02:07:01.484" endtime="20231120 02:07:01.484"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.487" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231120 02:07:01.485" endtime="20231120 02:07:01.488"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.488" endtime="20231120 02:07:01.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.558" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.558" endtime="20231120 02:07:01.559"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.559" endtime="20231120 02:07:01.560"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.560" endtime="20231120 02:07:01.561"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.561" endtime="20231120 02:07:01.561"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.483" endtime="20231120 02:07:01.561"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fled} '-t s' 1 s front_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.563" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231120 02:07:01.562" endtime="20231120 02:07:01.563"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.566" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231120 02:07:01.563" endtime="20231120 02:07:01.566"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.567" endtime="20231120 02:07:01.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.638" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.638" endtime="20231120 02:07:01.638"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.639" endtime="20231120 02:07:01.639"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.639" endtime="20231120 02:07:01.640"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.640" endtime="20231120 02:07:01.640"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.562" endtime="20231120 02:07:01.641"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bled} '-t s' 1 s back_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.642" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231120 02:07:01.641" endtime="20231120 02:07:01.642"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.645" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231120 02:07:01.642" endtime="20231120 02:07:01.646"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.646" endtime="20231120 02:07:01.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.826" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.825" endtime="20231120 02:07:01.826"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.826" endtime="20231120 02:07:01.827"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.827" endtime="20231120 02:07:01.828"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.828" endtime="20231120 02:07:01.828"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.641" endtime="20231120 02:07:01.829"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fid} '-t s' 1 s front_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.830" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231120 02:07:01.829" endtime="20231120 02:07:01.830"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.834" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231120 02:07:01.830" endtime="20231120 02:07:01.835"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:01.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.835" endtime="20231120 02:07:01.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.915" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:01.914" endtime="20231120 02:07:01.915"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.915" endtime="20231120 02:07:01.916"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:01.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.916" endtime="20231120 02:07:01.917"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:01.917" endtime="20231120 02:07:01.917"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.829" endtime="20231120 02:07:01.918"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bid} '-t s' 1 s back_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:01.919" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231120 02:07:01.918" endtime="20231120 02:07:01.919"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:01.922" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231120 02:07:01.919" endtime="20231120 02:07:01.922"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:01.923" endtime="20231120 02:07:02.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.018" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:02.018" endtime="20231120 02:07:02.019"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.019" endtime="20231120 02:07:02.020"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.020" endtime="20231120 02:07:02.021"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.021" endtime="20231120 02:07:02.021"/>
</return>
<status status="PASS" starttime="20231120 02:07:01.918" endtime="20231120 02:07:02.021"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.022" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231120 02:07:02.022" endtime="20231120 02:07:02.023"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.026" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231120 02:07:02.023" endtime="20231120 02:07:02.026"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.027" endtime="20231120 02:07:02.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.126" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:02.126" endtime="20231120 02:07:02.126"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.127" endtime="20231120 02:07:02.127"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.128" endtime="20231120 02:07:02.129"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.129" endtime="20231120 02:07:02.129"/>
</return>
<status status="PASS" starttime="20231120 02:07:02.022" endtime="20231120 02:07:02.129"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fgate} '-t s' 1 s front_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.131" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231120 02:07:02.130" endtime="20231120 02:07:02.131"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.135" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231120 02:07:02.131" endtime="20231120 02:07:02.135"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.136" endtime="20231120 02:07:02.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.250" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:02.250" endtime="20231120 02:07:02.251"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.251" endtime="20231120 02:07:02.251"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.252" endtime="20231120 02:07:02.252"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.253" endtime="20231120 02:07:02.253"/>
</return>
<status status="PASS" starttime="20231120 02:07:02.129" endtime="20231120 02:07:02.253"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bgate} '-t s' 1 s back_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.254" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231120 02:07:02.254" endtime="20231120 02:07:02.254"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.259" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231120 02:07:02.255" endtime="20231120 02:07:02.259"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.260" endtime="20231120 02:07:02.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.347" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:02.347" endtime="20231120 02:07:02.348"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.348" endtime="20231120 02:07:02.349"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.349" endtime="20231120 02:07:02.350"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.350" endtime="20231120 02:07:02.350"/>
</return>
<status status="PASS" starttime="20231120 02:07:02.253" endtime="20231120 02:07:02.351"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.352" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231120 02:07:02.351" endtime="20231120 02:07:02.352"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.355" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231120 02:07:02.352" endtime="20231120 02:07:02.355"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.402" level="INFO">è®¾å¤å·²å­å¨</msg>
<msg timestamp="20231120 02:07:02.402" level="INFO">${output} = è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:02.356" endtime="20231120 02:07:02.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.403" level="INFO">è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:02.403" endtime="20231120 02:07:02.403"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.404" level="INFO">${output} = \xe8\xae\xbe\xe5\xa4\x87\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:02.403" endtime="20231120 02:07:02.404"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.405" level="INFO">${output} = 设备已存在
</msg>
<status status="PASS" starttime="20231120 02:07:02.404" endtime="20231120 02:07:02.405"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.405" endtime="20231120 02:07:02.406"/>
</return>
<status status="PASS" starttime="20231120 02:07:02.351" endtime="20231120 02:07:02.406"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_s} '-t s' 1 s scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.407" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231120 02:07:02.407" endtime="20231120 02:07:02.407"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.411" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231120 02:07:02.408" endtime="20231120 02:07:02.411"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.411" endtime="20231120 02:07:02.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.505" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:02.504" endtime="20231120 02:07:02.505"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.505" endtime="20231120 02:07:02.506"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.506" endtime="20231120 02:07:02.506"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.507" endtime="20231120 02:07:02.507"/>
</return>
<status status="PASS" starttime="20231120 02:07:02.406" endtime="20231120 02:07:02.507"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zczh</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.509" level="INFO">zczh</msg>
<status status="PASS" starttime="20231120 02:07:02.508" endtime="20231120 02:07:02.509"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.513" level="INFO">zczh</msg>
<status status="PASS" starttime="20231120 02:07:02.509" endtime="20231120 02:07:02.514"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.514" endtime="20231120 02:07:02.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.515" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:02.515" endtime="20231120 02:07:02.516"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.516" endtime="20231120 02:07:02.517"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:02.517" endtime="20231120 02:07:02.518"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.518" endtime="20231120 02:07:02.518"/>
</return>
<status status="PASS" starttime="20231120 02:07:02.507" endtime="20231120 02:07:02.518"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>bdr</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.519" level="INFO">bdr</msg>
<status status="PASS" starttime="20231120 02:07:02.519" endtime="20231120 02:07:02.520"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.523" level="INFO">bdr</msg>
<status status="PASS" starttime="20231120 02:07:02.520" endtime="20231120 02:07:02.523"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:02.620" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh</msg>
<msg timestamp="20231120 02:07:02.620" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231120 02:07:02.523" endtime="20231120 02:07:02.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:02.621" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh
</msg>
<status status="PASS" starttime="20231120 02:07:02.620" endtime="20231120 02:07:02.621"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.622" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231120 02:07:02.621" endtime="20231120 02:07:02.622"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:02.623" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231120 02:07:02.622" endtime="20231120 02:07:02.623"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:02.623" endtime="20231120 02:07:02.624"/>
</return>
<status status="PASS" starttime="20231120 02:07:02.518" endtime="20231120 02:07:02.624"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>reboot</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:02.627" level="INFO">reboot</msg>
<status status="PASS" starttime="20231120 02:07:02.624" endtime="20231120 02:07:02.628"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:02.629" endtime="20231120 02:07:02.629"/>
</kw>
<status status="PASS" starttime="20231120 02:07:02.628" endtime="20231120 02:07:02.630"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231120 02:07:07.631" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231120 02:07:02.630" endtime="20231120 02:07:07.631"/>
</kw>
<status status="PASS" starttime="20231120 02:07:01.174" endtime="20231120 02:07:07.632"/>
</kw>
<test id="s1-s1-s1-s1-t1" name="Only Scale Full Flow" line="24">
<kw name="Create A Order For Scale" type="SETUP">
<kw name="Del Exist Order">
<kw name="Search Order" library="rest_res">
<var>${plate_result}</var>
<arg>${plate_no}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:07.637" endtime="20231120 02:07:07.638"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:07.639" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:07.790" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:01 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:07.638" endtime="20231120 02:07:07.790"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:07.794" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:07.791" endtime="20231120 02:07:07.795"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:07.801" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:07.795" endtime="20231120 02:07:07.801"/>
</kw>
<status status="PASS" starttime="20231120 02:07:07.637" endtime="20231120 02:07:07.802"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:07.803" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:07.802" endtime="20231120 02:07:07.803"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:07.806" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:07.803" endtime="20231120 02:07:07.806"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:07.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:07.807" endtime="20231120 02:07:07.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:07.811" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:07.811" endtime="20231120 02:07:07.811"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:07.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:07.812" endtime="20231120 02:07:07.812"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:07.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:07.813" endtime="20231120 02:07:07.813"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:07.813" endtime="20231120 02:07:07.814"/>
</return>
<status status="PASS" starttime="20231120 02:07:07.802" endtime="20231120 02:07:07.814"/>
</kw>
<status status="PASS" starttime="20231120 02:07:07.636" endtime="20231120 02:07:07.814"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:07.815" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:07.815" endtime="20231120 02:07:07.816"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:07.818" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:07.816" endtime="20231120 02:07:07.818"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:07.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:07.819" endtime="20231120 02:07:07.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:07.820" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:07.820" endtime="20231120 02:07:07.820"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:07.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:07.821" endtime="20231120 02:07:07.821"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:07.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:07.821" endtime="20231120 02:07:07.822"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:07.822" endtime="20231120 02:07:07.823"/>
</return>
<status status="PASS" starttime="20231120 02:07:07.814" endtime="20231120 02:07:07.823"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:07.824" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:07.824" endtime="20231120 02:07:07.824"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:07.827" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:07.824" endtime="20231120 02:07:07.827"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:07.830" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231120 02:07:07.830" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:07.827" endtime="20231120 02:07:07.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:07.831" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:07.831" endtime="20231120 02:07:07.831"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:07.832" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:07.831" endtime="20231120 02:07:07.832"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:07.833" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231120 02:07:07.832" endtime="20231120 02:07:07.833"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:07.833" endtime="20231120 02:07:07.833"/>
</return>
<status status="PASS" starttime="20231120 02:07:07.823" endtime="20231120 02:07:07.833"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:07.835" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:07.834" endtime="20231120 02:07:07.835"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:07.837" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:07.835" endtime="20231120 02:07:07.837"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:10.136" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231120 02:07:10.137" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:07.838" endtime="20231120 02:07:10.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.138" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231120 02:07:10.137" endtime="20231120 02:07:10.138"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.139" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:10.138" endtime="20231120 02:07:10.139"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.139" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:10.139" endtime="20231120 02:07:10.139"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:10.140" endtime="20231120 02:07:10.140"/>
</return>
<msg timestamp="20231120 02:07:10.140" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:07.834" endtime="20231120 02:07:10.141"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:10.142" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231120 02:07:10.142" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:10.141" endtime="20231120 02:07:10.143"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:10.144" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:10.143" endtime="20231120 02:07:10.144"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:10.145" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231120 02:07:10.144" endtime="20231120 02:07:10.145"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:10.146" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231120 02:07:10.145" endtime="20231120 02:07:10.146"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.148" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231120 02:07:10.147" endtime="20231120 02:07:10.148"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:10.151" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231120 02:07:10.148" endtime="20231120 02:07:10.151"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:10.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.152" endtime="20231120 02:07:10.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.159" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:10.158" endtime="20231120 02:07:10.159"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.159" endtime="20231120 02:07:10.160"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.160" endtime="20231120 02:07:10.161"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:10.161" endtime="20231120 02:07:10.161"/>
</return>
<status status="PASS" starttime="20231120 02:07:10.147" endtime="20231120 02:07:10.161"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:10.162" endtime="20231120 02:07:10.163"/>
</kw>
<status status="PASS" starttime="20231120 02:07:10.162" endtime="20231120 02:07:10.163"/>
</kw>
<status status="PASS" starttime="20231120 02:07:07.636" endtime="20231120 02:07:10.163"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231120 02:07:10.164" endtime="20231120 02:07:10.164"/>
</return>
<msg timestamp="20231120 02:07:10.164" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231120 02:07:10.164" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231120 02:07:10.163" endtime="20231120 02:07:10.164"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:10.166" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231120 02:07:10.165" endtime="20231120 02:07:10.167"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:10.169" level="INFO">${header} = {'token': ''}</msg>
<status status="PASS" starttime="20231120 02:07:10.168" endtime="20231120 02:07:10.169"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:10.228" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231120 02:07:10.228" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-b6MDt6X7t6xtdX8PIMvhn9lYpCQ"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"C59DEB27537A4F7CA95563B58C2FF1A5"} 
 </msg>
<msg timestamp="20231120 02:07:10.229" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:10.169" endtime="20231120 02:07:10.229"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:10.229" endtime="20231120 02:07:10.229"/>
</return>
<msg timestamp="20231120 02:07:10.230" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:10.168" endtime="20231120 02:07:10.230"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:10.231" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:10.230" endtime="20231120 02:07:10.232"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:10.232" endtime="20231120 02:07:10.232"/>
</return>
<msg timestamp="20231120 02:07:10.233" level="INFO">${token_resp} = C59DEB27537A4F7CA95563B58C2FF1A5</msg>
<status status="PASS" starttime="20231120 02:07:10.167" endtime="20231120 02:07:10.233"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231120 02:07:10.234" level="INFO">${token} = C59DEB27537A4F7CA95563B58C2FF1A5</msg>
<status status="PASS" starttime="20231120 02:07:10.233" endtime="20231120 02:07:10.234"/>
</kw>
<status status="PASS" starttime="20231120 02:07:07.635" endtime="20231120 02:07:10.234"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:10.236" level="INFO">${search_condition} = {'plate_number': '京A12345', 'driver_phone': '', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231120 02:07:10.234" endtime="20231120 02:07:10.236"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:10.238" level="INFO">${header} = {'token': 'C59DEB27537A4F7CA95563B58C2FF1A5'}</msg>
<status status="PASS" starttime="20231120 02:07:10.237" endtime="20231120 02:07:10.239"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:10.266" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'C59DEB27537A4F7CA95563B58C2FF1A5', 'Content-Length': '71', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "\\u4eacA12345", "driver_phone": "", "exp_status": 100}' 
 </msg>
<msg timestamp="20231120 02:07:10.266" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1a-cDYBqJ/Iqmf1jbwRIjDduJ9P1Vo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[]} 
 </msg>
<msg timestamp="20231120 02:07:10.266" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:10.239" endtime="20231120 02:07:10.267"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:10.267" endtime="20231120 02:07:10.267"/>
</return>
<msg timestamp="20231120 02:07:10.267" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:10.237" endtime="20231120 02:07:10.268"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:10.269" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:10.268" endtime="20231120 02:07:10.269"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:10.269" endtime="20231120 02:07:10.269"/>
</return>
<msg timestamp="20231120 02:07:10.270" level="INFO">${search_result} = []</msg>
<status status="PASS" starttime="20231120 02:07:10.236" endtime="20231120 02:07:10.270"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231120 02:07:10.270" endtime="20231120 02:07:10.271"/>
</return>
<msg timestamp="20231120 02:07:10.271" level="INFO">${plate_result} = []</msg>
<status status="PASS" starttime="20231120 02:07:07.634" endtime="20231120 02:07:10.271"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${plate_result_length}</var>
<arg>${plate_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231120 02:07:10.272" level="INFO">Length is 0</msg>
<msg timestamp="20231120 02:07:10.272" level="INFO">${plate_result_length} = 0</msg>
<status status="PASS" starttime="20231120 02:07:10.272" endtime="20231120 02:07:10.272"/>
</kw>
<if>
<branch type="IF" condition="${plate_result_length} &gt; 0">
<kw name="Del Order Try" library="rest_res">
<arg>${plate_result}[0][order_number]</arg>
<status status="NOT RUN" starttime="20231120 02:07:10.273" endtime="20231120 02:07:10.273"/>
</kw>
<status status="NOT RUN" starttime="20231120 02:07:10.272" endtime="20231120 02:07:10.273"/>
</branch>
<status status="PASS" starttime="20231120 02:07:10.272" endtime="20231120 02:07:10.273"/>
</if>
<kw name="Search Order" library="rest_res">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:10.276" endtime="20231120 02:07:10.277"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:10.277" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:10.423" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:07 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:10.277" endtime="20231120 02:07:10.423"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:10.427" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:10.424" endtime="20231120 02:07:10.427"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:10.434" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:10.428" endtime="20231120 02:07:10.434"/>
</kw>
<status status="PASS" starttime="20231120 02:07:10.276" endtime="20231120 02:07:10.435"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.436" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:10.435" endtime="20231120 02:07:10.436"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:10.439" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:10.436" endtime="20231120 02:07:10.439"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:10.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.439" endtime="20231120 02:07:10.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.444" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:10.444" endtime="20231120 02:07:10.444"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.445" endtime="20231120 02:07:10.446"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.446" endtime="20231120 02:07:10.446"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:10.447" endtime="20231120 02:07:10.447"/>
</return>
<status status="PASS" starttime="20231120 02:07:10.435" endtime="20231120 02:07:10.447"/>
</kw>
<status status="PASS" starttime="20231120 02:07:10.275" endtime="20231120 02:07:10.447"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.448" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:10.448" endtime="20231120 02:07:10.449"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:10.451" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:10.449" endtime="20231120 02:07:10.451"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:10.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.452" endtime="20231120 02:07:10.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.453" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:10.453" endtime="20231120 02:07:10.453"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.454" endtime="20231120 02:07:10.454"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:10.454" endtime="20231120 02:07:10.455"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:10.455" endtime="20231120 02:07:10.455"/>
</return>
<status status="PASS" starttime="20231120 02:07:10.447" endtime="20231120 02:07:10.456"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.457" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:10.457" endtime="20231120 02:07:10.457"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:10.460" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:10.457" endtime="20231120 02:07:10.460"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:10.464" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231120 02:07:10.464" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:10.460" endtime="20231120 02:07:10.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.465" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:10.464" endtime="20231120 02:07:10.465"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.466" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:10.465" endtime="20231120 02:07:10.466"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:10.467" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231120 02:07:10.466" endtime="20231120 02:07:10.467"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:10.467" endtime="20231120 02:07:10.468"/>
</return>
<status status="PASS" starttime="20231120 02:07:10.456" endtime="20231120 02:07:10.468"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:10.469" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:10.468" endtime="20231120 02:07:10.469"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:10.472" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:10.469" endtime="20231120 02:07:10.472"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:12.767" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231120 02:07:12.767" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:10.472" endtime="20231120 02:07:12.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:12.768" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231120 02:07:12.768" endtime="20231120 02:07:12.768"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:12.769" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:12.768" endtime="20231120 02:07:12.769"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:12.769" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:12.769" endtime="20231120 02:07:12.770"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:12.770" endtime="20231120 02:07:12.770"/>
</return>
<msg timestamp="20231120 02:07:12.770" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:10.468" endtime="20231120 02:07:12.770"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:12.771" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231120 02:07:12.771" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:12.770" endtime="20231120 02:07:12.771"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:12.771" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:12.771" endtime="20231120 02:07:12.772"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:12.772" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231120 02:07:12.772" endtime="20231120 02:07:12.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:12.773" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231120 02:07:12.772" endtime="20231120 02:07:12.773"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:12.774" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231120 02:07:12.774" endtime="20231120 02:07:12.774"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:12.779" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231120 02:07:12.775" endtime="20231120 02:07:12.779"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:12.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:12.780" endtime="20231120 02:07:12.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:12.793" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:12.793" endtime="20231120 02:07:12.793"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:12.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:12.793" endtime="20231120 02:07:12.794"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:12.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:12.794" endtime="20231120 02:07:12.795"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:12.795" endtime="20231120 02:07:12.795"/>
</return>
<status status="PASS" starttime="20231120 02:07:12.774" endtime="20231120 02:07:12.796"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:12.796" endtime="20231120 02:07:12.797"/>
</kw>
<status status="PASS" starttime="20231120 02:07:12.796" endtime="20231120 02:07:12.797"/>
</kw>
<status status="PASS" starttime="20231120 02:07:10.275" endtime="20231120 02:07:12.797"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231120 02:07:12.798" endtime="20231120 02:07:12.798"/>
</return>
<msg timestamp="20231120 02:07:12.799" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231120 02:07:12.799" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231120 02:07:12.798" endtime="20231120 02:07:12.799"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:12.800" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231120 02:07:12.799" endtime="20231120 02:07:12.800"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:12.802" level="INFO">${header} = {'token': 'C59DEB27537A4F7CA95563B58C2FF1A5'}</msg>
<status status="PASS" starttime="20231120 02:07:12.802" endtime="20231120 02:07:12.802"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:12.831" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'C59DEB27537A4F7CA95563B58C2FF1A5', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231120 02:07:12.831" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-hoopIaHkCsMH4+tWcRhmrolD84s"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"C45975CA1DE04BBF8E079401838E113D"} 
 </msg>
<msg timestamp="20231120 02:07:12.832" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:12.802" endtime="20231120 02:07:12.832"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:12.832" endtime="20231120 02:07:12.833"/>
</return>
<msg timestamp="20231120 02:07:12.833" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:12.801" endtime="20231120 02:07:12.833"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:12.834" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:12.833" endtime="20231120 02:07:12.834"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:12.835" endtime="20231120 02:07:12.835"/>
</return>
<msg timestamp="20231120 02:07:12.835" level="INFO">${token_resp} = C45975CA1DE04BBF8E079401838E113D</msg>
<status status="PASS" starttime="20231120 02:07:12.800" endtime="20231120 02:07:12.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231120 02:07:12.836" level="INFO">${token} = C45975CA1DE04BBF8E079401838E113D</msg>
<status status="PASS" starttime="20231120 02:07:12.836" endtime="20231120 02:07:12.837"/>
</kw>
<status status="PASS" starttime="20231120 02:07:10.274" endtime="20231120 02:07:12.837"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:12.838" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231120 02:07:12.837" endtime="20231120 02:07:12.838"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:12.840" level="INFO">${header} = {'token': 'C45975CA1DE04BBF8E079401838E113D'}</msg>
<status status="PASS" starttime="20231120 02:07:12.840" endtime="20231120 02:07:12.840"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:12.860" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'C45975CA1DE04BBF8E079401838E113D', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231120 02:07:12.860" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1a-cDYBqJ/Iqmf1jbwRIjDduJ9P1Vo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[]} 
 </msg>
<msg timestamp="20231120 02:07:12.860" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:12.840" endtime="20231120 02:07:12.860"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:12.861" endtime="20231120 02:07:12.861"/>
</return>
<msg timestamp="20231120 02:07:12.861" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:12.839" endtime="20231120 02:07:12.861"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:12.862" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:12.862" endtime="20231120 02:07:12.863"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:12.863" endtime="20231120 02:07:12.863"/>
</return>
<msg timestamp="20231120 02:07:12.864" level="INFO">${search_result} = []</msg>
<status status="PASS" starttime="20231120 02:07:12.838" endtime="20231120 02:07:12.864"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231120 02:07:12.864" endtime="20231120 02:07:12.864"/>
</return>
<msg timestamp="20231120 02:07:12.865" level="INFO">${driver_result} = []</msg>
<status status="PASS" starttime="20231120 02:07:10.273" endtime="20231120 02:07:12.865"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${driver_result_length}</var>
<arg>${driver_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231120 02:07:12.866" level="INFO">Length is 0</msg>
<msg timestamp="20231120 02:07:12.866" level="INFO">${driver_result_length} = 0</msg>
<status status="PASS" starttime="20231120 02:07:12.865" endtime="20231120 02:07:12.866"/>
</kw>
<if>
<branch type="IF" condition="${driver_result_length} &gt; 0">
<kw name="Del Order Try" library="rest_res">
<arg>${plate_result}[0][order_number]</arg>
<status status="NOT RUN" starttime="20231120 02:07:12.867" endtime="20231120 02:07:12.867"/>
</kw>
<status status="NOT RUN" starttime="20231120 02:07:12.866" endtime="20231120 02:07:12.867"/>
</branch>
<status status="PASS" starttime="20231120 02:07:12.866" endtime="20231120 02:07:12.867"/>
</if>
<status status="PASS" starttime="20231120 02:07:07.633" endtime="20231120 02:07:12.867"/>
</kw>
<kw name="Add Order Common" library="rest_res">
<arg>plate_no=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>driver_id=${driver_id}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:12.870" endtime="20231120 02:07:12.871"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:12.871" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:13.015" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:10 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:12.871" endtime="20231120 02:07:13.016"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:13.020" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:13.016" endtime="20231120 02:07:13.020"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:13.026" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:13.020" endtime="20231120 02:07:13.027"/>
</kw>
<status status="PASS" starttime="20231120 02:07:12.870" endtime="20231120 02:07:13.027"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:13.028" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:13.028" endtime="20231120 02:07:13.029"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:13.033" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:13.029" endtime="20231120 02:07:13.033"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:13.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:13.033" endtime="20231120 02:07:13.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:13.038" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:13.038" endtime="20231120 02:07:13.038"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:13.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:13.038" endtime="20231120 02:07:13.039"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:13.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:13.039" endtime="20231120 02:07:13.040"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:13.040" endtime="20231120 02:07:13.040"/>
</return>
<status status="PASS" starttime="20231120 02:07:13.027" endtime="20231120 02:07:13.041"/>
</kw>
<status status="PASS" starttime="20231120 02:07:12.869" endtime="20231120 02:07:13.041"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:13.042" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:13.041" endtime="20231120 02:07:13.042"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:13.045" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:13.042" endtime="20231120 02:07:13.045"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:13.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:13.045" endtime="20231120 02:07:13.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:13.047" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:13.047" endtime="20231120 02:07:13.047"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:13.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:13.047" endtime="20231120 02:07:13.048"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:13.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:13.048" endtime="20231120 02:07:13.049"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:13.049" endtime="20231120 02:07:13.049"/>
</return>
<status status="PASS" starttime="20231120 02:07:13.041" endtime="20231120 02:07:13.050"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:13.051" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:13.050" endtime="20231120 02:07:13.051"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:13.054" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:13.051" endtime="20231120 02:07:13.054"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:13.057" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231120 02:07:13.057" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:13.054" endtime="20231120 02:07:13.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:13.058" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:13.057" endtime="20231120 02:07:13.058"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:13.059" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:13.058" endtime="20231120 02:07:13.059"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:13.060" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231120 02:07:13.059" endtime="20231120 02:07:13.060"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:13.060" endtime="20231120 02:07:13.060"/>
</return>
<status status="PASS" starttime="20231120 02:07:13.050" endtime="20231120 02:07:13.061"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:13.062" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:13.061" endtime="20231120 02:07:13.062"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:13.065" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:13.062" endtime="20231120 02:07:13.065"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:15.336" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231120 02:07:15.336" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:13.065" endtime="20231120 02:07:15.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.337" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231120 02:07:15.337" endtime="20231120 02:07:15.337"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.338" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:15.337" endtime="20231120 02:07:15.338"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.339" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:15.338" endtime="20231120 02:07:15.339"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:15.339" endtime="20231120 02:07:15.339"/>
</return>
<msg timestamp="20231120 02:07:15.339" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:13.061" endtime="20231120 02:07:15.339"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:15.340" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231120 02:07:15.340" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:15.339" endtime="20231120 02:07:15.340"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:15.340" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:15.340" endtime="20231120 02:07:15.341"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:15.341" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231120 02:07:15.341" endtime="20231120 02:07:15.341"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:15.342" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231120 02:07:15.341" endtime="20231120 02:07:15.342"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.343" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231120 02:07:15.343" endtime="20231120 02:07:15.344"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:15.348" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231120 02:07:15.344" endtime="20231120 02:07:15.348"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:15.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.349" endtime="20231120 02:07:15.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.358" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:15.357" endtime="20231120 02:07:15.358"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.358" endtime="20231120 02:07:15.358"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.359" endtime="20231120 02:07:15.360"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:15.360" endtime="20231120 02:07:15.360"/>
</return>
<status status="PASS" starttime="20231120 02:07:15.342" endtime="20231120 02:07:15.360"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:15.361" endtime="20231120 02:07:15.361"/>
</kw>
<status status="PASS" starttime="20231120 02:07:15.360" endtime="20231120 02:07:15.362"/>
</kw>
<status status="PASS" starttime="20231120 02:07:12.869" endtime="20231120 02:07:15.362"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231120 02:07:15.362" endtime="20231120 02:07:15.363"/>
</return>
<msg timestamp="20231120 02:07:15.363" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231120 02:07:15.363" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231120 02:07:15.362" endtime="20231120 02:07:15.363"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:15.364" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231120 02:07:15.364" endtime="20231120 02:07:15.364"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:15.366" level="INFO">${header} = {'token': 'C45975CA1DE04BBF8E079401838E113D'}</msg>
<status status="PASS" starttime="20231120 02:07:15.366" endtime="20231120 02:07:15.367"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:15.393" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'C45975CA1DE04BBF8E079401838E113D', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231120 02:07:15.394" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-xuhxAfpbqkykPareE50a+JH8u58"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"6E512F0685BC437B9BA97C8C3DF2D65B"} 
 </msg>
<msg timestamp="20231120 02:07:15.394" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:15.367" endtime="20231120 02:07:15.394"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:15.394" endtime="20231120 02:07:15.395"/>
</return>
<msg timestamp="20231120 02:07:15.395" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:15.365" endtime="20231120 02:07:15.395"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:15.397" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:15.395" endtime="20231120 02:07:15.397"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:15.397" endtime="20231120 02:07:15.397"/>
</return>
<msg timestamp="20231120 02:07:15.398" level="INFO">${token_resp} = 6E512F0685BC437B9BA97C8C3DF2D65B</msg>
<status status="PASS" starttime="20231120 02:07:15.365" endtime="20231120 02:07:15.398"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231120 02:07:15.399" level="INFO">${token} = 6E512F0685BC437B9BA97C8C3DF2D65B</msg>
<status status="PASS" starttime="20231120 02:07:15.398" endtime="20231120 02:07:15.399"/>
</kw>
<status status="PASS" starttime="20231120 02:07:12.869" endtime="20231120 02:07:15.400"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${order_data}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<arg>driver_id=${driver_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:15.401" level="INFO">${order_data} = {'plate_number': '京A12345', 'driver_phone': '18811111111', 'company_name': '京东', 'stuff_name': 'LNG', 'driver_id': '123456789012345678'}</msg>
<status status="PASS" starttime="20231120 02:07:15.400" endtime="20231120 02:07:15.401"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/add</arg>
<arg>${order_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:15.403" level="INFO">${header} = {'token': '6E512F0685BC437B9BA97C8C3DF2D65B'}</msg>
<status status="PASS" starttime="20231120 02:07:15.402" endtime="20231120 02:07:15.403"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:15.464" level="INFO">POST Request : url=http://localhost:31700/api/order/add 
 path_url=/api/order/add 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6E512F0685BC437B9BA97C8C3DF2D65B', 'Content-Length': '151', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "\\u4eacA12345", "driver_phone": "18811111111", "company_name": "\\u4eac\\u4e1c", "stuff_name": "LNG", "driver_id": "123456789012345678"}' 
 </msg>
<msg timestamp="20231120 02:07:15.465" level="INFO">POST Response : url=http://localhost:31700/api/order/add 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231120 02:07:15.465" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:15.403" endtime="20231120 02:07:15.465"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:15.465" endtime="20231120 02:07:15.465"/>
</return>
<msg timestamp="20231120 02:07:15.466" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:15.401" endtime="20231120 02:07:15.466"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:15.467" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:15.466" endtime="20231120 02:07:15.468"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:15.468" endtime="20231120 02:07:15.468"/>
</return>
<status status="PASS" starttime="20231120 02:07:15.401" endtime="20231120 02:07:15.469"/>
</kw>
<status status="PASS" starttime="20231120 02:07:12.868" endtime="20231120 02:07:15.469"/>
</kw>
<kw name="Search Order" library="rest_res">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:15.472" endtime="20231120 02:07:15.473"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:15.473" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:15.616" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:12 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:15.473" endtime="20231120 02:07:15.617"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:15.621" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:15.617" endtime="20231120 02:07:15.621"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:15.628" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:15.621" endtime="20231120 02:07:15.628"/>
</kw>
<status status="PASS" starttime="20231120 02:07:15.471" endtime="20231120 02:07:15.628"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.629" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:15.629" endtime="20231120 02:07:15.629"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:15.632" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:15.630" endtime="20231120 02:07:15.632"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:15.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.633" endtime="20231120 02:07:15.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.638" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:15.637" endtime="20231120 02:07:15.638"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.639" endtime="20231120 02:07:15.639"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.640" endtime="20231120 02:07:15.640"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:15.640" endtime="20231120 02:07:15.641"/>
</return>
<status status="PASS" starttime="20231120 02:07:15.628" endtime="20231120 02:07:15.641"/>
</kw>
<status status="PASS" starttime="20231120 02:07:15.471" endtime="20231120 02:07:15.641"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.642" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:15.642" endtime="20231120 02:07:15.642"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:15.645" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:07:15.643" endtime="20231120 02:07:15.646"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:15.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.646" endtime="20231120 02:07:15.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.647" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:15.647" endtime="20231120 02:07:15.648"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.648" endtime="20231120 02:07:15.649"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:15.649" endtime="20231120 02:07:15.649"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:15.650" endtime="20231120 02:07:15.650"/>
</return>
<status status="PASS" starttime="20231120 02:07:15.641" endtime="20231120 02:07:15.650"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.651" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:15.651" endtime="20231120 02:07:15.651"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:15.654" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:07:15.652" endtime="20231120 02:07:15.654"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:15.658" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231120 02:07:15.659" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:15.655" endtime="20231120 02:07:15.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.660" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:07:15.659" endtime="20231120 02:07:15.660"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.661" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:15.660" endtime="20231120 02:07:15.661"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:15.662" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231120 02:07:15.661" endtime="20231120 02:07:15.662"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:15.662" endtime="20231120 02:07:15.662"/>
</return>
<status status="PASS" starttime="20231120 02:07:15.650" endtime="20231120 02:07:15.662"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:15.664" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:15.663" endtime="20231120 02:07:15.664"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:15.666" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:07:15.664" endtime="20231120 02:07:15.666"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:17.915" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231120 02:07:17.916" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:15.667" endtime="20231120 02:07:17.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:17.916" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231120 02:07:17.916" endtime="20231120 02:07:17.916"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:17.917" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:17.917" endtime="20231120 02:07:17.917"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:17.918" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:17.917" endtime="20231120 02:07:17.918"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:17.918" endtime="20231120 02:07:17.918"/>
</return>
<msg timestamp="20231120 02:07:17.918" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:07:15.663" endtime="20231120 02:07:17.918"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:17.919" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231120 02:07:17.919" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:17.918" endtime="20231120 02:07:17.919"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:17.919" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:07:17.919" endtime="20231120 02:07:17.920"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:17.920" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231120 02:07:17.920" endtime="20231120 02:07:17.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:17.921" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231120 02:07:17.921" endtime="20231120 02:07:17.922"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:17.922" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231120 02:07:17.922" endtime="20231120 02:07:17.923"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:17.928" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231120 02:07:17.923" endtime="20231120 02:07:17.928"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:17.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:17.929" endtime="20231120 02:07:17.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:17.941" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:17.941" endtime="20231120 02:07:17.941"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:17.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:17.942" endtime="20231120 02:07:17.942"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:17.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:17.942" endtime="20231120 02:07:17.943"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:17.943" endtime="20231120 02:07:17.944"/>
</return>
<status status="PASS" starttime="20231120 02:07:17.922" endtime="20231120 02:07:17.944"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:17.945" endtime="20231120 02:07:17.945"/>
</kw>
<status status="PASS" starttime="20231120 02:07:17.944" endtime="20231120 02:07:17.946"/>
</kw>
<status status="PASS" starttime="20231120 02:07:15.470" endtime="20231120 02:07:17.946"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231120 02:07:17.946" endtime="20231120 02:07:17.947"/>
</return>
<msg timestamp="20231120 02:07:17.947" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231120 02:07:17.947" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231120 02:07:17.946" endtime="20231120 02:07:17.947"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:17.948" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231120 02:07:17.947" endtime="20231120 02:07:17.948"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:17.950" level="INFO">${header} = {'token': '6E512F0685BC437B9BA97C8C3DF2D65B'}</msg>
<status status="PASS" starttime="20231120 02:07:17.950" endtime="20231120 02:07:17.950"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:17.976" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6E512F0685BC437B9BA97C8C3DF2D65B', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231120 02:07:17.976" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-2dfzKOl3YIP1myf44LZGN6JMVeQ"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"D25E6A3FE1CC46058E289F9147B523AA"} 
 </msg>
<msg timestamp="20231120 02:07:17.976" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:17.951" endtime="20231120 02:07:17.976"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:17.977" endtime="20231120 02:07:17.977"/>
</return>
<msg timestamp="20231120 02:07:17.977" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:17.949" endtime="20231120 02:07:17.978"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:17.979" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:17.978" endtime="20231120 02:07:17.979"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:17.979" endtime="20231120 02:07:17.980"/>
</return>
<msg timestamp="20231120 02:07:17.980" level="INFO">${token_resp} = D25E6A3FE1CC46058E289F9147B523AA</msg>
<status status="PASS" starttime="20231120 02:07:17.949" endtime="20231120 02:07:17.980"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231120 02:07:17.981" level="INFO">${token} = D25E6A3FE1CC46058E289F9147B523AA</msg>
<status status="PASS" starttime="20231120 02:07:17.981" endtime="20231120 02:07:17.981"/>
</kw>
<status status="PASS" starttime="20231120 02:07:15.470" endtime="20231120 02:07:17.982"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:17.983" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231120 02:07:17.982" endtime="20231120 02:07:17.983"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:17.985" level="INFO">${header} = {'token': 'D25E6A3FE1CC46058E289F9147B523AA'}</msg>
<status status="PASS" starttime="20231120 02:07:17.984" endtime="20231120 02:07:17.985"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:18.009" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'D25E6A3FE1CC46058E289F9147B523AA', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231120 02:07:18.009" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '558', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"22e-b6vcDniMNNQxYeck1NRR/nhkeEo"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":[{"id":23,"order_number":"170041723523","plate_number":"京A12345","back_plate_number":"","driver_name":"","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":0,"m_weight":0,"enter_weight":0,"reg_info":{"operator_name":"","operator_time":""},"call_info":{"operator_name":"","operator_time":""},"confirm_info":{"operator_name":"","operator_time":""},"seal_no":"","history_records":[],"order_attachs":[],"p_time":"","m_time":"","is_sale":false,"status":1,"company_name":"京东","stuff_from":""}]} 
 </msg>
<msg timestamp="20231120 02:07:18.010" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:17.985" endtime="20231120 02:07:18.010"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:18.010" endtime="20231120 02:07:18.010"/>
</return>
<msg timestamp="20231120 02:07:18.011" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:17.984" endtime="20231120 02:07:18.011"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:18.012" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:18.011" endtime="20231120 02:07:18.013"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:18.013" endtime="20231120 02:07:18.013"/>
</return>
<msg timestamp="20231120 02:07:18.014" level="INFO">${search_result} = [{'id': 23, 'order_number': '170041723523', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231120 02:07:17.983" endtime="20231120 02:07:18.014"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231120 02:07:18.014" endtime="20231120 02:07:18.014"/>
</return>
<msg timestamp="20231120 02:07:18.015" level="INFO">${driver_result} = [{'id': 23, 'order_number': '170041723523', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'LNG'...</msg>
<status status="PASS" starttime="20231120 02:07:15.469" endtime="20231120 02:07:18.015"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${order_number}</arg>
<arg>${driver_result}[0][order_number]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231120 02:07:18.016" level="INFO">${order_number} = 170041723523</msg>
<status status="PASS" starttime="20231120 02:07:18.015" endtime="20231120 02:07:18.016"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_fgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:18.019" endtime="20231120 02:07:18.019"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:18.020" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:18.168" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:15 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:18.019" endtime="20231120 02:07:18.169"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.172" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:18.169" endtime="20231120 02:07:18.172"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.179" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:18.173" endtime="20231120 02:07:18.180"/>
</kw>
<status status="PASS" starttime="20231120 02:07:18.018" endtime="20231120 02:07:18.180"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.181" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:18.181" endtime="20231120 02:07:18.181"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.184" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:18.181" endtime="20231120 02:07:18.184"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.184" endtime="20231120 02:07:18.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.189" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:18.189" endtime="20231120 02:07:18.190"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.190" endtime="20231120 02:07:18.191"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.191" endtime="20231120 02:07:18.191"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:18.192" endtime="20231120 02:07:18.192"/>
</return>
<status status="PASS" starttime="20231120 02:07:18.180" endtime="20231120 02:07:18.192"/>
</kw>
<status status="PASS" starttime="20231120 02:07:18.018" endtime="20231120 02:07:18.192"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.194" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:18.193" endtime="20231120 02:07:18.194"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.197" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:18.194" endtime="20231120 02:07:18.197"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.197" endtime="20231120 02:07:18.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.199" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:18.198" endtime="20231120 02:07:18.199"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.199" endtime="20231120 02:07:18.200"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.200" endtime="20231120 02:07:18.201"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:18.201" endtime="20231120 02:07:18.201"/>
</return>
<status status="PASS" starttime="20231120 02:07:18.192" endtime="20231120 02:07:18.201"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.202" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:18.202" endtime="20231120 02:07:18.202"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.205" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:18.203" endtime="20231120 02:07:18.205"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.783" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:07:18.783" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:18.205" endtime="20231120 02:07:18.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.784" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:07:18.783" endtime="20231120 02:07:18.784"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.784" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:18.784" endtime="20231120 02:07:18.785"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.785" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:18.785" endtime="20231120 02:07:18.785"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:18.785" endtime="20231120 02:07:18.785"/>
</return>
<msg timestamp="20231120 02:07:18.786" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:18.201" endtime="20231120 02:07:18.786"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:18.786" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:07:18.786" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231120 02:07:18.786" endtime="20231120 02:07:18.786"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:18.787" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231120 02:07:18.787" endtime="20231120 02:07:18.787"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:18.788" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231120 02:07:18.787" endtime="20231120 02:07:18.788"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:07:18.789" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231120 02:07:18.788" endtime="20231120 02:07:18.789"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:18.790" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231120 02:07:18.789" endtime="20231120 02:07:18.790"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:18.790" endtime="20231120 02:07:18.791"/>
</kw>
<status status="PASS" starttime="20231120 02:07:18.790" endtime="20231120 02:07:18.791"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:07:18.791" endtime="20231120 02:07:18.791"/>
</return>
<msg timestamp="20231120 02:07:18.792" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231120 02:07:18.017" endtime="20231120 02:07:18.792"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:18.797" endtime="20231120 02:07:18.798"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:18.799" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:18.951" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:18 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:18.798" endtime="20231120 02:07:18.952"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.956" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:18.952" endtime="20231120 02:07:18.956"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.963" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:18.956" endtime="20231120 02:07:18.963"/>
</kw>
<status status="PASS" starttime="20231120 02:07:18.796" endtime="20231120 02:07:18.963"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.964" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:18.964" endtime="20231120 02:07:18.965"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.968" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:18.965" endtime="20231120 02:07:18.968"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.968" endtime="20231120 02:07:18.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.973" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:18.972" endtime="20231120 02:07:18.973"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.973" endtime="20231120 02:07:18.974"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.974" endtime="20231120 02:07:18.975"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:18.975" endtime="20231120 02:07:18.975"/>
</return>
<status status="PASS" starttime="20231120 02:07:18.963" endtime="20231120 02:07:18.975"/>
</kw>
<status status="PASS" starttime="20231120 02:07:18.793" endtime="20231120 02:07:18.975"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.976" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:18.976" endtime="20231120 02:07:18.977"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.979" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:18.977" endtime="20231120 02:07:18.980"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.980" endtime="20231120 02:07:18.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.981" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:18.981" endtime="20231120 02:07:18.982"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.982" endtime="20231120 02:07:18.982"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.983" endtime="20231120 02:07:18.983"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:18.983" endtime="20231120 02:07:18.984"/>
</return>
<status status="PASS" starttime="20231120 02:07:18.976" endtime="20231120 02:07:18.984"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.985" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231120 02:07:18.985" endtime="20231120 02:07:18.985"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:18.988" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231120 02:07:18.985" endtime="20231120 02:07:18.988"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:18.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.988" endtime="20231120 02:07:18.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:18.996" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:18.995" endtime="20231120 02:07:18.996"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.996" endtime="20231120 02:07:18.997"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:18.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:18.998" endtime="20231120 02:07:18.998"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:18.998" endtime="20231120 02:07:18.999"/>
</return>
<status status="PASS" starttime="20231120 02:07:18.984" endtime="20231120 02:07:18.999"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:18.999" endtime="20231120 02:07:19.000"/>
</kw>
<status status="PASS" starttime="20231120 02:07:18.999" endtime="20231120 02:07:19.000"/>
</kw>
<status status="PASS" starttime="20231120 02:07:18.016" endtime="20231120 02:07:19.000"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_bgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:19.002" endtime="20231120 02:07:19.003"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:19.003" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:19.145" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:18 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:19.003" endtime="20231120 02:07:19.145"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.150" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:19.146" endtime="20231120 02:07:19.150"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.156" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:19.150" endtime="20231120 02:07:19.156"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.002" endtime="20231120 02:07:19.156"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.157" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:19.157" endtime="20231120 02:07:19.158"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.160" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:19.158" endtime="20231120 02:07:19.160"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.161" endtime="20231120 02:07:19.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.166" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:19.165" endtime="20231120 02:07:19.166"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.166" endtime="20231120 02:07:19.167"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.167" endtime="20231120 02:07:19.168"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:19.168" endtime="20231120 02:07:19.168"/>
</return>
<status status="PASS" starttime="20231120 02:07:19.156" endtime="20231120 02:07:19.168"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.002" endtime="20231120 02:07:19.169"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.170" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:19.169" endtime="20231120 02:07:19.170"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.172" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:19.170" endtime="20231120 02:07:19.172"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.173" endtime="20231120 02:07:19.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.174" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:19.174" endtime="20231120 02:07:19.174"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.174" endtime="20231120 02:07:19.175"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.175" endtime="20231120 02:07:19.176"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:19.176" endtime="20231120 02:07:19.176"/>
</return>
<status status="PASS" starttime="20231120 02:07:19.169" endtime="20231120 02:07:19.177"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.178" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:19.177" endtime="20231120 02:07:19.178"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.181" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:19.178" endtime="20231120 02:07:19.181"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.749" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:07:19.750" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:19.181" endtime="20231120 02:07:19.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.750" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:07:19.750" endtime="20231120 02:07:19.750"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.751" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:19.751" endtime="20231120 02:07:19.751"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.752" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:19.751" endtime="20231120 02:07:19.752"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:19.752" endtime="20231120 02:07:19.752"/>
</return>
<msg timestamp="20231120 02:07:19.752" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:19.177" endtime="20231120 02:07:19.752"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:19.753" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:07:19.753" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231120 02:07:19.752" endtime="20231120 02:07:19.753"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:19.753" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231120 02:07:19.753" endtime="20231120 02:07:19.754"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:19.754" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231120 02:07:19.754" endtime="20231120 02:07:19.754"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:07:19.755" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231120 02:07:19.754" endtime="20231120 02:07:19.755"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:19.756" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231120 02:07:19.755" endtime="20231120 02:07:19.756"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:19.757" endtime="20231120 02:07:19.757"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.756" endtime="20231120 02:07:19.757"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:07:19.758" endtime="20231120 02:07:19.758"/>
</return>
<msg timestamp="20231120 02:07:19.758" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231120 02:07:19.001" endtime="20231120 02:07:19.758"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:19.760" endtime="20231120 02:07:19.761"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:19.762" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:19.907" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:19 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:19.761" endtime="20231120 02:07:19.907"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.911" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:19.907" endtime="20231120 02:07:19.911"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.918" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:19.911" endtime="20231120 02:07:19.918"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.759" endtime="20231120 02:07:19.918"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.919" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:19.919" endtime="20231120 02:07:19.919"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.922" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:19.920" endtime="20231120 02:07:19.922"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.922" endtime="20231120 02:07:19.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.927" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:19.927" endtime="20231120 02:07:19.928"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.928" endtime="20231120 02:07:19.929"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.929" endtime="20231120 02:07:19.929"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:19.930" endtime="20231120 02:07:19.930"/>
</return>
<status status="PASS" starttime="20231120 02:07:19.918" endtime="20231120 02:07:19.930"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.759" endtime="20231120 02:07:19.930"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.931" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:19.931" endtime="20231120 02:07:19.931"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.934" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:19.932" endtime="20231120 02:07:19.935"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.935" endtime="20231120 02:07:19.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.936" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:19.936" endtime="20231120 02:07:19.937"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.937" endtime="20231120 02:07:19.937"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.938" endtime="20231120 02:07:19.938"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:19.938" endtime="20231120 02:07:19.939"/>
</return>
<status status="PASS" starttime="20231120 02:07:19.930" endtime="20231120 02:07:19.939"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.940" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231120 02:07:19.940" endtime="20231120 02:07:19.940"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:19.943" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231120 02:07:19.940" endtime="20231120 02:07:19.943"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:19.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.943" endtime="20231120 02:07:19.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:19.950" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:19.949" endtime="20231120 02:07:19.950"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.950" endtime="20231120 02:07:19.951"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:19.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:19.951" endtime="20231120 02:07:19.952"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:19.952" endtime="20231120 02:07:19.952"/>
</return>
<status status="PASS" starttime="20231120 02:07:19.939" endtime="20231120 02:07:19.953"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:19.953" endtime="20231120 02:07:19.954"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.953" endtime="20231120 02:07:19.954"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.000" endtime="20231120 02:07:19.954"/>
</kw>
<status status="PASS" starttime="20231120 02:07:07.633" endtime="20231120 02:07:19.954"/>
</kw>
<kw name="Check In Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${check_in_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_check_in=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:19.956" level="INFO">${check_in_req} = {'order_number': '170041723523', 'is_check_in': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231120 02:07:19.955" endtime="20231120 02:07:19.956"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/check_in</arg>
<arg>${check_in_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:19.958" level="INFO">${header} = {'token': 'D25E6A3FE1CC46058E289F9147B523AA'}</msg>
<status status="PASS" starttime="20231120 02:07:19.957" endtime="20231120 02:07:19.958"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:19.994" level="INFO">POST Request : url=http://localhost:31700/api/order/check_in 
 path_url=/api/order/check_in 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'D25E6A3FE1CC46058E289F9147B523AA', 'Content-Length': '72', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170041723523", "is_check_in": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231120 02:07:19.995" level="INFO">POST Response : url=http://localhost:31700/api/order/check_in 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231120 02:07:19.995" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:19.959" endtime="20231120 02:07:19.995"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:19.996" endtime="20231120 02:07:19.996"/>
</return>
<msg timestamp="20231120 02:07:19.996" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:19.957" endtime="20231120 02:07:19.996"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:19.998" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:19.997" endtime="20231120 02:07:19.998"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:19.998" endtime="20231120 02:07:19.998"/>
</return>
<status status="PASS" starttime="20231120 02:07:19.956" endtime="20231120 02:07:19.999"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.955" endtime="20231120 02:07:19.999"/>
</kw>
<kw name="Call Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${call_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_call=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:20.001" level="INFO">${call_req} = {'order_number': '170041723523', 'is_call': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231120 02:07:20.000" endtime="20231120 02:07:20.001"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/call</arg>
<arg>${call_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:07:20.003" level="INFO">${header} = {'token': 'D25E6A3FE1CC46058E289F9147B523AA'}</msg>
<status status="PASS" starttime="20231120 02:07:20.002" endtime="20231120 02:07:20.003"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:07:20.040" level="INFO">POST Request : url=http://localhost:31700/api/order/call 
 path_url=/api/order/call 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'D25E6A3FE1CC46058E289F9147B523AA', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170041723523", "is_call": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231120 02:07:20.040" level="INFO">POST Response : url=http://localhost:31700/api/order/call 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:07:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231120 02:07:20.040" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:20.003" endtime="20231120 02:07:20.040"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:07:20.041" endtime="20231120 02:07:20.041"/>
</return>
<msg timestamp="20231120 02:07:20.041" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:07:20.002" endtime="20231120 02:07:20.041"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:07:20.043" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:07:20.042" endtime="20231120 02:07:20.043"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:07:20.043" endtime="20231120 02:07:20.043"/>
</return>
<status status="PASS" starttime="20231120 02:07:20.001" endtime="20231120 02:07:20.044"/>
</kw>
<status status="PASS" starttime="20231120 02:07:19.999" endtime="20231120 02:07:20.044"/>
</kw>
<kw name="One Time Scale">
<arg>p</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${weight}</var>
<arg>${p_weight}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:20.046" level="INFO">${weight} = 20.23</msg>
<status status="PASS" starttime="20231120 02:07:20.045" endtime="20231120 02:07:20.046"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:20.047" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231120 02:07:20.046" endtime="20231120 02:07:20.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:20.048" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231120 02:07:20.047" endtime="20231120 02:07:20.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:20.049" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231120 02:07:20.048" endtime="20231120 02:07:20.049"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weight}</arg>
<arg>${m_weight}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231120 02:07:20.053" endtime="20231120 02:07:20.053"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231120 02:07:20.053" endtime="20231120 02:07:20.054"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231120 02:07:20.054" endtime="20231120 02:07:20.054"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231120 02:07:20.054" endtime="20231120 02:07:20.055"/>
</kw>
<status status="NOT RUN" starttime="20231120 02:07:20.049" endtime="20231120 02:07:20.055"/>
</branch>
<status status="PASS" starttime="20231120 02:07:20.049" endtime="20231120 02:07:20.055"/>
</if>
<kw name="Mock Plate Cap" library="dev_res">
<arg>${plate_no}</arg>
<arg>${pc}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:20.057" endtime="20231120 02:07:20.057"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:20.058" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:20.204" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:19 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:20.057" endtime="20231120 02:07:20.204"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:20.208" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:20.204" endtime="20231120 02:07:20.208"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:20.215" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:20.208" endtime="20231120 02:07:20.216"/>
</kw>
<status status="PASS" starttime="20231120 02:07:20.056" endtime="20231120 02:07:20.216"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.217" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:20.217" endtime="20231120 02:07:20.217"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:20.220" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:20.218" endtime="20231120 02:07:20.220"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:20.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.221" endtime="20231120 02:07:20.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.226" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:20.225" endtime="20231120 02:07:20.226"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:20.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.226" endtime="20231120 02:07:20.227"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:20.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.227" endtime="20231120 02:07:20.228"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:20.228" endtime="20231120 02:07:20.228"/>
</return>
<status status="PASS" starttime="20231120 02:07:20.216" endtime="20231120 02:07:20.228"/>
</kw>
<status status="PASS" starttime="20231120 02:07:20.056" endtime="20231120 02:07:20.229"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.230" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:20.229" endtime="20231120 02:07:20.230"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:20.233" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:20.230" endtime="20231120 02:07:20.233"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:20.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.234" endtime="20231120 02:07:20.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.236" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:20.235" endtime="20231120 02:07:20.236"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:20.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.236" endtime="20231120 02:07:20.237"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:20.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.237" endtime="20231120 02:07:20.238"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:20.239" endtime="20231120 02:07:20.239"/>
</return>
<status status="PASS" starttime="20231120 02:07:20.229" endtime="20231120 02:07:20.239"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.241" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:20.240" endtime="20231120 02:07:20.241"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:20.244" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:20.241" endtime="20231120 02:07:20.245"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:20.808" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:07:20.808" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:20.245" endtime="20231120 02:07:20.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.809" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:07:20.809" endtime="20231120 02:07:20.809"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:20.810" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:20.809" endtime="20231120 02:07:20.810"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:20.811" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:20.810" endtime="20231120 02:07:20.811"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:20.811" endtime="20231120 02:07:20.811"/>
</return>
<msg timestamp="20231120 02:07:20.812" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:20.240" endtime="20231120 02:07:20.812"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:20.812" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:07:20.812" level="INFO">${lines} = | 34 | s    | 331:fpc |</msg>
<status status="PASS" starttime="20231120 02:07:20.812" endtime="20231120 02:07:20.813"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:20.813" level="INFO">${line} = | 34 | s    | 331:fpc |</msg>
<status status="PASS" starttime="20231120 02:07:20.813" endtime="20231120 02:07:20.813"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:20.814" level="INFO">${line_array} = ['| 34 | s    | 331', 'fpc |']</msg>
<status status="PASS" starttime="20231120 02:07:20.813" endtime="20231120 02:07:20.814"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:07:20.815" level="INFO">${dev_name_array} = ['|', '34', '|', 's', '|', '331']</msg>
<status status="PASS" starttime="20231120 02:07:20.814" endtime="20231120 02:07:20.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:20.816" level="INFO">${dev_id} = 331</msg>
<status status="PASS" starttime="20231120 02:07:20.815" endtime="20231120 02:07:20.816"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:20.817" endtime="20231120 02:07:20.817"/>
</kw>
<status status="PASS" starttime="20231120 02:07:20.816" endtime="20231120 02:07:20.817"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:07:20.817" endtime="20231120 02:07:20.818"/>
</return>
<msg timestamp="20231120 02:07:20.818" level="INFO">${dev_id} = 331</msg>
<status status="PASS" starttime="20231120 02:07:20.055" endtime="20231120 02:07:20.818"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:20.820" endtime="20231120 02:07:20.822"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:20.822" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:20.972" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:20 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:20.822" endtime="20231120 02:07:20.973"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:20.978" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:20.973" endtime="20231120 02:07:20.978"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:20.986" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:20.979" endtime="20231120 02:07:20.986"/>
</kw>
<status status="PASS" starttime="20231120 02:07:20.819" endtime="20231120 02:07:20.987"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.988" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:20.987" endtime="20231120 02:07:20.988"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:20.991" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:20.988" endtime="20231120 02:07:20.991"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:20.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.992" endtime="20231120 02:07:20.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:20.998" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:20.997" endtime="20231120 02:07:20.998"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:20.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.998" endtime="20231120 02:07:20.999"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:21.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:20.999" endtime="20231120 02:07:21.000"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:21.000" endtime="20231120 02:07:21.000"/>
</return>
<status status="PASS" starttime="20231120 02:07:20.987" endtime="20231120 02:07:21.001"/>
</kw>
<status status="PASS" starttime="20231120 02:07:20.819" endtime="20231120 02:07:21.001"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:21.002" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:21.002" endtime="20231120 02:07:21.002"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:21.005" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:21.002" endtime="20231120 02:07:21.005"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:21.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:21.005" endtime="20231120 02:07:21.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:21.007" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:21.007" endtime="20231120 02:07:21.007"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:21.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:21.008" endtime="20231120 02:07:21.008"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:21.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:21.008" endtime="20231120 02:07:21.009"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:21.009" endtime="20231120 02:07:21.010"/>
</return>
<status status="PASS" starttime="20231120 02:07:21.001" endtime="20231120 02:07:21.010"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} plate ${plate_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:21.011" level="INFO">mock_device_action 331 plate 京A12345</msg>
<status status="PASS" starttime="20231120 02:07:21.011" endtime="20231120 02:07:21.011"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:21.014" level="INFO">mock_device_action 331 plate äº¬A12345</msg>
<status status="PASS" starttime="20231120 02:07:21.012" endtime="20231120 02:07:21.015"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:21.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:21.015" endtime="20231120 02:07:21.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:21.022" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:21.021" endtime="20231120 02:07:21.022"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:21.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:21.022" endtime="20231120 02:07:21.023"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:21.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:21.023" endtime="20231120 02:07:21.025"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:21.025" endtime="20231120 02:07:21.025"/>
</return>
<status status="PASS" starttime="20231120 02:07:21.010" endtime="20231120 02:07:21.025"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:21.026" endtime="20231120 02:07:21.026"/>
</kw>
<status status="PASS" starttime="20231120 02:07:21.025" endtime="20231120 02:07:21.027"/>
</kw>
<status status="PASS" starttime="20231120 02:07:20.055" endtime="20231120 02:07:21.027"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231120 02:07:27.028" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20231120 02:07:21.027" endtime="20231120 02:07:27.029"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:27.031" endtime="20231120 02:07:27.031"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:27.032" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:27.182" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:20 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:27.032" endtime="20231120 02:07:27.183"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.187" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:27.183" endtime="20231120 02:07:27.187"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:27.194" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:27.187" endtime="20231120 02:07:27.194"/>
</kw>
<status status="PASS" starttime="20231120 02:07:27.030" endtime="20231120 02:07:27.194"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.197" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231120 02:07:27.195" endtime="20231120 02:07:27.198"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:27.199" level="INFO">å¼é¨</msg>
<msg timestamp="20231120 02:07:27.199" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231120 02:07:27.198" endtime="20231120 02:07:27.200"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.200" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:27.200" endtime="20231120 02:07:27.201"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.201" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231120 02:07:27.201" endtime="20231120 02:07:27.201"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:27.202" endtime="20231120 02:07:27.202"/>
</kw>
<status status="PASS" starttime="20231120 02:07:27.202" endtime="20231120 02:07:27.203"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:07:27.203" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:07:27.204" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231120 02:07:27.203" endtime="20231120 02:07:27.204"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:07:27.204" endtime="20231120 02:07:27.204"/>
</return>
<msg timestamp="20231120 02:07:27.204" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231120 02:07:27.029" endtime="20231120 02:07:27.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:07:27.205" endtime="20231120 02:07:27.205"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:27.206" endtime="20231120 02:07:27.207"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:27.208" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:27.355" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:27 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:27.207" endtime="20231120 02:07:27.355"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.359" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:27.355" endtime="20231120 02:07:27.360"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:27.368" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:27.360" endtime="20231120 02:07:27.368"/>
</kw>
<status status="PASS" starttime="20231120 02:07:27.206" endtime="20231120 02:07:27.368"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.371" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231120 02:07:27.368" endtime="20231120 02:07:27.371"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:27.373" level="INFO">å³é¨</msg>
<msg timestamp="20231120 02:07:27.373" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231120 02:07:27.372" endtime="20231120 02:07:27.373"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.374" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:27.374" endtime="20231120 02:07:27.374"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.375" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231120 02:07:27.374" endtime="20231120 02:07:27.375"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:27.376" endtime="20231120 02:07:27.376"/>
</kw>
<status status="PASS" starttime="20231120 02:07:27.375" endtime="20231120 02:07:27.377"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:07:27.377" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:07:27.378" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231120 02:07:27.377" endtime="20231120 02:07:27.378"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:07:27.378" endtime="20231120 02:07:27.378"/>
</return>
<msg timestamp="20231120 02:07:27.379" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231120 02:07:27.205" endtime="20231120 02:07:27.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:07:27.379" endtime="20231120 02:07:27.380"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:27.382" endtime="20231120 02:07:27.382"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:27.383" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:27.530" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:27 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:27.383" endtime="20231120 02:07:27.531"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.535" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:27.531" endtime="20231120 02:07:27.535"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:27.541" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:27.535" endtime="20231120 02:07:27.541"/>
</kw>
<status status="PASS" starttime="20231120 02:07:27.381" endtime="20231120 02:07:27.541"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:27.542" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:27.542" endtime="20231120 02:07:27.543"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.546" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:27.543" endtime="20231120 02:07:27.546"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:27.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:27.547" endtime="20231120 02:07:27.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:27.551" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:27.551" endtime="20231120 02:07:27.551"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:27.552" endtime="20231120 02:07:27.552"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:27.553" endtime="20231120 02:07:27.553"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:27.553" endtime="20231120 02:07:27.554"/>
</return>
<status status="PASS" starttime="20231120 02:07:27.541" endtime="20231120 02:07:27.554"/>
</kw>
<status status="PASS" starttime="20231120 02:07:27.381" endtime="20231120 02:07:27.554"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:27.555" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:27.555" endtime="20231120 02:07:27.555"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.558" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:27.556" endtime="20231120 02:07:27.558"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:27.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:27.559" endtime="20231120 02:07:27.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:27.560" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:27.560" endtime="20231120 02:07:27.560"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:27.561" endtime="20231120 02:07:27.561"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:27.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:27.561" endtime="20231120 02:07:27.562"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:27.562" endtime="20231120 02:07:27.562"/>
</return>
<status status="PASS" starttime="20231120 02:07:27.554" endtime="20231120 02:07:27.563"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:27.564" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:27.563" endtime="20231120 02:07:27.564"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:27.567" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:27.564" endtime="20231120 02:07:27.567"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.131" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:07:28.131" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:27.567" endtime="20231120 02:07:28.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.132" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:07:28.132" endtime="20231120 02:07:28.132"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.133" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:28.132" endtime="20231120 02:07:28.133"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.133" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:28.133" endtime="20231120 02:07:28.134"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:28.134" endtime="20231120 02:07:28.134"/>
</return>
<msg timestamp="20231120 02:07:28.134" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:27.563" endtime="20231120 02:07:28.134"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:28.135" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:07:28.135" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231120 02:07:28.134" endtime="20231120 02:07:28.135"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:28.135" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231120 02:07:28.135" endtime="20231120 02:07:28.136"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:28.136" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231120 02:07:28.136" endtime="20231120 02:07:28.136"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:07:28.137" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231120 02:07:28.136" endtime="20231120 02:07:28.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:28.138" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231120 02:07:28.137" endtime="20231120 02:07:28.138"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:28.139" endtime="20231120 02:07:28.139"/>
</kw>
<status status="PASS" starttime="20231120 02:07:28.138" endtime="20231120 02:07:28.139"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:07:28.139" endtime="20231120 02:07:28.139"/>
</return>
<msg timestamp="20231120 02:07:28.140" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231120 02:07:27.380" endtime="20231120 02:07:28.140"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:28.141" endtime="20231120 02:07:28.142"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:28.143" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:28.295" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:27 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:28.142" endtime="20231120 02:07:28.295"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.299" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:28.295" endtime="20231120 02:07:28.300"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.306" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:28.300" endtime="20231120 02:07:28.306"/>
</kw>
<status status="PASS" starttime="20231120 02:07:28.140" endtime="20231120 02:07:28.306"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.307" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:28.307" endtime="20231120 02:07:28.307"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.310" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:28.308" endtime="20231120 02:07:28.311"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.311" endtime="20231120 02:07:28.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.315" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:28.315" endtime="20231120 02:07:28.316"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.316" endtime="20231120 02:07:28.316"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.317" endtime="20231120 02:07:28.317"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:28.318" endtime="20231120 02:07:28.318"/>
</return>
<status status="PASS" starttime="20231120 02:07:28.306" endtime="20231120 02:07:28.318"/>
</kw>
<status status="PASS" starttime="20231120 02:07:28.140" endtime="20231120 02:07:28.318"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.319" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:28.319" endtime="20231120 02:07:28.319"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.331" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:28.320" endtime="20231120 02:07:28.331"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.331" endtime="20231120 02:07:28.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.333" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:28.333" endtime="20231120 02:07:28.333"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.333" endtime="20231120 02:07:28.334"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.334" endtime="20231120 02:07:28.336"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:28.336" endtime="20231120 02:07:28.336"/>
</return>
<status status="PASS" starttime="20231120 02:07:28.318" endtime="20231120 02:07:28.336"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.337" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231120 02:07:28.337" endtime="20231120 02:07:28.338"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.347" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231120 02:07:28.338" endtime="20231120 02:07:28.348"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.348" endtime="20231120 02:07:28.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.358" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:28.358" endtime="20231120 02:07:28.359"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.359" endtime="20231120 02:07:28.360"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.360" endtime="20231120 02:07:28.360"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:28.361" endtime="20231120 02:07:28.361"/>
</return>
<status status="PASS" starttime="20231120 02:07:28.337" endtime="20231120 02:07:28.361"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:28.362" endtime="20231120 02:07:28.362"/>
</kw>
<status status="PASS" starttime="20231120 02:07:28.361" endtime="20231120 02:07:28.363"/>
</kw>
<status status="PASS" starttime="20231120 02:07:27.380" endtime="20231120 02:07:28.363"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:28.365" endtime="20231120 02:07:28.366"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:28.367" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:28.517" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:28 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:28.366" endtime="20231120 02:07:28.517"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.521" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:28.517" endtime="20231120 02:07:28.521"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.528" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:28.522" endtime="20231120 02:07:28.528"/>
</kw>
<status status="PASS" starttime="20231120 02:07:28.365" endtime="20231120 02:07:28.529"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.530" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:28.529" endtime="20231120 02:07:28.530"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.533" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:28.530" endtime="20231120 02:07:28.533"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.533" endtime="20231120 02:07:28.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.539" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:28.538" endtime="20231120 02:07:28.539"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.539" endtime="20231120 02:07:28.540"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.540" endtime="20231120 02:07:28.541"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:28.541" endtime="20231120 02:07:28.541"/>
</return>
<status status="PASS" starttime="20231120 02:07:28.529" endtime="20231120 02:07:28.541"/>
</kw>
<status status="PASS" starttime="20231120 02:07:28.364" endtime="20231120 02:07:28.541"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.542" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:28.542" endtime="20231120 02:07:28.542"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.545" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:28.543" endtime="20231120 02:07:28.545"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:28.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.546" endtime="20231120 02:07:28.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.548" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:28.547" endtime="20231120 02:07:28.548"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.548" endtime="20231120 02:07:28.549"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:28.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:28.549" endtime="20231120 02:07:28.550"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:28.550" endtime="20231120 02:07:28.550"/>
</return>
<status status="PASS" starttime="20231120 02:07:28.541" endtime="20231120 02:07:28.550"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:28.551" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:28.551" endtime="20231120 02:07:28.551"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:28.554" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:28.552" endtime="20231120 02:07:28.554"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:29.124" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:07:29.125" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:28.555" endtime="20231120 02:07:29.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:29.125" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:07:29.125" endtime="20231120 02:07:29.126"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.126" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:29.126" endtime="20231120 02:07:29.126"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.127" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:29.126" endtime="20231120 02:07:29.127"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:29.127" endtime="20231120 02:07:29.128"/>
</return>
<msg timestamp="20231120 02:07:29.128" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:28.550" endtime="20231120 02:07:29.129"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:29.130" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:07:29.130" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:07:29.129" endtime="20231120 02:07:29.130"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:29.131" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:07:29.130" endtime="20231120 02:07:29.131"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:29.131" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231120 02:07:29.131" endtime="20231120 02:07:29.131"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:07:29.132" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231120 02:07:29.132" endtime="20231120 02:07:29.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:29.134" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:07:29.133" endtime="20231120 02:07:29.134"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:29.134" endtime="20231120 02:07:29.135"/>
</kw>
<status status="PASS" starttime="20231120 02:07:29.134" endtime="20231120 02:07:29.135"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:07:29.135" endtime="20231120 02:07:29.135"/>
</return>
<msg timestamp="20231120 02:07:29.135" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:07:28.364" endtime="20231120 02:07:29.136"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:29.137" endtime="20231120 02:07:29.139"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:29.140" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:29.293" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:28 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:29.139" endtime="20231120 02:07:29.293"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:29.298" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:29.293" endtime="20231120 02:07:29.298"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:29.304" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:29.298" endtime="20231120 02:07:29.304"/>
</kw>
<status status="PASS" starttime="20231120 02:07:29.136" endtime="20231120 02:07:29.304"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:29.305" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:29.305" endtime="20231120 02:07:29.306"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:29.309" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:29.306" endtime="20231120 02:07:29.309"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:29.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.309" endtime="20231120 02:07:29.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:29.314" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:29.314" endtime="20231120 02:07:29.314"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.315" endtime="20231120 02:07:29.315"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.316" endtime="20231120 02:07:29.316"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:29.316" endtime="20231120 02:07:29.317"/>
</return>
<status status="PASS" starttime="20231120 02:07:29.304" endtime="20231120 02:07:29.317"/>
</kw>
<status status="PASS" starttime="20231120 02:07:29.136" endtime="20231120 02:07:29.317"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:29.318" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:29.318" endtime="20231120 02:07:29.318"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:29.321" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:29.319" endtime="20231120 02:07:29.321"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:29.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.321" endtime="20231120 02:07:29.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:29.323" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:29.322" endtime="20231120 02:07:29.323"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.323" endtime="20231120 02:07:29.324"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.324" endtime="20231120 02:07:29.325"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:29.325" endtime="20231120 02:07:29.325"/>
</return>
<status status="PASS" starttime="20231120 02:07:29.317" endtime="20231120 02:07:29.325"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:29.326" level="INFO">mock_device_action 340 scale 20.23</msg>
<status status="PASS" starttime="20231120 02:07:29.326" endtime="20231120 02:07:29.327"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:29.330" level="INFO">mock_device_action 340 scale 20.23</msg>
<status status="PASS" starttime="20231120 02:07:29.327" endtime="20231120 02:07:29.330"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:29.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.330" endtime="20231120 02:07:29.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:29.336" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:29.335" endtime="20231120 02:07:29.336"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.336" endtime="20231120 02:07:29.337"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:29.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:29.337" endtime="20231120 02:07:29.338"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:29.338" endtime="20231120 02:07:29.338"/>
</return>
<status status="PASS" starttime="20231120 02:07:29.326" endtime="20231120 02:07:29.339"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:29.339" endtime="20231120 02:07:29.340"/>
</kw>
<status status="PASS" starttime="20231120 02:07:29.339" endtime="20231120 02:07:29.340"/>
</kw>
<status status="PASS" starttime="20231120 02:07:28.363" endtime="20231120 02:07:29.340"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231120 02:07:47.342" level="INFO">Slept 18 seconds</msg>
<status status="PASS" starttime="20231120 02:07:29.340" endtime="20231120 02:07:47.343"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:47.345" endtime="20231120 02:07:47.346"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:47.347" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:47.500" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:29 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:47.347" endtime="20231120 02:07:47.500"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.504" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:47.500" endtime="20231120 02:07:47.504"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:47.511" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:47.505" endtime="20231120 02:07:47.511"/>
</kw>
<status status="PASS" starttime="20231120 02:07:47.345" endtime="20231120 02:07:47.511"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.515" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231120 02:07:47.511" endtime="20231120 02:07:47.515"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:47.517" level="INFO">å¼é¨</msg>
<msg timestamp="20231120 02:07:47.517" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231120 02:07:47.515" endtime="20231120 02:07:47.517"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.518" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:47.517" endtime="20231120 02:07:47.518"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.519" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231120 02:07:47.518" endtime="20231120 02:07:47.519"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:47.520" endtime="20231120 02:07:47.520"/>
</kw>
<status status="PASS" starttime="20231120 02:07:47.519" endtime="20231120 02:07:47.520"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:07:47.521" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:07:47.521" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231120 02:07:47.520" endtime="20231120 02:07:47.521"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:07:47.522" endtime="20231120 02:07:47.522"/>
</return>
<msg timestamp="20231120 02:07:47.522" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231120 02:07:47.344" endtime="20231120 02:07:47.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:07:47.523" endtime="20231120 02:07:47.523"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:47.524" endtime="20231120 02:07:47.525"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:47.525" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:47.674" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:47 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:47.525" endtime="20231120 02:07:47.674"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.679" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:47.674" endtime="20231120 02:07:47.679"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:47.685" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:47.679" endtime="20231120 02:07:47.686"/>
</kw>
<status status="PASS" starttime="20231120 02:07:47.524" endtime="20231120 02:07:47.686"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.689" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231120 02:07:47.686" endtime="20231120 02:07:47.689"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:47.691" level="INFO">å³é¨</msg>
<msg timestamp="20231120 02:07:47.691" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231120 02:07:47.690" endtime="20231120 02:07:47.691"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.692" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:07:47.692" endtime="20231120 02:07:47.692"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.693" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231120 02:07:47.693" endtime="20231120 02:07:47.693"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:47.694" endtime="20231120 02:07:47.695"/>
</kw>
<status status="PASS" starttime="20231120 02:07:47.694" endtime="20231120 02:07:47.695"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:07:47.695" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:07:47.696" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231120 02:07:47.695" endtime="20231120 02:07:47.696"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:07:47.696" endtime="20231120 02:07:47.696"/>
</return>
<msg timestamp="20231120 02:07:47.696" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231120 02:07:47.523" endtime="20231120 02:07:47.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:07:47.697" endtime="20231120 02:07:47.697"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:47.699" endtime="20231120 02:07:47.700"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:47.701" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:47.846" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:47 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:47.700" endtime="20231120 02:07:47.846"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.851" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:47.847" endtime="20231120 02:07:47.851"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:47.857" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:47.851" endtime="20231120 02:07:47.857"/>
</kw>
<status status="PASS" starttime="20231120 02:07:47.699" endtime="20231120 02:07:47.857"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:47.858" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:47.858" endtime="20231120 02:07:47.858"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.861" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:47.859" endtime="20231120 02:07:47.862"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:47.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:47.862" endtime="20231120 02:07:47.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:47.867" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:47.867" endtime="20231120 02:07:47.867"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:47.867" endtime="20231120 02:07:47.868"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:47.868" endtime="20231120 02:07:47.869"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:47.869" endtime="20231120 02:07:47.869"/>
</return>
<status status="PASS" starttime="20231120 02:07:47.857" endtime="20231120 02:07:47.870"/>
</kw>
<status status="PASS" starttime="20231120 02:07:47.699" endtime="20231120 02:07:47.870"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:47.871" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:47.871" endtime="20231120 02:07:47.871"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.874" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:47.871" endtime="20231120 02:07:47.874"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:47.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:47.874" endtime="20231120 02:07:47.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:47.876" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:47.875" endtime="20231120 02:07:47.876"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:47.876" endtime="20231120 02:07:47.877"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:47.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:47.877" endtime="20231120 02:07:47.877"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:47.877" endtime="20231120 02:07:47.878"/>
</return>
<status status="PASS" starttime="20231120 02:07:47.870" endtime="20231120 02:07:47.878"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:47.879" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:47.879" endtime="20231120 02:07:47.879"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:47.882" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:47.880" endtime="20231120 02:07:47.882"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.446" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:07:48.447" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:47.883" endtime="20231120 02:07:48.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.447" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:07:48.447" endtime="20231120 02:07:48.448"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.448" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:48.448" endtime="20231120 02:07:48.448"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.449" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:48.448" endtime="20231120 02:07:48.449"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:48.449" endtime="20231120 02:07:48.450"/>
</return>
<msg timestamp="20231120 02:07:48.450" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:47.878" endtime="20231120 02:07:48.450"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:48.451" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:07:48.451" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231120 02:07:48.450" endtime="20231120 02:07:48.451"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:48.452" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231120 02:07:48.451" endtime="20231120 02:07:48.452"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:48.453" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231120 02:07:48.452" endtime="20231120 02:07:48.453"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:07:48.454" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231120 02:07:48.453" endtime="20231120 02:07:48.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:48.455" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231120 02:07:48.454" endtime="20231120 02:07:48.455"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:48.455" endtime="20231120 02:07:48.456"/>
</kw>
<status status="PASS" starttime="20231120 02:07:48.455" endtime="20231120 02:07:48.456"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:07:48.456" endtime="20231120 02:07:48.456"/>
</return>
<msg timestamp="20231120 02:07:48.456" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231120 02:07:47.698" endtime="20231120 02:07:48.457"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:48.458" endtime="20231120 02:07:48.459"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:48.460" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:48.612" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:47 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:48.460" endtime="20231120 02:07:48.612"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.616" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:48.612" endtime="20231120 02:07:48.616"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.622" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:48.616" endtime="20231120 02:07:48.622"/>
</kw>
<status status="PASS" starttime="20231120 02:07:48.457" endtime="20231120 02:07:48.622"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.623" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:48.623" endtime="20231120 02:07:48.624"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.627" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:48.624" endtime="20231120 02:07:48.627"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.627" endtime="20231120 02:07:48.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.633" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:48.632" endtime="20231120 02:07:48.633"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.633" endtime="20231120 02:07:48.634"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.634" endtime="20231120 02:07:48.635"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:48.635" endtime="20231120 02:07:48.635"/>
</return>
<status status="PASS" starttime="20231120 02:07:48.623" endtime="20231120 02:07:48.636"/>
</kw>
<status status="PASS" starttime="20231120 02:07:48.457" endtime="20231120 02:07:48.636"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.637" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:48.637" endtime="20231120 02:07:48.637"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.640" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:48.637" endtime="20231120 02:07:48.640"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.640" endtime="20231120 02:07:48.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.642" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:48.641" endtime="20231120 02:07:48.642"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.642" endtime="20231120 02:07:48.643"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.643" endtime="20231120 02:07:48.644"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:48.644" endtime="20231120 02:07:48.644"/>
</return>
<status status="PASS" starttime="20231120 02:07:48.636" endtime="20231120 02:07:48.644"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.645" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231120 02:07:48.645" endtime="20231120 02:07:48.646"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.649" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231120 02:07:48.646" endtime="20231120 02:07:48.649"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.649" endtime="20231120 02:07:48.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.655" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:48.655" endtime="20231120 02:07:48.655"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.656" endtime="20231120 02:07:48.656"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.656" endtime="20231120 02:07:48.657"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:48.657" endtime="20231120 02:07:48.657"/>
</return>
<status status="PASS" starttime="20231120 02:07:48.645" endtime="20231120 02:07:48.658"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:48.658" endtime="20231120 02:07:48.659"/>
</kw>
<status status="PASS" starttime="20231120 02:07:48.658" endtime="20231120 02:07:48.659"/>
</kw>
<status status="PASS" starttime="20231120 02:07:47.697" endtime="20231120 02:07:48.659"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:48.662" endtime="20231120 02:07:48.662"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:48.663" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:48.808" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:48 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:48.662" endtime="20231120 02:07:48.808"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.813" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:48.809" endtime="20231120 02:07:48.813"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.820" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:48.814" endtime="20231120 02:07:48.820"/>
</kw>
<status status="PASS" starttime="20231120 02:07:48.661" endtime="20231120 02:07:48.820"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.822" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:48.821" endtime="20231120 02:07:48.822"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.825" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:48.822" endtime="20231120 02:07:48.825"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.825" endtime="20231120 02:07:48.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.831" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:48.830" endtime="20231120 02:07:48.831"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.831" endtime="20231120 02:07:48.832"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.832" endtime="20231120 02:07:48.833"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:48.833" endtime="20231120 02:07:48.833"/>
</return>
<status status="PASS" starttime="20231120 02:07:48.820" endtime="20231120 02:07:48.833"/>
</kw>
<status status="PASS" starttime="20231120 02:07:48.661" endtime="20231120 02:07:48.833"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.834" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:48.834" endtime="20231120 02:07:48.835"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.837" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:48.835" endtime="20231120 02:07:48.837"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:48.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.838" endtime="20231120 02:07:48.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.839" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:48.839" endtime="20231120 02:07:48.840"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.840" endtime="20231120 02:07:48.840"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:48.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:48.840" endtime="20231120 02:07:48.841"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:48.841" endtime="20231120 02:07:48.841"/>
</return>
<status status="PASS" starttime="20231120 02:07:48.834" endtime="20231120 02:07:48.842"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:48.843" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:48.842" endtime="20231120 02:07:48.843"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:48.845" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:07:48.843" endtime="20231120 02:07:48.846"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:49.448" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:07:49.448" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:48.846" endtime="20231120 02:07:49.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:49.450" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:07:49.449" endtime="20231120 02:07:49.450"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.451" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:49.450" endtime="20231120 02:07:49.452"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.452" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:49.452" endtime="20231120 02:07:49.453"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:49.453" endtime="20231120 02:07:49.453"/>
</return>
<msg timestamp="20231120 02:07:49.453" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:07:48.842" endtime="20231120 02:07:49.454"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:07:49.454" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:07:49.455" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:07:49.454" endtime="20231120 02:07:49.455"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:07:49.456" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:07:49.455" endtime="20231120 02:07:49.456"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:07:49.456" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231120 02:07:49.456" endtime="20231120 02:07:49.456"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:07:49.458" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231120 02:07:49.457" endtime="20231120 02:07:49.458"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:07:49.459" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:07:49.458" endtime="20231120 02:07:49.459"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:49.460" endtime="20231120 02:07:49.460"/>
</kw>
<status status="PASS" starttime="20231120 02:07:49.460" endtime="20231120 02:07:49.461"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:07:49.461" endtime="20231120 02:07:49.461"/>
</return>
<msg timestamp="20231120 02:07:49.461" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:07:48.660" endtime="20231120 02:07:49.462"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:07:49.463" endtime="20231120 02:07:49.464"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:07:49.464" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:07:49.610" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:48 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:49.464" endtime="20231120 02:07:49.610"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:49.614" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:07:49.610" endtime="20231120 02:07:49.615"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:49.622" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:07:49.615" endtime="20231120 02:07:49.622"/>
</kw>
<status status="PASS" starttime="20231120 02:07:49.463" endtime="20231120 02:07:49.622"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:49.624" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:49.623" endtime="20231120 02:07:49.624"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:49.627" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:07:49.624" endtime="20231120 02:07:49.628"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:49.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.628" endtime="20231120 02:07:49.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:49.633" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:49.633" endtime="20231120 02:07:49.634"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.634" endtime="20231120 02:07:49.634"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.635" endtime="20231120 02:07:49.635"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:49.635" endtime="20231120 02:07:49.635"/>
</return>
<status status="PASS" starttime="20231120 02:07:49.622" endtime="20231120 02:07:49.636"/>
</kw>
<status status="PASS" starttime="20231120 02:07:49.462" endtime="20231120 02:07:49.636"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:49.637" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:49.637" endtime="20231120 02:07:49.637"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:49.641" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:07:49.637" endtime="20231120 02:07:49.641"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:49.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.641" endtime="20231120 02:07:49.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:49.643" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:49.643" endtime="20231120 02:07:49.643"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.644" endtime="20231120 02:07:49.644"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.645" endtime="20231120 02:07:49.645"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:49.645" endtime="20231120 02:07:49.646"/>
</return>
<status status="PASS" starttime="20231120 02:07:49.636" endtime="20231120 02:07:49.646"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:49.647" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231120 02:07:49.647" endtime="20231120 02:07:49.647"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:07:49.651" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231120 02:07:49.648" endtime="20231120 02:07:49.651"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:07:49.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.651" endtime="20231120 02:07:49.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:07:49.658" level="INFO"/>
<status status="PASS" starttime="20231120 02:07:49.658" endtime="20231120 02:07:49.659"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.659" endtime="20231120 02:07:49.659"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:07:49.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:07:49.660" endtime="20231120 02:07:49.661"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:07:49.661" endtime="20231120 02:07:49.661"/>
</return>
<status status="PASS" starttime="20231120 02:07:49.646" endtime="20231120 02:07:49.661"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:07:49.662" endtime="20231120 02:07:49.663"/>
</kw>
<status status="PASS" starttime="20231120 02:07:49.661" endtime="20231120 02:07:49.663"/>
</kw>
<status status="PASS" starttime="20231120 02:07:48.660" endtime="20231120 02:07:49.663"/>
</kw>
<status status="PASS" starttime="20231120 02:07:20.045" endtime="20231120 02:07:49.663"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231120 02:08:09.665" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20231120 02:07:49.664" endtime="20231120 02:08:09.666"/>
</kw>
<kw name="Confirm Order" library="field_opt">
<arg>order_number=${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${confirm_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_confirm=${True}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:08:09.669" level="INFO">${confirm_req} = {'order_number': '170041723523', 'is_confirm': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231120 02:08:09.668" endtime="20231120 02:08:09.669"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/confirm</arg>
<arg>${confirm_req}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:08:09.673" level="INFO">${header} = {'token': 'D25E6A3FE1CC46058E289F9147B523AA'}</msg>
<status status="PASS" starttime="20231120 02:08:09.672" endtime="20231120 02:08:09.673"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:08:09.718" level="INFO">POST Request : url=http://localhost:31700/api/order/confirm 
 path_url=/api/order/confirm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'D25E6A3FE1CC46058E289F9147B523AA', 'Content-Length': '71', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170041723523", "is_confirm": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231120 02:08:09.718" level="INFO">POST Response : url=http://localhost:31700/api/order/confirm 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:08:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1d-2l+eR6Tw+kxHihPdYUt2upGNfBc"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":false} 
 </msg>
<msg timestamp="20231120 02:08:09.719" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:08:09.673" endtime="20231120 02:08:09.719"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:08:09.719" endtime="20231120 02:08:09.719"/>
</return>
<msg timestamp="20231120 02:08:09.720" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:08:09.670" endtime="20231120 02:08:09.720"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:08:09.721" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:08:09.720" endtime="20231120 02:08:09.721"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:08:09.722" endtime="20231120 02:08:09.722"/>
</return>
<status status="PASS" starttime="20231120 02:08:09.670" endtime="20231120 02:08:09.722"/>
</kw>
<status status="PASS" starttime="20231120 02:08:09.667" endtime="20231120 02:08:09.723"/>
</kw>
<kw name="One Time Scale">
<arg>m</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${weight}</var>
<arg>${p_weight}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:09.724" level="INFO">${weight} = 20.23</msg>
<status status="PASS" starttime="20231120 02:08:09.724" endtime="20231120 02:08:09.724"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:09.725" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231120 02:08:09.725" endtime="20231120 02:08:09.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:09.726" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231120 02:08:09.725" endtime="20231120 02:08:09.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:09.727" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231120 02:08:09.726" endtime="20231120 02:08:09.727"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weight}</arg>
<arg>${m_weight}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231120 02:08:09.728" level="INFO">${weight} = 49.21</msg>
<status status="PASS" starttime="20231120 02:08:09.728" endtime="20231120 02:08:09.729"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231120 02:08:09.729" level="INFO">${e_gate} = bg</msg>
<status status="PASS" starttime="20231120 02:08:09.729" endtime="20231120 02:08:09.730"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231120 02:08:09.730" level="INFO">${l_gate} = fg</msg>
<status status="PASS" starttime="20231120 02:08:09.730" endtime="20231120 02:08:09.731"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231120 02:08:09.731" level="INFO">${pc} = bpc</msg>
<status status="PASS" starttime="20231120 02:08:09.731" endtime="20231120 02:08:09.731"/>
</kw>
<status status="PASS" starttime="20231120 02:08:09.727" endtime="20231120 02:08:09.732"/>
</branch>
<status status="PASS" starttime="20231120 02:08:09.727" endtime="20231120 02:08:09.732"/>
</if>
<kw name="Mock Plate Cap" library="dev_res">
<arg>${plate_no}</arg>
<arg>${pc}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:09.734" endtime="20231120 02:08:09.735"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:09.735" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:09.879" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:07:49 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:09.735" endtime="20231120 02:08:09.879"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:09.883" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:09.879" endtime="20231120 02:08:09.884"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:09.889" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:09.884" endtime="20231120 02:08:09.889"/>
</kw>
<status status="PASS" starttime="20231120 02:08:09.733" endtime="20231120 02:08:09.890"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:09.891" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:09.890" endtime="20231120 02:08:09.891"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:09.894" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:09.891" endtime="20231120 02:08:09.894"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:09.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:09.895" endtime="20231120 02:08:09.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:09.899" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:09.899" endtime="20231120 02:08:09.900"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:09.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:09.900" endtime="20231120 02:08:09.900"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:09.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:09.901" endtime="20231120 02:08:09.902"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:09.902" endtime="20231120 02:08:09.902"/>
</return>
<status status="PASS" starttime="20231120 02:08:09.890" endtime="20231120 02:08:09.902"/>
</kw>
<status status="PASS" starttime="20231120 02:08:09.733" endtime="20231120 02:08:09.902"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:09.903" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:09.903" endtime="20231120 02:08:09.904"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:09.907" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:09.904" endtime="20231120 02:08:09.907"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:09.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:09.907" endtime="20231120 02:08:09.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:09.909" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:09.908" endtime="20231120 02:08:09.909"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:09.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:09.909" endtime="20231120 02:08:09.910"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:09.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:09.910" endtime="20231120 02:08:09.911"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:09.911" endtime="20231120 02:08:09.911"/>
</return>
<status status="PASS" starttime="20231120 02:08:09.902" endtime="20231120 02:08:09.911"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:09.913" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:09.912" endtime="20231120 02:08:09.913"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:09.915" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:09.913" endtime="20231120 02:08:09.916"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:10.488" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:08:10.488" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:09.916" endtime="20231120 02:08:10.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:10.489" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:08:10.489" endtime="20231120 02:08:10.489"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.490" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:10.489" endtime="20231120 02:08:10.490"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.490" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:10.490" endtime="20231120 02:08:10.490"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:10.491" endtime="20231120 02:08:10.491"/>
</return>
<msg timestamp="20231120 02:08:10.491" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:09.912" endtime="20231120 02:08:10.491"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:08:10.492" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:08:10.492" level="INFO">${lines} = |    |      | 332:bpc |</msg>
<status status="PASS" starttime="20231120 02:08:10.491" endtime="20231120 02:08:10.492"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:08:10.492" level="INFO">${line} = |    |      | 332:bpc |</msg>
<status status="PASS" starttime="20231120 02:08:10.492" endtime="20231120 02:08:10.492"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:08:10.493" level="INFO">${line_array} = ['|    |      | 332', 'bpc |']</msg>
<status status="PASS" starttime="20231120 02:08:10.493" endtime="20231120 02:08:10.493"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:08:10.495" level="INFO">${dev_name_array} = ['|', '|', '|', '332']</msg>
<status status="PASS" starttime="20231120 02:08:10.494" endtime="20231120 02:08:10.495"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:10.496" level="INFO">${dev_id} = 332</msg>
<status status="PASS" starttime="20231120 02:08:10.495" endtime="20231120 02:08:10.496"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:10.497" endtime="20231120 02:08:10.498"/>
</kw>
<status status="PASS" starttime="20231120 02:08:10.496" endtime="20231120 02:08:10.498"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:08:10.498" endtime="20231120 02:08:10.498"/>
</return>
<msg timestamp="20231120 02:08:10.499" level="INFO">${dev_id} = 332</msg>
<status status="PASS" starttime="20231120 02:08:09.732" endtime="20231120 02:08:10.499"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:10.500" endtime="20231120 02:08:10.502"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:10.503" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:10.653" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:09 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:10.502" endtime="20231120 02:08:10.653"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:10.657" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:10.653" endtime="20231120 02:08:10.657"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:10.664" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:10.658" endtime="20231120 02:08:10.664"/>
</kw>
<status status="PASS" starttime="20231120 02:08:10.500" endtime="20231120 02:08:10.664"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:10.665" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:10.665" endtime="20231120 02:08:10.665"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:10.668" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:10.666" endtime="20231120 02:08:10.669"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:10.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.669" endtime="20231120 02:08:10.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:10.674" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:10.674" endtime="20231120 02:08:10.674"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.674" endtime="20231120 02:08:10.675"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.675" endtime="20231120 02:08:10.676"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:10.676" endtime="20231120 02:08:10.676"/>
</return>
<status status="PASS" starttime="20231120 02:08:10.664" endtime="20231120 02:08:10.677"/>
</kw>
<status status="PASS" starttime="20231120 02:08:10.499" endtime="20231120 02:08:10.677"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:10.678" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:10.678" endtime="20231120 02:08:10.678"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:10.681" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:10.678" endtime="20231120 02:08:10.681"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:10.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.682" endtime="20231120 02:08:10.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:10.683" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:10.683" endtime="20231120 02:08:10.683"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.684" endtime="20231120 02:08:10.684"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.685" endtime="20231120 02:08:10.685"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:10.685" endtime="20231120 02:08:10.686"/>
</return>
<status status="PASS" starttime="20231120 02:08:10.677" endtime="20231120 02:08:10.686"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} plate ${plate_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:10.687" level="INFO">mock_device_action 332 plate 京A12345</msg>
<status status="PASS" starttime="20231120 02:08:10.687" endtime="20231120 02:08:10.687"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:10.690" level="INFO">mock_device_action 332 plate äº¬A12345</msg>
<status status="PASS" starttime="20231120 02:08:10.688" endtime="20231120 02:08:10.691"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:10.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.691" endtime="20231120 02:08:10.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:10.698" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:10.697" endtime="20231120 02:08:10.698"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.698" endtime="20231120 02:08:10.699"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:10.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:10.699" endtime="20231120 02:08:10.701"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:10.701" endtime="20231120 02:08:10.701"/>
</return>
<status status="PASS" starttime="20231120 02:08:10.686" endtime="20231120 02:08:10.701"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:10.702" endtime="20231120 02:08:10.703"/>
</kw>
<status status="PASS" starttime="20231120 02:08:10.702" endtime="20231120 02:08:10.703"/>
</kw>
<status status="PASS" starttime="20231120 02:08:09.732" endtime="20231120 02:08:10.703"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231120 02:08:16.705" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20231120 02:08:10.704" endtime="20231120 02:08:16.706"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:16.709" endtime="20231120 02:08:16.709"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:16.710" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:16.873" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:10 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:16.710" endtime="20231120 02:08:16.874"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:16.878" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:16.874" endtime="20231120 02:08:16.878"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:16.885" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:16.878" endtime="20231120 02:08:16.885"/>
</kw>
<status status="PASS" starttime="20231120 02:08:16.708" endtime="20231120 02:08:16.886"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:16.889" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231120 02:08:16.886" endtime="20231120 02:08:16.889"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:16.891" level="INFO">å¼é¨</msg>
<msg timestamp="20231120 02:08:16.891" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231120 02:08:16.889" endtime="20231120 02:08:16.891"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:16.892" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:08:16.891" endtime="20231120 02:08:16.892"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:16.893" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231120 02:08:16.892" endtime="20231120 02:08:16.893"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:16.894" endtime="20231120 02:08:16.894"/>
</kw>
<status status="PASS" starttime="20231120 02:08:16.893" endtime="20231120 02:08:16.894"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:08:16.895" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:08:16.895" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231120 02:08:16.895" endtime="20231120 02:08:16.896"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:08:16.896" endtime="20231120 02:08:16.896"/>
</return>
<msg timestamp="20231120 02:08:16.896" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231120 02:08:16.707" endtime="20231120 02:08:16.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:08:16.897" endtime="20231120 02:08:16.897"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:16.899" endtime="20231120 02:08:16.899"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:16.900" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:17.043" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:16 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:16.900" endtime="20231120 02:08:17.043"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:17.048" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:17.044" endtime="20231120 02:08:17.048"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:17.055" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:17.049" endtime="20231120 02:08:17.055"/>
</kw>
<status status="PASS" starttime="20231120 02:08:16.898" endtime="20231120 02:08:17.055"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:17.058" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231120 02:08:17.055" endtime="20231120 02:08:17.058"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:17.059" level="INFO">å³é¨</msg>
<msg timestamp="20231120 02:08:17.060" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231120 02:08:17.058" endtime="20231120 02:08:17.060"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.060" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:08:17.060" endtime="20231120 02:08:17.061"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.061" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231120 02:08:17.061" endtime="20231120 02:08:17.062"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:17.062" endtime="20231120 02:08:17.063"/>
</kw>
<status status="PASS" starttime="20231120 02:08:17.062" endtime="20231120 02:08:17.063"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:08:17.064" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:08:17.064" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231120 02:08:17.063" endtime="20231120 02:08:17.064"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:08:17.064" endtime="20231120 02:08:17.064"/>
</return>
<msg timestamp="20231120 02:08:17.065" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231120 02:08:16.898" endtime="20231120 02:08:17.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:08:17.065" endtime="20231120 02:08:17.066"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:17.068" endtime="20231120 02:08:17.069"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:17.069" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:17.213" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:17 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:17.069" endtime="20231120 02:08:17.213"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:17.218" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:17.214" endtime="20231120 02:08:17.218"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:17.226" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:17.219" endtime="20231120 02:08:17.226"/>
</kw>
<status status="PASS" starttime="20231120 02:08:17.068" endtime="20231120 02:08:17.227"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:17.228" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:17.228" endtime="20231120 02:08:17.229"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:17.233" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:17.229" endtime="20231120 02:08:17.233"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:17.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:17.233" endtime="20231120 02:08:17.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:17.238" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:17.237" endtime="20231120 02:08:17.238"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:17.238" endtime="20231120 02:08:17.239"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:17.240" endtime="20231120 02:08:17.240"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:17.240" endtime="20231120 02:08:17.241"/>
</return>
<status status="PASS" starttime="20231120 02:08:17.227" endtime="20231120 02:08:17.241"/>
</kw>
<status status="PASS" starttime="20231120 02:08:17.067" endtime="20231120 02:08:17.241"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:17.242" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:17.242" endtime="20231120 02:08:17.243"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:17.246" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:17.243" endtime="20231120 02:08:17.246"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:17.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:17.246" endtime="20231120 02:08:17.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:17.248" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:17.248" endtime="20231120 02:08:17.248"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:17.249" endtime="20231120 02:08:17.249"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:17.250" endtime="20231120 02:08:17.250"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:17.250" endtime="20231120 02:08:17.251"/>
</return>
<status status="PASS" starttime="20231120 02:08:17.241" endtime="20231120 02:08:17.251"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:17.252" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:17.252" endtime="20231120 02:08:17.252"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:17.255" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:17.252" endtime="20231120 02:08:17.255"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:17.826" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:08:17.826" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:17.255" endtime="20231120 02:08:17.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:17.827" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:08:17.826" endtime="20231120 02:08:17.827"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.827" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:17.827" endtime="20231120 02:08:17.827"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:17.828" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:17.827" endtime="20231120 02:08:17.828"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:17.828" endtime="20231120 02:08:17.828"/>
</return>
<msg timestamp="20231120 02:08:17.829" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:17.251" endtime="20231120 02:08:17.829"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:08:17.829" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:08:17.830" level="INFO">${lines} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231120 02:08:17.829" endtime="20231120 02:08:17.830"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:08:17.831" level="INFO">${line} = |    |      | 339:bg  |</msg>
<status status="PASS" starttime="20231120 02:08:17.830" endtime="20231120 02:08:17.831"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:08:17.831" level="INFO">${line_array} = ['|    |      | 339', 'bg  |']</msg>
<status status="PASS" starttime="20231120 02:08:17.831" endtime="20231120 02:08:17.831"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:08:17.832" level="INFO">${dev_name_array} = ['|', '|', '|', '339']</msg>
<status status="PASS" starttime="20231120 02:08:17.832" endtime="20231120 02:08:17.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:17.833" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231120 02:08:17.833" endtime="20231120 02:08:17.834"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:17.834" endtime="20231120 02:08:17.834"/>
</kw>
<status status="PASS" starttime="20231120 02:08:17.834" endtime="20231120 02:08:17.835"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:08:17.835" endtime="20231120 02:08:17.835"/>
</return>
<msg timestamp="20231120 02:08:17.835" level="INFO">${dev_id} = 339</msg>
<status status="PASS" starttime="20231120 02:08:17.067" endtime="20231120 02:08:17.836"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:17.838" endtime="20231120 02:08:17.840"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:17.841" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:17.991" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:17 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:17.840" endtime="20231120 02:08:17.992"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:17.995" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:17.992" endtime="20231120 02:08:17.996"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.002" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:17.996" endtime="20231120 02:08:18.003"/>
</kw>
<status status="PASS" starttime="20231120 02:08:17.837" endtime="20231120 02:08:18.003"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.004" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:18.004" endtime="20231120 02:08:18.004"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.007" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:18.004" endtime="20231120 02:08:18.007"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.008" endtime="20231120 02:08:18.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.013" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:18.012" endtime="20231120 02:08:18.013"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.013" endtime="20231120 02:08:18.014"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.015" endtime="20231120 02:08:18.015"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.016" endtime="20231120 02:08:18.016"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.003" endtime="20231120 02:08:18.016"/>
</kw>
<status status="PASS" starttime="20231120 02:08:17.836" endtime="20231120 02:08:18.016"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.017" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:18.017" endtime="20231120 02:08:18.018"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.020" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:18.018" endtime="20231120 02:08:18.021"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.021" endtime="20231120 02:08:18.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.022" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:18.022" endtime="20231120 02:08:18.022"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.023" endtime="20231120 02:08:18.023"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.024" endtime="20231120 02:08:18.024"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.024" endtime="20231120 02:08:18.024"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.016" endtime="20231120 02:08:18.024"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.026" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231120 02:08:18.025" endtime="20231120 02:08:18.026"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.029" level="INFO">mock_device_action 339 gate</msg>
<status status="PASS" starttime="20231120 02:08:18.026" endtime="20231120 02:08:18.029"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.030" endtime="20231120 02:08:18.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.036" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:18.036" endtime="20231120 02:08:18.036"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.037" endtime="20231120 02:08:18.037"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.038" endtime="20231120 02:08:18.038"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.039" endtime="20231120 02:08:18.039"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.025" endtime="20231120 02:08:18.039"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:18.040" endtime="20231120 02:08:18.040"/>
</kw>
<status status="PASS" starttime="20231120 02:08:18.039" endtime="20231120 02:08:18.040"/>
</kw>
<status status="PASS" starttime="20231120 02:08:17.066" endtime="20231120 02:08:18.041"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:18.043" endtime="20231120 02:08:18.043"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:18.044" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:18.189" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:17 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:18.044" endtime="20231120 02:08:18.190"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.194" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:18.190" endtime="20231120 02:08:18.194"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.201" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:18.194" endtime="20231120 02:08:18.202"/>
</kw>
<status status="PASS" starttime="20231120 02:08:18.042" endtime="20231120 02:08:18.202"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.203" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:18.203" endtime="20231120 02:08:18.203"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.206" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:18.204" endtime="20231120 02:08:18.207"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.207" endtime="20231120 02:08:18.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.212" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:18.211" endtime="20231120 02:08:18.212"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.213" endtime="20231120 02:08:18.213"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.214" endtime="20231120 02:08:18.214"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.214" endtime="20231120 02:08:18.215"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.202" endtime="20231120 02:08:18.215"/>
</kw>
<status status="PASS" starttime="20231120 02:08:18.042" endtime="20231120 02:08:18.215"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.216" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:18.216" endtime="20231120 02:08:18.217"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.220" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:18.217" endtime="20231120 02:08:18.220"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.220" endtime="20231120 02:08:18.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.222" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:18.221" endtime="20231120 02:08:18.222"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.222" endtime="20231120 02:08:18.223"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.223" endtime="20231120 02:08:18.224"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.224" endtime="20231120 02:08:18.224"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.215" endtime="20231120 02:08:18.225"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.226" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:18.225" endtime="20231120 02:08:18.226"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.229" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:18.226" endtime="20231120 02:08:18.229"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.801" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:08:18.802" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:18.230" endtime="20231120 02:08:18.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.802" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:08:18.802" endtime="20231120 02:08:18.802"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.803" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:18.802" endtime="20231120 02:08:18.803"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.803" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:18.803" endtime="20231120 02:08:18.804"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.804" endtime="20231120 02:08:18.804"/>
</return>
<msg timestamp="20231120 02:08:18.804" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:18.225" endtime="20231120 02:08:18.804"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:08:18.805" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:08:18.805" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:08:18.804" endtime="20231120 02:08:18.805"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:08:18.805" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:08:18.805" endtime="20231120 02:08:18.805"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:08:18.806" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231120 02:08:18.806" endtime="20231120 02:08:18.806"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:08:18.807" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231120 02:08:18.806" endtime="20231120 02:08:18.807"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:18.808" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:08:18.807" endtime="20231120 02:08:18.808"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:18.809" endtime="20231120 02:08:18.809"/>
</kw>
<status status="PASS" starttime="20231120 02:08:18.808" endtime="20231120 02:08:18.809"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:08:18.810" endtime="20231120 02:08:18.810"/>
</return>
<msg timestamp="20231120 02:08:18.811" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:08:18.041" endtime="20231120 02:08:18.811"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:18.815" endtime="20231120 02:08:18.816"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:18.816" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:18.966" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:18 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:18.816" endtime="20231120 02:08:18.966"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.970" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:18.966" endtime="20231120 02:08:18.970"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.976" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:18.970" endtime="20231120 02:08:18.976"/>
</kw>
<status status="PASS" starttime="20231120 02:08:18.813" endtime="20231120 02:08:18.976"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.978" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:18.978" endtime="20231120 02:08:18.979"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.982" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:18.979" endtime="20231120 02:08:18.982"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.982" endtime="20231120 02:08:18.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.987" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:18.987" endtime="20231120 02:08:18.987"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.987" endtime="20231120 02:08:18.988"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.988" endtime="20231120 02:08:18.989"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.989" endtime="20231120 02:08:18.989"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.977" endtime="20231120 02:08:18.989"/>
</kw>
<status status="PASS" starttime="20231120 02:08:18.811" endtime="20231120 02:08:18.990"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.991" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:18.990" endtime="20231120 02:08:18.991"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:18.994" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:18.991" endtime="20231120 02:08:18.994"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:18.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.994" endtime="20231120 02:08:18.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.996" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:18.995" endtime="20231120 02:08:18.996"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.996" endtime="20231120 02:08:18.997"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:18.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:18.997" endtime="20231120 02:08:18.998"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:18.998" endtime="20231120 02:08:18.998"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.990" endtime="20231120 02:08:18.998"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:18.999" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231120 02:08:18.999" endtime="20231120 02:08:19.000"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:19.003" level="INFO">mock_device_action 340 scale 49.21</msg>
<status status="PASS" starttime="20231120 02:08:19.000" endtime="20231120 02:08:19.003"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:19.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:19.003" endtime="20231120 02:08:19.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:19.009" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:19.009" endtime="20231120 02:08:19.009"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:19.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:19.010" endtime="20231120 02:08:19.010"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:19.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:19.011" endtime="20231120 02:08:19.011"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:19.011" endtime="20231120 02:08:19.012"/>
</return>
<status status="PASS" starttime="20231120 02:08:18.999" endtime="20231120 02:08:19.012"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:19.013" endtime="20231120 02:08:19.013"/>
</kw>
<status status="PASS" starttime="20231120 02:08:19.012" endtime="20231120 02:08:19.013"/>
</kw>
<status status="PASS" starttime="20231120 02:08:18.041" endtime="20231120 02:08:19.014"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231120 02:08:37.015" level="INFO">Slept 18 seconds</msg>
<status status="PASS" starttime="20231120 02:08:19.014" endtime="20231120 02:08:37.016"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${l_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:37.018" endtime="20231120 02:08:37.019"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:37.020" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:37.168" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:18 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:37.019" endtime="20231120 02:08:37.168"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.172" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:37.169" endtime="20231120 02:08:37.173"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:37.179" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:37.173" endtime="20231120 02:08:37.179"/>
</kw>
<status status="PASS" starttime="20231120 02:08:37.017" endtime="20231120 02:08:37.179"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.182" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231120 02:08:37.179" endtime="20231120 02:08:37.183"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:37.184" level="INFO">å¼é¨</msg>
<msg timestamp="20231120 02:08:37.184" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231120 02:08:37.183" endtime="20231120 02:08:37.185"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.185" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:08:37.185" endtime="20231120 02:08:37.186"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.186" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231120 02:08:37.186" endtime="20231120 02:08:37.186"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:37.187" endtime="20231120 02:08:37.188"/>
</kw>
<status status="PASS" starttime="20231120 02:08:37.187" endtime="20231120 02:08:37.188"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:08:37.189" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:08:37.189" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231120 02:08:37.188" endtime="20231120 02:08:37.189"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:08:37.189" endtime="20231120 02:08:37.189"/>
</return>
<msg timestamp="20231120 02:08:37.190" level="INFO">${gate_status} = 开门</msg>
<status status="PASS" starttime="20231120 02:08:37.016" endtime="20231120 02:08:37.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>开门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:08:37.190" endtime="20231120 02:08:37.191"/>
</kw>
<kw name="Get Dev Status" library="dev_res">
<var>${gate_status}</var>
<arg>${e_gate}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:37.192" endtime="20231120 02:08:37.193"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:37.193" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:37.335" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:37 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:37.193" endtime="20231120 02:08:37.336"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.340" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:37.336" endtime="20231120 02:08:37.340"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:37.346" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:37.340" endtime="20231120 02:08:37.346"/>
</kw>
<status status="PASS" starttime="20231120 02:08:37.191" endtime="20231120 02:08:37.347"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.350" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231120 02:08:37.347" endtime="20231120 02:08:37.350"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:37.352" level="INFO">å³é¨</msg>
<msg timestamp="20231120 02:08:37.352" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231120 02:08:37.351" endtime="20231120 02:08:37.352"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.353" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231120 02:08:37.353" endtime="20231120 02:08:37.353"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.354" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231120 02:08:37.353" endtime="20231120 02:08:37.354"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:37.355" endtime="20231120 02:08:37.355"/>
</kw>
<status status="PASS" starttime="20231120 02:08:37.354" endtime="20231120 02:08:37.355"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231120 02:08:37.356" level="INFO">1 lines returned</msg>
<msg timestamp="20231120 02:08:37.357" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231120 02:08:37.356" endtime="20231120 02:08:37.357"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231120 02:08:37.357" endtime="20231120 02:08:37.357"/>
</return>
<msg timestamp="20231120 02:08:37.357" level="INFO">${gate_status} = 关门</msg>
<status status="PASS" starttime="20231120 02:08:37.191" endtime="20231120 02:08:37.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${gate_status}</arg>
<arg>关门</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231120 02:08:37.358" endtime="20231120 02:08:37.358"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:37.361" endtime="20231120 02:08:37.361"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:37.362" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:37.510" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:37 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:37.362" endtime="20231120 02:08:37.510"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.514" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:37.510" endtime="20231120 02:08:37.514"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:37.520" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:37.515" endtime="20231120 02:08:37.521"/>
</kw>
<status status="PASS" starttime="20231120 02:08:37.360" endtime="20231120 02:08:37.521"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:37.522" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:37.522" endtime="20231120 02:08:37.522"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.525" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:37.522" endtime="20231120 02:08:37.525"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:37.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:37.526" endtime="20231120 02:08:37.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:37.531" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:37.530" endtime="20231120 02:08:37.531"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:37.531" endtime="20231120 02:08:37.532"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:37.532" endtime="20231120 02:08:37.533"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:37.533" endtime="20231120 02:08:37.533"/>
</return>
<status status="PASS" starttime="20231120 02:08:37.521" endtime="20231120 02:08:37.534"/>
</kw>
<status status="PASS" starttime="20231120 02:08:37.360" endtime="20231120 02:08:37.534"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:37.535" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:37.534" endtime="20231120 02:08:37.535"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.537" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:37.535" endtime="20231120 02:08:37.538"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:37.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:37.538" endtime="20231120 02:08:37.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:37.540" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:37.539" endtime="20231120 02:08:37.540"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:37.540" endtime="20231120 02:08:37.541"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:37.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:37.541" endtime="20231120 02:08:37.542"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:37.542" endtime="20231120 02:08:37.542"/>
</return>
<status status="PASS" starttime="20231120 02:08:37.534" endtime="20231120 02:08:37.542"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:37.544" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:37.543" endtime="20231120 02:08:37.544"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:37.547" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:37.544" endtime="20231120 02:08:37.547"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.109" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:08:38.110" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:37.547" endtime="20231120 02:08:38.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.111" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:08:38.110" endtime="20231120 02:08:38.111"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.112" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:38.111" endtime="20231120 02:08:38.112"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.113" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:38.112" endtime="20231120 02:08:38.113"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:38.113" endtime="20231120 02:08:38.114"/>
</return>
<msg timestamp="20231120 02:08:38.114" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:37.543" endtime="20231120 02:08:38.114"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:08:38.115" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:08:38.115" level="INFO">${lines} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231120 02:08:38.114" endtime="20231120 02:08:38.116"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:08:38.116" level="INFO">${line} = |    |      | 338:fg  |</msg>
<status status="PASS" starttime="20231120 02:08:38.116" endtime="20231120 02:08:38.116"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:08:38.117" level="INFO">${line_array} = ['|    |      | 338', 'fg  |']</msg>
<status status="PASS" starttime="20231120 02:08:38.117" endtime="20231120 02:08:38.117"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:08:38.119" level="INFO">${dev_name_array} = ['|', '|', '|', '338']</msg>
<status status="PASS" starttime="20231120 02:08:38.118" endtime="20231120 02:08:38.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:38.120" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231120 02:08:38.119" endtime="20231120 02:08:38.120"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:38.121" endtime="20231120 02:08:38.121"/>
</kw>
<status status="PASS" starttime="20231120 02:08:38.120" endtime="20231120 02:08:38.122"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:08:38.122" endtime="20231120 02:08:38.122"/>
</return>
<msg timestamp="20231120 02:08:38.123" level="INFO">${dev_id} = 338</msg>
<status status="PASS" starttime="20231120 02:08:37.359" endtime="20231120 02:08:38.123"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:38.125" endtime="20231120 02:08:38.125"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:38.126" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:38.273" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:37 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:38.125" endtime="20231120 02:08:38.273"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.276" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:38.274" endtime="20231120 02:08:38.277"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.282" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:38.277" endtime="20231120 02:08:38.283"/>
</kw>
<status status="PASS" starttime="20231120 02:08:38.124" endtime="20231120 02:08:38.283"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.284" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:38.284" endtime="20231120 02:08:38.284"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.287" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:38.284" endtime="20231120 02:08:38.287"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.287" endtime="20231120 02:08:38.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.292" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:38.291" endtime="20231120 02:08:38.292"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.292" endtime="20231120 02:08:38.293"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.293" endtime="20231120 02:08:38.294"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:38.294" endtime="20231120 02:08:38.294"/>
</return>
<status status="PASS" starttime="20231120 02:08:38.283" endtime="20231120 02:08:38.294"/>
</kw>
<status status="PASS" starttime="20231120 02:08:38.123" endtime="20231120 02:08:38.295"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.296" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:38.295" endtime="20231120 02:08:38.296"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.299" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:38.296" endtime="20231120 02:08:38.299"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.299" endtime="20231120 02:08:38.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.301" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:38.301" endtime="20231120 02:08:38.301"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.302" endtime="20231120 02:08:38.302"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.303" endtime="20231120 02:08:38.303"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:38.303" endtime="20231120 02:08:38.304"/>
</return>
<status status="PASS" starttime="20231120 02:08:38.295" endtime="20231120 02:08:38.304"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.305" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231120 02:08:38.305" endtime="20231120 02:08:38.305"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.308" level="INFO">mock_device_action 338 gate</msg>
<status status="PASS" starttime="20231120 02:08:38.305" endtime="20231120 02:08:38.308"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.308" endtime="20231120 02:08:38.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.314" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:38.314" endtime="20231120 02:08:38.314"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.315" endtime="20231120 02:08:38.315"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.316" endtime="20231120 02:08:38.316"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:38.316" endtime="20231120 02:08:38.317"/>
</return>
<status status="PASS" starttime="20231120 02:08:38.304" endtime="20231120 02:08:38.317"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:38.318" endtime="20231120 02:08:38.318"/>
</kw>
<status status="PASS" starttime="20231120 02:08:38.317" endtime="20231120 02:08:38.318"/>
</kw>
<status status="PASS" starttime="20231120 02:08:37.359" endtime="20231120 02:08:38.318"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:38.321" endtime="20231120 02:08:38.321"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:38.322" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:38.465" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:38 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:38.322" endtime="20231120 02:08:38.466"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.469" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:38.466" endtime="20231120 02:08:38.469"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.475" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:38.470" endtime="20231120 02:08:38.475"/>
</kw>
<status status="PASS" starttime="20231120 02:08:38.320" endtime="20231120 02:08:38.476"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.477" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:38.476" endtime="20231120 02:08:38.478"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.481" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:38.478" endtime="20231120 02:08:38.481"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.481" endtime="20231120 02:08:38.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.487" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:38.486" endtime="20231120 02:08:38.487"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.487" endtime="20231120 02:08:38.488"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.488" endtime="20231120 02:08:38.489"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:38.489" endtime="20231120 02:08:38.489"/>
</return>
<status status="PASS" starttime="20231120 02:08:38.476" endtime="20231120 02:08:38.489"/>
</kw>
<status status="PASS" starttime="20231120 02:08:38.320" endtime="20231120 02:08:38.489"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.490" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:38.490" endtime="20231120 02:08:38.491"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.493" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:38.491" endtime="20231120 02:08:38.493"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:38.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.494" endtime="20231120 02:08:38.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.495" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:38.495" endtime="20231120 02:08:38.496"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.496" endtime="20231120 02:08:38.497"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:38.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:38.497" endtime="20231120 02:08:38.497"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:38.498" endtime="20231120 02:08:38.498"/>
</return>
<status status="PASS" starttime="20231120 02:08:38.490" endtime="20231120 02:08:38.498"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:38.499" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:38.499" endtime="20231120 02:08:38.500"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:38.502" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231120 02:08:38.500" endtime="20231120 02:08:38.502"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.104" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+</msg>
<msg timestamp="20231120 02:08:39.105" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:38.503" endtime="20231120 02:08:39.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.106" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
|    |      | 338:fg  |
|    |      | 339:bg  |
|    |      | 335:fi  |
|    |      | 336:bi  |
|    |      | 340:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231120 02:08:39.105" endtime="20231120 02:08:39.106"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.107" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:39.106" endtime="20231120 02:08:39.107"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.108" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:39.107" endtime="20231120 02:08:39.108"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:39.108" endtime="20231120 02:08:39.108"/>
</return>
<msg timestamp="20231120 02:08:39.108" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 34 | s    | 331:fpc |
|    |      | 332:bpc |
|    |      | 333:fl  |
|    |      | 334:bl  |
|    |      | 337:fs  |
...</msg>
<status status="PASS" starttime="20231120 02:08:38.498" endtime="20231120 02:08:39.109"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:08:39.109" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231120 02:08:39.109" level="INFO">${lines} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:08:39.109" endtime="20231120 02:08:39.109"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:08:39.110" level="INFO">${line} = |    |      | 340:ss  |</msg>
<status status="PASS" starttime="20231120 02:08:39.110" endtime="20231120 02:08:39.110"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:08:39.111" level="INFO">${line_array} = ['|    |      | 340', 'ss  |']</msg>
<status status="PASS" starttime="20231120 02:08:39.111" endtime="20231120 02:08:39.111"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231120 02:08:39.112" level="INFO">${dev_name_array} = ['|', '|', '|', '340']</msg>
<status status="PASS" starttime="20231120 02:08:39.111" endtime="20231120 02:08:39.112"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:39.114" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:08:39.113" endtime="20231120 02:08:39.114"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:39.115" endtime="20231120 02:08:39.116"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.114" endtime="20231120 02:08:39.116"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231120 02:08:39.116" endtime="20231120 02:08:39.116"/>
</return>
<msg timestamp="20231120 02:08:39.117" level="INFO">${dev_id} = 340</msg>
<status status="PASS" starttime="20231120 02:08:38.319" endtime="20231120 02:08:39.117"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:39.118" endtime="20231120 02:08:39.120"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:39.120" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:39.268" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:38 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:39.120" endtime="20231120 02:08:39.268"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.271" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:39.269" endtime="20231120 02:08:39.272"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.277" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:39.272" endtime="20231120 02:08:39.278"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.118" endtime="20231120 02:08:39.278"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.279" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:39.279" endtime="20231120 02:08:39.279"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.282" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:39.280" endtime="20231120 02:08:39.283"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.283" endtime="20231120 02:08:39.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.288" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:39.288" endtime="20231120 02:08:39.288"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.288" endtime="20231120 02:08:39.289"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.289" endtime="20231120 02:08:39.290"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:39.290" endtime="20231120 02:08:39.291"/>
</return>
<status status="PASS" starttime="20231120 02:08:39.278" endtime="20231120 02:08:39.291"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.117" endtime="20231120 02:08:39.291"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.292" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:39.292" endtime="20231120 02:08:39.292"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.295" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:39.293" endtime="20231120 02:08:39.295"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.295" endtime="20231120 02:08:39.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.297" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:39.297" endtime="20231120 02:08:39.297"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.297" endtime="20231120 02:08:39.298"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.298" endtime="20231120 02:08:39.299"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:39.299" endtime="20231120 02:08:39.299"/>
</return>
<status status="PASS" starttime="20231120 02:08:39.291" endtime="20231120 02:08:39.300"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.301" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231120 02:08:39.300" endtime="20231120 02:08:39.301"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.304" level="INFO">mock_device_action 340 scale 0</msg>
<status status="PASS" starttime="20231120 02:08:39.301" endtime="20231120 02:08:39.304"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.304" endtime="20231120 02:08:39.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.310" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:39.310" endtime="20231120 02:08:39.310"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.311" endtime="20231120 02:08:39.311"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.312" endtime="20231120 02:08:39.312"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:39.312" endtime="20231120 02:08:39.312"/>
</return>
<status status="PASS" starttime="20231120 02:08:39.300" endtime="20231120 02:08:39.313"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:39.313" endtime="20231120 02:08:39.314"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.313" endtime="20231120 02:08:39.314"/>
</kw>
<status status="PASS" starttime="20231120 02:08:38.319" endtime="20231120 02:08:39.314"/>
</kw>
<status status="PASS" starttime="20231120 02:08:09.723" endtime="20231120 02:08:39.315"/>
</kw>
<kw name="Del Order Try" library="rest_res" type="TEARDOWN">
<arg>${order_number}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<kw name="Create Max Pri User" library="cli_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:39.318" endtime="20231120 02:08:39.318"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:39.319" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:39.466" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:39 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:39.319" endtime="20231120 02:08:39.466"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.471" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:39.467" endtime="20231120 02:08:39.471"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.477" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:39.471" endtime="20231120 02:08:39.477"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.317" endtime="20231120 02:08:39.478"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.479" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:39.478" endtime="20231120 02:08:39.479"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.482" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:39.479" endtime="20231120 02:08:39.482"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.483" endtime="20231120 02:08:39.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.487" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:39.487" endtime="20231120 02:08:39.488"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.488" endtime="20231120 02:08:39.488"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.489" endtime="20231120 02:08:39.489"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:39.489" endtime="20231120 02:08:39.490"/>
</return>
<status status="PASS" starttime="20231120 02:08:39.478" endtime="20231120 02:08:39.490"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.317" endtime="20231120 02:08:39.490"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rbac</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.491" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:08:39.491" endtime="20231120 02:08:39.492"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.494" level="INFO">rbac</msg>
<status status="PASS" starttime="20231120 02:08:39.492" endtime="20231120 02:08:39.494"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.495" endtime="20231120 02:08:39.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.496" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:39.496" endtime="20231120 02:08:39.497"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.497" endtime="20231120 02:08:39.497"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:39.498" endtime="20231120 02:08:39.499"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:39.499" endtime="20231120 02:08:39.499"/>
</return>
<status status="PASS" starttime="20231120 02:08:39.490" endtime="20231120 02:08:39.499"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user ${super_user_name} ${super_user_phone} 111</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.500" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:08:39.500" endtime="20231120 02:08:39.501"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.503" level="INFO">add_user su 111 111</msg>
<status status="PASS" starttime="20231120 02:08:39.501" endtime="20231120 02:08:39.503"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:39.507" level="INFO">ç¨æ·å·²å­å¨</msg>
<msg timestamp="20231120 02:08:39.507" level="INFO">${output} = ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:08:39.504" endtime="20231120 02:08:39.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.508" level="INFO">ç¨æ·å·²å­å¨
</msg>
<status status="PASS" starttime="20231120 02:08:39.508" endtime="20231120 02:08:39.508"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.509" level="INFO">${output} = \xe7\x94\xa8\xe6\x88\xb7\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231120 02:08:39.509" endtime="20231120 02:08:39.509"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:39.510" level="INFO">${output} = 用户已存在
</msg>
<status status="PASS" starttime="20231120 02:08:39.510" endtime="20231120 02:08:39.510"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:39.510" endtime="20231120 02:08:39.510"/>
</return>
<status status="PASS" starttime="20231120 02:08:39.499" endtime="20231120 02:08:39.511"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${user_list}</var>
<arg>show_users</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:39.512" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:08:39.511" endtime="20231120 02:08:39.512"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:39.515" level="INFO">show_users</msg>
<status status="PASS" starttime="20231120 02:08:39.512" endtime="20231120 02:08:39.515"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:41.848" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+</msg>
<msg timestamp="20231120 02:08:41.848" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:08:39.515" endtime="20231120 02:08:41.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:41.849" level="INFO">+----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |
+----+------+-------+----------------------------------+-------+
</msg>
<status status="PASS" starttime="20231120 02:08:41.849" endtime="20231120 02:08:41.849"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:41.850" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:08:41.850" endtime="20231120 02:08:41.850"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:41.851" level="INFO">${output} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:08:41.850" endtime="20231120 02:08:41.851"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:41.851" endtime="20231120 02:08:41.851"/>
</return>
<msg timestamp="20231120 02:08:41.851" level="INFO">${user_list} = +----+------+-------+----------------------------------+-------+
| ID | name | phone | pwd                              | roles |
+----+------+-------+----------------------------------+-------+
| ...</msg>
<status status="PASS" starttime="20231120 02:08:39.511" endtime="20231120 02:08:41.851"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${user_list}</arg>
<arg>${super_user_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231120 02:08:41.852" level="INFO">1 out of 5 lines matched</msg>
<msg timestamp="20231120 02:08:41.852" level="INFO">${lines} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:08:41.852" endtime="20231120 02:08:41.852"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231120 02:08:41.853" level="INFO">${line} = | 1  | su   | 111   | 698D51A19D8A121CE581499D7B701668 | admin |</msg>
<status status="PASS" starttime="20231120 02:08:41.852" endtime="20231120 02:08:41.853"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231120 02:08:41.853" level="INFO">${line_array} = ['', ' 1  ', ' su   ', ' 111   ', ' 698D51A19D8A121CE581499D7B701668 ', ' admin ', '']</msg>
<status status="PASS" starttime="20231120 02:08:41.853" endtime="20231120 02:08:41.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${line_array[1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231120 02:08:41.854" level="INFO">${user_id} =  1  </msg>
<status status="PASS" starttime="20231120 02:08:41.853" endtime="20231120 02:08:41.854"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_user_to_role 1 ${user_id}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:41.855" level="INFO">add_user_to_role 1  1  </msg>
<status status="PASS" starttime="20231120 02:08:41.855" endtime="20231120 02:08:41.855"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:41.860" level="INFO">add_user_to_role 1  1</msg>
<status status="PASS" starttime="20231120 02:08:41.855" endtime="20231120 02:08:41.860"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:41.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:41.861" endtime="20231120 02:08:41.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:41.874" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:41.874" endtime="20231120 02:08:41.875"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:41.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:41.875" endtime="20231120 02:08:41.876"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:41.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:41.876" endtime="20231120 02:08:41.877"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:41.877" endtime="20231120 02:08:41.877"/>
</return>
<status status="PASS" starttime="20231120 02:08:41.855" endtime="20231120 02:08:41.877"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:41.878" endtime="20231120 02:08:41.878"/>
</kw>
<status status="PASS" starttime="20231120 02:08:41.878" endtime="20231120 02:08:41.879"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.316" endtime="20231120 02:08:41.879"/>
</kw>
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231120 02:08:41.879" endtime="20231120 02:08:41.880"/>
</return>
<msg timestamp="20231120 02:08:41.880" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231120 02:08:41.880" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231120 02:08:41.879" endtime="20231120 02:08:41.880"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:08:41.881" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231120 02:08:41.881" endtime="20231120 02:08:41.882"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${token_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:08:41.884" level="INFO">${header} = {'token': 'D25E6A3FE1CC46058E289F9147B523AA'}</msg>
<status status="PASS" starttime="20231120 02:08:41.883" endtime="20231120 02:08:41.884"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:08:41.909" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'D25E6A3FE1CC46058E289F9147B523AA', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231120 02:08:41.909" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:08:41 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-jP8io3zhZbPjCq+o+suuN92WLok"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":"C1CCF80B2F0347A3BBB39D477566E080"} 
 </msg>
<msg timestamp="20231120 02:08:41.909" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:08:41.884" endtime="20231120 02:08:41.909"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:08:41.910" endtime="20231120 02:08:41.910"/>
</return>
<msg timestamp="20231120 02:08:41.910" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:08:41.882" endtime="20231120 02:08:41.910"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231120 02:08:41.911" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231120 02:08:41.910" endtime="20231120 02:08:41.912"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231120 02:08:41.912" endtime="20231120 02:08:41.912"/>
</return>
<msg timestamp="20231120 02:08:41.913" level="INFO">${token_resp} = C1CCF80B2F0347A3BBB39D477566E080</msg>
<status status="PASS" starttime="20231120 02:08:41.882" endtime="20231120 02:08:41.913"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231120 02:08:41.914" level="INFO">${token} = C1CCF80B2F0347A3BBB39D477566E080</msg>
<status status="PASS" starttime="20231120 02:08:41.913" endtime="20231120 02:08:41.914"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.316" endtime="20231120 02:08:41.914"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${del_req}</var>
<arg>order_number=${order_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:08:41.915" level="INFO">${del_req} = {'order_number': '170041723523'}</msg>
<status status="PASS" starttime="20231120 02:08:41.915" endtime="20231120 02:08:41.915"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<arg>/order/del</arg>
<arg>${del_req}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231120 02:08:41.917" level="INFO">${header} = {'token': 'C1CCF80B2F0347A3BBB39D477566E080'}</msg>
<status status="PASS" starttime="20231120 02:08:41.916" endtime="20231120 02:08:41.917"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_dic}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231120 02:08:41.939" level="INFO">POST Request : url=http://localhost:31700/api/order/del 
 path_url=/api/order/del 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'C1CCF80B2F0347A3BBB39D477566E080', 'Content-Length': '32', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "170041723523"}' 
 </msg>
<msg timestamp="20231120 02:08:41.940" level="INFO">POST Response : url=http://localhost:31700/api/order/del 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Sun, 19 Nov 2023 18:08:41 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'X-Requested-With', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231120 02:08:41.940" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231120 02:08:41.917" endtime="20231120 02:08:41.940"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231120 02:08:41.940" endtime="20231120 02:08:41.941"/>
</return>
<status status="PASS" starttime="20231120 02:08:41.916" endtime="20231120 02:08:41.941"/>
</kw>
<status status="PASS" starttime="20231120 02:08:39.315" endtime="20231120 02:08:41.941"/>
</kw>
<status status="PASS" starttime="20231120 02:07:07.632" endtime="20231120 02:08:41.941"/>
</test>
<kw name="Clear Dev Config" library="dev_res" type="TEARDOWN">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231120 02:08:41.944" endtime="20231120 02:08:41.945"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231120 02:08:41.945" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231120 02:08:42.089" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 20 02:08:39 2023 from 172.17.0.1
root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:41.945" endtime="20231120 02:08:42.089"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:42.094" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231120 02:08:42.089" endtime="20231120 02:08:42.094"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:42.099" level="INFO">root@5df78d0a6fee:~#</msg>
<status status="PASS" starttime="20231120 02:08:42.094" endtime="20231120 02:08:42.100"/>
</kw>
<status status="PASS" starttime="20231120 02:08:41.943" endtime="20231120 02:08:42.100"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:42.101" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:42.101" endtime="20231120 02:08:42.101"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:42.104" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231120 02:08:42.101" endtime="20231120 02:08:42.104"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:42.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.105" endtime="20231120 02:08:42.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:42.109" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:42.109" endtime="20231120 02:08:42.109"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:42.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.110" endtime="20231120 02:08:42.110"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:42.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.111" endtime="20231120 02:08:42.111"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:42.111" endtime="20231120 02:08:42.112"/>
</return>
<status status="PASS" starttime="20231120 02:08:42.100" endtime="20231120 02:08:42.112"/>
</kw>
<status status="PASS" starttime="20231120 02:08:41.943" endtime="20231120 02:08:42.112"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:42.113" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:42.113" endtime="20231120 02:08:42.113"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:42.116" level="INFO">device</msg>
<status status="PASS" starttime="20231120 02:08:42.114" endtime="20231120 02:08:42.116"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:42.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.116" endtime="20231120 02:08:42.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:42.118" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:42.118" endtime="20231120 02:08:42.118"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:42.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.118" endtime="20231120 02:08:42.119"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:42.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.119" endtime="20231120 02:08:42.120"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:42.120" endtime="20231120 02:08:42.120"/>
</return>
<status status="PASS" starttime="20231120 02:08:42.112" endtime="20231120 02:08:42.120"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>clear_device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:42.122" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231120 02:08:42.121" endtime="20231120 02:08:42.122"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231120 02:08:42.125" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231120 02:08:42.122" endtime="20231120 02:08:42.125"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231120 02:08:42.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.125" endtime="20231120 02:08:42.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 02:08:42.365" level="INFO"/>
<status status="PASS" starttime="20231120 02:08:42.364" endtime="20231120 02:08:42.365"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:42.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.365" endtime="20231120 02:08:42.366"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231120 02:08:42.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231120 02:08:42.366" endtime="20231120 02:08:42.367"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231120 02:08:42.367" endtime="20231120 02:08:42.367"/>
</return>
<status status="PASS" starttime="20231120 02:08:42.121" endtime="20231120 02:08:42.367"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231120 02:08:42.368" endtime="20231120 02:08:42.368"/>
</kw>
<status status="PASS" starttime="20231120 02:08:42.367" endtime="20231120 02:08:42.369"/>
</kw>
<status status="PASS" starttime="20231120 02:08:41.943" endtime="20231120 02:08:42.369"/>
</kw>
<status status="PASS" starttime="20231120 02:07:00.902" endtime="20231120 02:08:42.369"/>
</suite>
<status status="PASS" starttime="20231120 02:07:00.900" endtime="20231120 02:08:42.371"/>
</suite>
<status status="PASS" starttime="20231120 02:07:00.887" endtime="20231120 02:08:42.373"/>
</suite>
<status status="PASS" starttime="20231120 02:07:00.841" endtime="20231120 02:08:42.374"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Zhuochuangzhihui">Zhuochuangzhihui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Auto">Zhuochuangzhihui.Auto</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Test Running">Zhuochuangzhihui.Auto.Test Running</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Postive Test">Zhuochuangzhihui.Auto.Test Running.Postive Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
