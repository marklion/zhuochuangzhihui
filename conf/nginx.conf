user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
load_module "modules/ngx_http_upload_module.so";
load_module "modules/ngx_http_flv_live_module.so";

events {
    worker_connections 768;
}

rtmp {
    server {
        listen 1935;
        application live {
            live on;
        }
    }
}
http {
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    gzip on;
    client_max_body_size 200m;

    include /etc/nginx/conf.d/*.conf;
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;

        location / {
            add_header Cache-Control max-age=360000;
            root /manage_dist;
            try_files $uri $uri/ /index.html;
        }
        location /zh_rpc/ {
            if ( $request_method = 'OPTIONS' ) {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
                return 200;
            }

            proxy_hide_header 'Access-Control-Allow-Origin';
            if ( $request_method = 'POST' ) {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
            }
            proxy_pass http://127.0.0.1:8123;
        }
        location /zh_rpc_dev/ {
            if ( $request_method = 'OPTIONS' ) {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
                return 200;
            }

            proxy_hide_header 'Access-Control-Allow-Origin';
            if ( $request_method = 'POST' ) {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
            }
            proxy_pass http://127.0.0.1:8124;
        }
        location /api/ {
            if ( $request_method = 'OPTIONS' ) {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
                return 200;
            }
            proxy_pass http://127.0.0.1:8080;
        }
        location /upload/ {
            if ( $request_method = 'OPTIONS' ) {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
                return 204;
            }

            proxy_hide_header 'Access-Control-Allow-Origin';
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;

            # Pass altered request body to this location
            upload_pass @return_path;

            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /tmp;

            # Allow uploaded files to be read only by user
            upload_store_access user:r;

            # Set specified fields in request body
            upload_set_form_field "path" "$upload_tmp_path";

            upload_cleanup 400 404 499 500-505;
        }
        location @return_path {
            return 200 "$request_body";
        }
        location ^~ /wetty {
            proxy_pass http://127.0.0.1:3000/wetty;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 43200000;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
        }
        location /live {
            flv_live on;
        }
    }
}
