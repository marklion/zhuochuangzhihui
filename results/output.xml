<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20231127 15:57:28.825" rpa="false" schemaversion="4">
<suite id="s1" name="Zhuochuangzhihui" source="/Users/liuyang/work/zhuochuangzhihui">
<suite id="s1-s1" name="Auto" source="/Users/liuyang/work/zhuochuangzhihui/auto">
<suite id="s1-s1-s1" name="Test Running" source="/Users/liuyang/work/zhuochuangzhihui/auto/test_running">
<suite id="s1-s1-s1-s1" name="Postive Test" source="/Users/liuyang/work/zhuochuangzhihui/auto/test_running/postive_test.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Config Best Dev</arg>
<arg>AND</arg>
<arg>Start Mock Service</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Config Best Dev" library="dev_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:29.936" endtime="20231127 15:57:29.937"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:29.939" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:30.342" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:48:44 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:29.938" endtime="20231127 15:57:30.342"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.345" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:30.342" endtime="20231127 15:57:30.345"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.354" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:30.345" endtime="20231127 15:57:30.354"/>
</kw>
<status status="PASS" starttime="20231127 15:57:29.935" endtime="20231127 15:57:30.355"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.356" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:30.355" endtime="20231127 15:57:30.356"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.359" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:30.356" endtime="20231127 15:57:30.359"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.359" endtime="20231127 15:57:30.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.377" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.376" endtime="20231127 15:57:30.377"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.377" endtime="20231127 15:57:30.378"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.379" endtime="20231127 15:57:30.380"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.381" endtime="20231127 15:57:30.381"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.355" endtime="20231127 15:57:30.381"/>
</kw>
<status status="PASS" starttime="20231127 15:57:29.934" endtime="20231127 15:57:30.381"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.383" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:30.383" endtime="20231127 15:57:30.384"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.388" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:30.384" endtime="20231127 15:57:30.388"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.388" endtime="20231127 15:57:30.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.390" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.389" endtime="20231127 15:57:30.390"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.390" endtime="20231127 15:57:30.391"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.391" endtime="20231127 15:57:30.392"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.392" endtime="20231127 15:57:30.393"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.382" endtime="20231127 15:57:30.393"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_set s 1</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.394" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231127 15:57:30.394" endtime="20231127 15:57:30.394"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.405" level="INFO">add_set s 1</msg>
<status status="PASS" starttime="20231127 15:57:30.394" endtime="20231127 15:57:30.405"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.406" endtime="20231127 15:57:30.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.486" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.485" endtime="20231127 15:57:30.486"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.486" endtime="20231127 15:57:30.487"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.487" endtime="20231127 15:57:30.488"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.488" endtime="20231127 15:57:30.489"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.393" endtime="20231127 15:57:30.489"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fpc} '-t s' 1 s front_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.490" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231127 15:57:30.490" endtime="20231127 15:57:30.490"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.494" level="INFO">add_device fpc '-t s' 1 s front_plate_cam</msg>
<status status="PASS" starttime="20231127 15:57:30.491" endtime="20231127 15:57:30.494"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.495" endtime="20231127 15:57:30.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.581" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.580" endtime="20231127 15:57:30.581"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.581" endtime="20231127 15:57:30.582"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.582" endtime="20231127 15:57:30.583"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.584" endtime="20231127 15:57:30.584"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.489" endtime="20231127 15:57:30.584"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bpc} '-t s' 1 s back_plate_cam</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.586" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231127 15:57:30.585" endtime="20231127 15:57:30.586"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.589" level="INFO">add_device bpc '-t s' 1 s back_plate_cam</msg>
<status status="PASS" starttime="20231127 15:57:30.586" endtime="20231127 15:57:30.590"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.590" endtime="20231127 15:57:30.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.683" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.682" endtime="20231127 15:57:30.683"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.683" endtime="20231127 15:57:30.684"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.684" endtime="20231127 15:57:30.685"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.685" endtime="20231127 15:57:30.686"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.584" endtime="20231127 15:57:30.686"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fled} '-t s' 1 s front_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.687" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231127 15:57:30.687" endtime="20231127 15:57:30.688"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.691" level="INFO">add_device fl '-t s' 1 s front_led</msg>
<status status="PASS" starttime="20231127 15:57:30.688" endtime="20231127 15:57:30.691"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.691" endtime="20231127 15:57:30.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.759" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.758" endtime="20231127 15:57:30.759"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.759" endtime="20231127 15:57:30.760"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.760" endtime="20231127 15:57:30.761"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.761" endtime="20231127 15:57:30.761"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.686" endtime="20231127 15:57:30.762"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bled} '-t s' 1 s back_led</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.763" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231127 15:57:30.762" endtime="20231127 15:57:30.763"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.765" level="INFO">add_device bl '-t s' 1 s back_led</msg>
<status status="PASS" starttime="20231127 15:57:30.763" endtime="20231127 15:57:30.766"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.766" endtime="20231127 15:57:30.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.839" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.838" endtime="20231127 15:57:30.839"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.839" endtime="20231127 15:57:30.840"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.840" endtime="20231127 15:57:30.841"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.841" endtime="20231127 15:57:30.841"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.762" endtime="20231127 15:57:30.841"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fid} '-t s' 1 s front_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.842" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231127 15:57:30.842" endtime="20231127 15:57:30.843"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.846" level="INFO">add_device fi '-t s' 1 s front_id_reader</msg>
<status status="PASS" starttime="20231127 15:57:30.843" endtime="20231127 15:57:30.846"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:30.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.846" endtime="20231127 15:57:30.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.925" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:30.925" endtime="20231127 15:57:30.925"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.926" endtime="20231127 15:57:30.926"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:30.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.926" endtime="20231127 15:57:30.927"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:30.927" endtime="20231127 15:57:30.928"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.841" endtime="20231127 15:57:30.928"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bid} '-t s' 1 s back_id_reader</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:30.929" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231127 15:57:30.928" endtime="20231127 15:57:30.929"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:30.932" level="INFO">add_device bi '-t s' 1 s back_id_reader</msg>
<status status="PASS" starttime="20231127 15:57:30.929" endtime="20231127 15:57:30.932"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:30.932" endtime="20231127 15:57:31.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.023" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.023" endtime="20231127 15:57:31.024"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.024" endtime="20231127 15:57:31.024"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.025" endtime="20231127 15:57:31.025"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.026" endtime="20231127 15:57:31.026"/>
</return>
<status status="PASS" starttime="20231127 15:57:30.928" endtime="20231127 15:57:31.026"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.027" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231127 15:57:31.027" endtime="20231127 15:57:31.027"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.030" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231127 15:57:31.028" endtime="20231127 15:57:31.030"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.031" endtime="20231127 15:57:31.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.106" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.106" endtime="20231127 15:57:31.106"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.106" endtime="20231127 15:57:31.107"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.107" endtime="20231127 15:57:31.108"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.108" endtime="20231127 15:57:31.108"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.026" endtime="20231127 15:57:31.108"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_fgate} '-t s' 1 s front_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.109" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231127 15:57:31.109" endtime="20231127 15:57:31.110"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.112" level="INFO">add_device fg '-t s' 1 s front_gate</msg>
<status status="PASS" starttime="20231127 15:57:31.110" endtime="20231127 15:57:31.113"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.113" endtime="20231127 15:57:31.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.193" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.193" endtime="20231127 15:57:31.193"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.193" endtime="20231127 15:57:31.194"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.194" endtime="20231127 15:57:31.195"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.195" endtime="20231127 15:57:31.195"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.109" endtime="20231127 15:57:31.196"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_bgate} '-t s' 1 s back_gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.197" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231127 15:57:31.196" endtime="20231127 15:57:31.197"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.200" level="INFO">add_device bg '-t s' 1 s back_gate</msg>
<status status="PASS" starttime="20231127 15:57:31.197" endtime="20231127 15:57:31.200"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.200" endtime="20231127 15:57:31.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.277" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.277" endtime="20231127 15:57:31.278"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.278" endtime="20231127 15:57:31.278"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.279" endtime="20231127 15:57:31.280"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.280" endtime="20231127 15:57:31.280"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.196" endtime="20231127 15:57:31.280"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_speaker} '-t s' 1 s back_speaker</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.281" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231127 15:57:31.281" endtime="20231127 15:57:31.282"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.284" level="INFO">add_device fs '-t s' 1 s back_speaker</msg>
<status status="PASS" starttime="20231127 15:57:31.282" endtime="20231127 15:57:31.285"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.327" level="INFO">è®¾å¤å·²å­å¨</msg>
<msg timestamp="20231127 15:57:31.327" level="INFO">${output} = è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231127 15:57:31.285" endtime="20231127 15:57:31.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.328" level="INFO">è®¾å¤å·²å­å¨
</msg>
<status status="PASS" starttime="20231127 15:57:31.328" endtime="20231127 15:57:31.328"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.329" level="INFO">${output} = \xe8\xae\xbe\xe5\xa4\x87\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8
</msg>
<status status="PASS" starttime="20231127 15:57:31.328" endtime="20231127 15:57:31.329"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.330" level="INFO">${output} = 设备已存在
</msg>
<status status="PASS" starttime="20231127 15:57:31.330" endtime="20231127 15:57:31.330"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.330" endtime="20231127 15:57:31.331"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.280" endtime="20231127 15:57:31.331"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>add_device ${s_s} '-t s' 1 s scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.332" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231127 15:57:31.332" endtime="20231127 15:57:31.332"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.335" level="INFO">add_device ss '-t s' 1 s scale</msg>
<status status="PASS" starttime="20231127 15:57:31.332" endtime="20231127 15:57:31.335"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.335" endtime="20231127 15:57:31.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.412" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.411" endtime="20231127 15:57:31.412"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.412" endtime="20231127 15:57:31.413"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.413" endtime="20231127 15:57:31.414"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.414" endtime="20231127 15:57:31.414"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.331" endtime="20231127 15:57:31.414"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zczh</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.415" level="INFO">zczh</msg>
<status status="PASS" starttime="20231127 15:57:31.415" endtime="20231127 15:57:31.416"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.418" level="INFO">zczh</msg>
<status status="PASS" starttime="20231127 15:57:31.416" endtime="20231127 15:57:31.418"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.418" endtime="20231127 15:57:31.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.420" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.420" endtime="20231127 15:57:31.420"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.421" endtime="20231127 15:57:31.421"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.421" endtime="20231127 15:57:31.422"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.422" endtime="20231127 15:57:31.423"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.414" endtime="20231127 15:57:31.423"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>rule</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.424" level="INFO">rule</msg>
<status status="PASS" starttime="20231127 15:57:31.423" endtime="20231127 15:57:31.424"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.426" level="INFO">rule</msg>
<status status="PASS" starttime="20231127 15:57:31.424" endtime="20231127 15:57:31.427"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.427" endtime="20231127 15:57:31.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.429" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.428" endtime="20231127 15:57:31.429"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.429" endtime="20231127 15:57:31.430"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.430" endtime="20231127 15:57:31.430"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.430" endtime="20231127 15:57:31.431"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.423" endtime="20231127 15:57:31.431"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>set_zyzl_plugin http://192.168.0.11:5001 abc</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.432" level="INFO">set_zyzl_plugin http://192.168.0.11:5001 abc</msg>
<status status="PASS" starttime="20231127 15:57:31.432" endtime="20231127 15:57:31.432"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.435" level="INFO">set_zyzl_plugin http://192.168.0.11:5001 abc</msg>
<status status="PASS" starttime="20231127 15:57:31.432" endtime="20231127 15:57:31.435"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.436" endtime="20231127 15:57:31.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.445" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.445" endtime="20231127 15:57:31.446"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.446" endtime="20231127 15:57:31.446"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.447" endtime="20231127 15:57:31.447"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.447" endtime="20231127 15:57:31.448"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.431" endtime="20231127 15:57:31.448"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>set_ticket_prefix WR</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.449" level="INFO">set_ticket_prefix WR</msg>
<status status="PASS" starttime="20231127 15:57:31.448" endtime="20231127 15:57:31.449"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.452" level="INFO">set_ticket_prefix WR</msg>
<status status="PASS" starttime="20231127 15:57:31.449" endtime="20231127 15:57:31.452"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.453" endtime="20231127 15:57:31.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.462" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.461" endtime="20231127 15:57:31.462"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.462" endtime="20231127 15:57:31.463"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.463" endtime="20231127 15:57:31.464"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.464" endtime="20231127 15:57:31.464"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.448" endtime="20231127 15:57:31.464"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>auto_call_count 2</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.465" level="INFO">auto_call_count 2</msg>
<status status="PASS" starttime="20231127 15:57:31.465" endtime="20231127 15:57:31.466"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.468" level="INFO">auto_call_count 2</msg>
<status status="PASS" starttime="20231127 15:57:31.466" endtime="20231127 15:57:31.468"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.469" endtime="20231127 15:57:31.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.477" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.477" endtime="20231127 15:57:31.477"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.478" endtime="20231127 15:57:31.478"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.479" endtime="20231127 15:57:31.479"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.479" endtime="20231127 15:57:31.480"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.465" endtime="20231127 15:57:31.480"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zczh</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.481" level="INFO">zczh</msg>
<status status="PASS" starttime="20231127 15:57:31.481" endtime="20231127 15:57:31.481"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.484" level="INFO">zczh</msg>
<status status="PASS" starttime="20231127 15:57:31.481" endtime="20231127 15:57:31.484"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.484" endtime="20231127 15:57:31.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.486" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:31.485" endtime="20231127 15:57:31.486"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.486" endtime="20231127 15:57:31.487"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:31.487" endtime="20231127 15:57:31.488"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.488" endtime="20231127 15:57:31.488"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.480" endtime="20231127 15:57:31.488"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>bdr</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.490" level="INFO">bdr</msg>
<status status="PASS" starttime="20231127 15:57:31.489" endtime="20231127 15:57:31.490"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.493" level="INFO">bdr</msg>
<status status="PASS" starttime="20231127 15:57:31.490" endtime="20231127 15:57:31.493"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:31.623" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh
rule
auto_call_count 2
set_zyzl_plugin http://192.168.0.11:5001 abc
set_ticket_prefix WR
zczh</msg>
<msg timestamp="20231127 15:57:31.623" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231127 15:57:31.494" endtime="20231127 15:57:31.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:31.624" level="INFO">rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' front_id_reader
add_device 'bl' '-t s' '1' 's' back_led
add_device 'fl' '-t s' '1' 's' front_led
add_device 'bpc' '-t s' '1' 's' back_plate_cam
add_device 'fpc' '-t s' '1' 's' front_plate_cam
add_device 'fs' '-t s' '1' 's' back_speaker
add_device 'ss' '-t s' '1' 's' scale

zczh
rule
auto_call_count 2
set_zyzl_plugin http://192.168.0.11:5001 abc
set_ticket_prefix WR
zczh
</msg>
<status status="PASS" starttime="20231127 15:57:31.623" endtime="20231127 15:57:31.624"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.625" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231127 15:57:31.624" endtime="20231127 15:57:31.625"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:31.625" level="INFO">${output} = rbac

zczh
device
add_set s 1
add_device 'bg' '-t s' '1' 's' back_gate
add_device 'fg' '-t s' '1' 's' front_gate
add_device 'bi' '-t s' '1' 's' back_id_reader
add_device 'fi' '-t s' '1' 's' fr...</msg>
<status status="PASS" starttime="20231127 15:57:31.625" endtime="20231127 15:57:31.626"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:31.626" endtime="20231127 15:57:31.626"/>
</return>
<status status="PASS" starttime="20231127 15:57:31.489" endtime="20231127 15:57:31.626"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>reboot</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:31.629" level="INFO">reboot</msg>
<status status="PASS" starttime="20231127 15:57:31.626" endtime="20231127 15:57:31.629"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:31.630" endtime="20231127 15:57:31.630"/>
</kw>
<status status="PASS" starttime="20231127 15:57:31.629" endtime="20231127 15:57:31.630"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>4s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:57:35.633" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20231127 15:57:31.631" endtime="20231127 15:57:35.633"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_fgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:35.637" endtime="20231127 15:57:35.638"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:35.638" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:35.791" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:30 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:35.638" endtime="20231127 15:57:35.791"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:35.795" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:35.791" endtime="20231127 15:57:35.796"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:35.803" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:35.796" endtime="20231127 15:57:35.804"/>
</kw>
<status status="PASS" starttime="20231127 15:57:35.636" endtime="20231127 15:57:35.804"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:35.805" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:35.805" endtime="20231127 15:57:35.805"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:35.808" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:35.805" endtime="20231127 15:57:35.808"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:35.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:35.808" endtime="20231127 15:57:35.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:35.813" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:35.813" endtime="20231127 15:57:35.813"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:35.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:35.813" endtime="20231127 15:57:35.814"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:35.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:35.814" endtime="20231127 15:57:35.815"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:35.815" endtime="20231127 15:57:35.816"/>
</return>
<status status="PASS" starttime="20231127 15:57:35.804" endtime="20231127 15:57:35.816"/>
</kw>
<status status="PASS" starttime="20231127 15:57:35.636" endtime="20231127 15:57:35.816"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:35.817" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:35.817" endtime="20231127 15:57:35.817"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:35.820" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:35.818" endtime="20231127 15:57:35.820"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:35.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:35.820" endtime="20231127 15:57:35.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:35.822" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:35.821" endtime="20231127 15:57:35.822"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:35.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:35.822" endtime="20231127 15:57:35.823"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:35.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:35.823" endtime="20231127 15:57:35.824"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:35.824" endtime="20231127 15:57:35.824"/>
</return>
<status status="PASS" starttime="20231127 15:57:35.816" endtime="20231127 15:57:35.824"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:35.825" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:35.825" endtime="20231127 15:57:35.826"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:35.828" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:35.826" endtime="20231127 15:57:35.828"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.408" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:57:36.408" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:35.828" endtime="20231127 15:57:36.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.409" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:57:36.409" endtime="20231127 15:57:36.409"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.410" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:36.409" endtime="20231127 15:57:36.410"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.410" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:36.410" endtime="20231127 15:57:36.410"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:36.411" endtime="20231127 15:57:36.411"/>
</return>
<msg timestamp="20231127 15:57:36.411" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:35.824" endtime="20231127 15:57:36.411"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:57:36.412" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:57:36.412" level="INFO">${lines} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:57:36.411" endtime="20231127 15:57:36.412"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:36.412" level="INFO">${line} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:57:36.412" endtime="20231127 15:57:36.413"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:57:36.413" level="INFO">${line_array} = ['|    |      | 168', 'fg  |']</msg>
<status status="PASS" starttime="20231127 15:57:36.413" endtime="20231127 15:57:36.414"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:57:36.415" level="INFO">${dev_name_array} = ['|', '|', '|', '168']</msg>
<status status="PASS" starttime="20231127 15:57:36.414" endtime="20231127 15:57:36.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:36.416" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:57:36.415" endtime="20231127 15:57:36.416"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:36.416" endtime="20231127 15:57:36.417"/>
</kw>
<status status="PASS" starttime="20231127 15:57:36.416" endtime="20231127 15:57:36.417"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:57:36.417" endtime="20231127 15:57:36.418"/>
</return>
<msg timestamp="20231127 15:57:36.418" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:57:35.635" endtime="20231127 15:57:36.419"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:36.422" endtime="20231127 15:57:36.423"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:36.423" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:36.577" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:35 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:36.423" endtime="20231127 15:57:36.577"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.581" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:36.577" endtime="20231127 15:57:36.582"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.588" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:36.582" endtime="20231127 15:57:36.589"/>
</kw>
<status status="PASS" starttime="20231127 15:57:36.420" endtime="20231127 15:57:36.589"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.590" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:36.590" endtime="20231127 15:57:36.590"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.593" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:36.590" endtime="20231127 15:57:36.593"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.594" endtime="20231127 15:57:36.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.599" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:36.599" endtime="20231127 15:57:36.599"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.600" endtime="20231127 15:57:36.600"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.601" endtime="20231127 15:57:36.601"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:36.601" endtime="20231127 15:57:36.601"/>
</return>
<status status="PASS" starttime="20231127 15:57:36.589" endtime="20231127 15:57:36.602"/>
</kw>
<status status="PASS" starttime="20231127 15:57:36.419" endtime="20231127 15:57:36.602"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.603" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:36.602" endtime="20231127 15:57:36.603"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.605" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:36.603" endtime="20231127 15:57:36.606"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.606" endtime="20231127 15:57:36.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.608" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:36.607" endtime="20231127 15:57:36.608"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.608" endtime="20231127 15:57:36.609"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.609" endtime="20231127 15:57:36.609"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:36.610" endtime="20231127 15:57:36.610"/>
</return>
<status status="PASS" starttime="20231127 15:57:36.602" endtime="20231127 15:57:36.610"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.611" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:57:36.611" endtime="20231127 15:57:36.611"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.614" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:57:36.612" endtime="20231127 15:57:36.614"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.614" endtime="20231127 15:57:36.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.625" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:36.624" endtime="20231127 15:57:36.625"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.625" endtime="20231127 15:57:36.626"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.626" endtime="20231127 15:57:36.627"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:36.627" endtime="20231127 15:57:36.627"/>
</return>
<status status="PASS" starttime="20231127 15:57:36.610" endtime="20231127 15:57:36.627"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:36.628" endtime="20231127 15:57:36.628"/>
</kw>
<status status="PASS" starttime="20231127 15:57:36.628" endtime="20231127 15:57:36.629"/>
</kw>
<status status="PASS" starttime="20231127 15:57:35.634" endtime="20231127 15:57:36.629"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_bgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:36.631" endtime="20231127 15:57:36.631"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:36.632" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:36.776" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:36 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:36.632" endtime="20231127 15:57:36.777"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.781" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:36.777" endtime="20231127 15:57:36.781"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.788" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:36.781" endtime="20231127 15:57:36.788"/>
</kw>
<status status="PASS" starttime="20231127 15:57:36.630" endtime="20231127 15:57:36.788"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.789" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:36.789" endtime="20231127 15:57:36.789"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.792" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:36.790" endtime="20231127 15:57:36.792"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.793" endtime="20231127 15:57:36.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.798" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:36.797" endtime="20231127 15:57:36.798"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.798" endtime="20231127 15:57:36.799"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.799" endtime="20231127 15:57:36.800"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:36.800" endtime="20231127 15:57:36.800"/>
</return>
<status status="PASS" starttime="20231127 15:57:36.788" endtime="20231127 15:57:36.801"/>
</kw>
<status status="PASS" starttime="20231127 15:57:36.630" endtime="20231127 15:57:36.801"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.802" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:36.801" endtime="20231127 15:57:36.802"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.804" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:36.802" endtime="20231127 15:57:36.805"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:36.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.805" endtime="20231127 15:57:36.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.807" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:36.806" endtime="20231127 15:57:36.807"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.807" endtime="20231127 15:57:36.808"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:36.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:36.808" endtime="20231127 15:57:36.808"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:36.809" endtime="20231127 15:57:36.809"/>
</return>
<status status="PASS" starttime="20231127 15:57:36.801" endtime="20231127 15:57:36.809"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:36.810" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:36.810" endtime="20231127 15:57:36.810"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:36.813" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:36.811" endtime="20231127 15:57:36.813"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:37.376" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:57:37.377" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:36.814" endtime="20231127 15:57:37.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:37.377" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:57:37.377" endtime="20231127 15:57:37.377"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.378" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:37.378" endtime="20231127 15:57:37.378"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.379" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:37.378" endtime="20231127 15:57:37.379"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:37.379" endtime="20231127 15:57:37.379"/>
</return>
<msg timestamp="20231127 15:57:37.379" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:36.809" endtime="20231127 15:57:37.379"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:57:37.380" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:57:37.380" level="INFO">${lines} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:57:37.379" endtime="20231127 15:57:37.380"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:37.381" level="INFO">${line} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:57:37.380" endtime="20231127 15:57:37.381"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:57:37.381" level="INFO">${line_array} = ['|    |      | 169', 'bg  |']</msg>
<status status="PASS" starttime="20231127 15:57:37.381" endtime="20231127 15:57:37.382"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:57:37.383" level="INFO">${dev_name_array} = ['|', '|', '|', '169']</msg>
<status status="PASS" starttime="20231127 15:57:37.382" endtime="20231127 15:57:37.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:37.386" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:57:37.384" endtime="20231127 15:57:37.386"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:37.387" endtime="20231127 15:57:37.387"/>
</kw>
<status status="PASS" starttime="20231127 15:57:37.386" endtime="20231127 15:57:37.388"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:57:37.388" endtime="20231127 15:57:37.388"/>
</return>
<msg timestamp="20231127 15:57:37.389" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:57:36.630" endtime="20231127 15:57:37.389"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:37.391" endtime="20231127 15:57:37.392"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:37.393" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:37.543" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:36 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:37.392" endtime="20231127 15:57:37.543"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:37.547" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:37.543" endtime="20231127 15:57:37.548"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:37.554" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:37.548" endtime="20231127 15:57:37.554"/>
</kw>
<status status="PASS" starttime="20231127 15:57:37.390" endtime="20231127 15:57:37.554"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:37.555" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:37.555" endtime="20231127 15:57:37.556"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:37.559" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:37.556" endtime="20231127 15:57:37.560"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:37.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.560" endtime="20231127 15:57:37.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:37.565" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:37.564" endtime="20231127 15:57:37.565"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.565" endtime="20231127 15:57:37.566"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.566" endtime="20231127 15:57:37.567"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:37.567" endtime="20231127 15:57:37.567"/>
</return>
<status status="PASS" starttime="20231127 15:57:37.555" endtime="20231127 15:57:37.568"/>
</kw>
<status status="PASS" starttime="20231127 15:57:37.389" endtime="20231127 15:57:37.568"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:37.569" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:37.568" endtime="20231127 15:57:37.569"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:37.572" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:37.569" endtime="20231127 15:57:37.572"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:37.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.572" endtime="20231127 15:57:37.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:37.574" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:37.573" endtime="20231127 15:57:37.574"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.574" endtime="20231127 15:57:37.575"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.575" endtime="20231127 15:57:37.575"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:37.576" endtime="20231127 15:57:37.576"/>
</return>
<status status="PASS" starttime="20231127 15:57:37.568" endtime="20231127 15:57:37.576"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:37.577" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:57:37.577" endtime="20231127 15:57:37.577"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:37.580" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:57:37.578" endtime="20231127 15:57:37.581"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:37.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.581" endtime="20231127 15:57:37.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:37.587" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:37.587" endtime="20231127 15:57:37.587"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.588" endtime="20231127 15:57:37.588"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:37.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:37.589" endtime="20231127 15:57:37.589"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:37.590" endtime="20231127 15:57:37.590"/>
</return>
<status status="PASS" starttime="20231127 15:57:37.576" endtime="20231127 15:57:37.590"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:37.591" endtime="20231127 15:57:37.591"/>
</kw>
<status status="PASS" starttime="20231127 15:57:37.590" endtime="20231127 15:57:37.591"/>
</kw>
<status status="PASS" starttime="20231127 15:57:36.629" endtime="20231127 15:57:37.591"/>
</kw>
<status status="PASS" starttime="20231127 15:57:29.933" endtime="20231127 15:57:37.592"/>
</kw>
<kw name="Start Mock Service" library="rest_res">
<kw name="Start Process" library="Process">
<arg>python auto/library/mock_server.py</arg>
<arg>shell=True</arg>
<arg>alias=mock_server_process</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20231127 15:57:37.593" level="INFO">Starting process:
python auto/library/mock_server.py</msg>
<status status="PASS" starttime="20231127 15:57:37.592" endtime="20231127 15:57:37.599"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:57:38.603" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20231127 15:57:37.601" endtime="20231127 15:57:38.603"/>
</kw>
<status status="PASS" starttime="20231127 15:57:37.592" endtime="20231127 15:57:38.604"/>
</kw>
<status status="PASS" starttime="20231127 15:57:29.932" endtime="20231127 15:57:38.605"/>
</kw>
<test id="s1-s1-s1-s1-t1" name="Only Scale Full Flow" line="42">
<kw name="Create A Order For Scale" type="SETUP">
<kw name="Del Exist Order" library="order_opt">
<kw name="Search Order" library="order_opt">
<var>${plate_result}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.612" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231127 15:57:38.611" endtime="20231127 15:57:38.612"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<return>
<value>${super_user_phone}</value>
<value>${super_user_pwd}</value>
<status status="PASS" starttime="20231127 15:57:38.619" endtime="20231127 15:57:38.620"/>
</return>
<msg timestamp="20231127 15:57:38.620" level="INFO">${user_phone} = 111</msg>
<msg timestamp="20231127 15:57:38.620" level="INFO">${user_pwd} = 698D51A19D8A121CE581499D7B701668</msg>
<status status="PASS" starttime="20231127 15:57:38.618" endtime="20231127 15:57:38.620"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.621" level="INFO">${login_data} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231127 15:57:38.621" endtime="20231127 15:57:38.621"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.623" level="INFO">${header} = {'token': ''}</msg>
<status status="PASS" starttime="20231127 15:57:38.622" endtime="20231127 15:57:38.624"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.624" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:57:38.624" endtime="20231127 15:57:38.625"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:57:38.626" level="INFO">Length is 2</msg>
<msg timestamp="20231127 15:57:38.626" level="INFO">${req_len} = 2</msg>
<status status="PASS" starttime="20231127 15:57:38.625" endtime="20231127 15:57:38.626"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:57:38.627" level="INFO">${req_json} = {'phone': '111', 'pwd': '698D51A19D8A121CE581499D7B701668'}</msg>
<status status="PASS" starttime="20231127 15:57:38.626" endtime="20231127 15:57:38.627"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:57:38.692" level="INFO">POST Request : url=http://localhost:31700/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"phone": "111", "pwd": "698D51A19D8A121CE581499D7B701668"}' 
 </msg>
<msg timestamp="20231127 15:57:38.693" level="INFO">POST Response : url=http://localhost:31700/api/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:57:38 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '58', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3a-hODB5veLpsy3R5lVz7JSVDRV2fg"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":"6562763668CC4E93AAFB5CB148CD3984"} 
 </msg>
<msg timestamp="20231127 15:57:38.693" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.628" endtime="20231127 15:57:38.693"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:57:38.693" endtime="20231127 15:57:38.694"/>
</return>
<msg timestamp="20231127 15:57:38.694" level="INFO">${login_resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.622" endtime="20231127 15:57:38.694"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:38.695" level="INFO">${login_msg} = </msg>
<status status="PASS" starttime="20231127 15:57:38.694" endtime="20231127 15:57:38.696"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:57:38.696" endtime="20231127 15:57:38.697"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:57:38.697" endtime="20231127 15:57:38.697"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:38.696" endtime="20231127 15:57:38.697"/>
</branch>
<status status="PASS" starttime="20231127 15:57:38.696" endtime="20231127 15:57:38.698"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:38.699" level="INFO">${token_resp} = 6562763668CC4E93AAFB5CB148CD3984</msg>
<status status="PASS" starttime="20231127 15:57:38.698" endtime="20231127 15:57:38.699"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231127 15:57:38.700" level="INFO">${token} = 6562763668CC4E93AAFB5CB148CD3984</msg>
<status status="PASS" starttime="20231127 15:57:38.699" endtime="20231127 15:57:38.700"/>
</kw>
<status status="PASS" starttime="20231127 15:57:38.614" endtime="20231127 15:57:38.700"/>
</branch>
<status status="PASS" starttime="20231127 15:57:38.614" endtime="20231127 15:57:38.700"/>
</if>
<status status="PASS" starttime="20231127 15:57:38.613" endtime="20231127 15:57:38.700"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.701" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:57:38.701" endtime="20231127 15:57:38.702"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.702" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:57:38.702" endtime="20231127 15:57:38.703"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:57:38.703" level="INFO">Length is 3</msg>
<msg timestamp="20231127 15:57:38.703" level="INFO">${req_len} = 3</msg>
<status status="PASS" starttime="20231127 15:57:38.703" endtime="20231127 15:57:38.704"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:57:38.704" level="INFO">${req_json} = {'plate_number': '', 'driver_phone': '', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231127 15:57:38.704" endtime="20231127 15:57:38.705"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:57:38.731" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '59', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "", "exp_status": 100}' 
 </msg>
<msg timestamp="20231127 15:57:38.732" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:57:38 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1a-cDYBqJ/Iqmf1jbwRIjDduJ9P1Vo"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":[]} 
 </msg>
<msg timestamp="20231127 15:57:38.732" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.705" endtime="20231127 15:57:38.732"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:57:38.732" endtime="20231127 15:57:38.732"/>
</return>
<msg timestamp="20231127 15:57:38.733" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.700" endtime="20231127 15:57:38.733"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:57:38.734" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:57:38.733" endtime="20231127 15:57:38.734"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:57:38.735" endtime="20231127 15:57:38.735"/>
</return>
<msg timestamp="20231127 15:57:38.736" level="INFO">${search_result} = []</msg>
<status status="PASS" starttime="20231127 15:57:38.613" endtime="20231127 15:57:38.736"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231127 15:57:38.736" endtime="20231127 15:57:38.736"/>
</return>
<msg timestamp="20231127 15:57:38.736" level="INFO">${plate_result} = []</msg>
<status status="PASS" starttime="20231127 15:57:38.610" endtime="20231127 15:57:38.737"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${plate_result_length}</var>
<arg>${plate_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:57:38.737" level="INFO">Length is 0</msg>
<msg timestamp="20231127 15:57:38.738" level="INFO">${plate_result_length} = 0</msg>
<status status="PASS" starttime="20231127 15:57:38.737" endtime="20231127 15:57:38.738"/>
</kw>
<for flavor="IN">
<var>${order}</var>
<value>@{plate_result}</value>
<iter>
<var name="${order}"/>
<kw name="Del Order" library="order_opt">
<arg>${order}[order_number]</arg>
<status status="NOT RUN" starttime="20231127 15:57:38.739" endtime="20231127 15:57:38.739"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:38.738" endtime="20231127 15:57:38.739"/>
</iter>
<status status="NOT RUN" starttime="20231127 15:57:38.738" endtime="20231127 15:57:38.739"/>
</for>
<status status="PASS" starttime="20231127 15:57:38.607" endtime="20231127 15:57:38.739"/>
</kw>
<kw name="Add Order Common" library="order_opt">
<var>${on}</var>
<arg>plate_no=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>driver_id=${driver_id}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<arg>driver_name=${driver_name}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${order_data}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>company_name=${company_name}</arg>
<arg>stuff_name=${stuff_name}</arg>
<arg>driver_id=${driver_id}</arg>
<arg>driver_name=${driver_name}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.742" level="INFO">${order_data} = {'plate_number': '京A12345', 'driver_phone': '18811111111', 'company_name': '京东', 'stuff_name': 'LNG', 'driver_id': '123456789012345678', 'driver_name': '张三'}</msg>
<status status="PASS" starttime="20231127 15:57:38.741" endtime="20231127 15:57:38.742"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/add</arg>
<arg>${order_data}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<status status="NOT RUN" starttime="20231127 15:57:38.744" endtime="20231127 15:57:38.744"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.744" endtime="20231127 15:57:38.745"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:57:38.745" endtime="20231127 15:57:38.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.745" endtime="20231127 15:57:38.746"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:57:38.746" endtime="20231127 15:57:38.746"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:57:38.746" endtime="20231127 15:57:38.747"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:38.746" endtime="20231127 15:57:38.747"/>
</branch>
<status status="NOT RUN" starttime="20231127 15:57:38.746" endtime="20231127 15:57:38.747"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.747" endtime="20231127 15:57:38.747"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.747" endtime="20231127 15:57:38.748"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:38.744" endtime="20231127 15:57:38.748"/>
</branch>
<status status="PASS" starttime="20231127 15:57:38.744" endtime="20231127 15:57:38.748"/>
</if>
<status status="PASS" starttime="20231127 15:57:38.743" endtime="20231127 15:57:38.748"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.749" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:57:38.749" endtime="20231127 15:57:38.749"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.750" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:57:38.750" endtime="20231127 15:57:38.750"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:57:38.751" level="INFO">Length is 6</msg>
<msg timestamp="20231127 15:57:38.751" level="INFO">${req_len} = 6</msg>
<status status="PASS" starttime="20231127 15:57:38.750" endtime="20231127 15:57:38.751"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:57:38.752" level="INFO">${req_json} = {'plate_number': '京A12345', 'driver_phone': '18811111111', 'company_name': '京东', 'stuff_name': 'LNG', 'driver_id': '123456789012345678', 'driver_name': '张三'}</msg>
<status status="PASS" starttime="20231127 15:57:38.751" endtime="20231127 15:57:38.752"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:57:38.815" level="INFO">POST Request : url=http://localhost:31700/api/order/add 
 path_url=/api/order/add 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '182', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "\\u4eacA12345", "driver_phone": "18811111111", "company_name": "\\u4eac\\u4e1c", "stuff_name": "LNG", "driver_id": "123456789012345678", "driver_name": "\\u5f20\\u4e09"}' 
 </msg>
<msg timestamp="20231127 15:57:38.815" level="INFO">POST Response : url=http://localhost:31700/api/order/add 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:57:38 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231127 15:57:38.815" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.752" endtime="20231127 15:57:38.816"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:57:38.816" endtime="20231127 15:57:38.816"/>
</return>
<msg timestamp="20231127 15:57:38.816" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.748" endtime="20231127 15:57:38.816"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:57:38.818" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:57:38.817" endtime="20231127 15:57:38.818"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:57:38.818" endtime="20231127 15:57:38.818"/>
</return>
<status status="PASS" starttime="20231127 15:57:38.743" endtime="20231127 15:57:38.819"/>
</kw>
<kw name="Search Order" library="order_opt">
<var>${driver_result}</var>
<arg>driver_phone=${driver_phone}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>plate_number=${plate_no}</arg>
<arg>driver_phone=${driver_phone}</arg>
<arg>exp_status=${100}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.821" level="INFO">${search_condition} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231127 15:57:38.820" endtime="20231127 15:57:38.821"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/search</arg>
<arg>${search_condition}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<status status="NOT RUN" starttime="20231127 15:57:38.823" endtime="20231127 15:57:38.823"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.824" endtime="20231127 15:57:38.824"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:57:38.824" endtime="20231127 15:57:38.824"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.825" endtime="20231127 15:57:38.825"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:57:38.825" endtime="20231127 15:57:38.826"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:57:38.826" endtime="20231127 15:57:38.826"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:38.825" endtime="20231127 15:57:38.826"/>
</branch>
<status status="NOT RUN" starttime="20231127 15:57:38.825" endtime="20231127 15:57:38.826"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.826" endtime="20231127 15:57:38.827"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231127 15:57:38.827" endtime="20231127 15:57:38.827"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:38.823" endtime="20231127 15:57:38.827"/>
</branch>
<status status="PASS" starttime="20231127 15:57:38.823" endtime="20231127 15:57:38.827"/>
</if>
<status status="PASS" starttime="20231127 15:57:38.822" endtime="20231127 15:57:38.827"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.829" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:57:38.828" endtime="20231127 15:57:38.829"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:38.830" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:57:38.829" endtime="20231127 15:57:38.830"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:57:38.831" level="INFO">Length is 3</msg>
<msg timestamp="20231127 15:57:38.831" level="INFO">${req_len} = 3</msg>
<status status="PASS" starttime="20231127 15:57:38.830" endtime="20231127 15:57:38.831"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:57:38.832" level="INFO">${req_json} = {'plate_number': '', 'driver_phone': '18811111111', 'exp_status': 100}</msg>
<status status="PASS" starttime="20231127 15:57:38.831" endtime="20231127 15:57:38.832"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:57:38.869" level="INFO">POST Request : url=http://localhost:31700/api/order/search 
 path_url=/api/order/search 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"plate_number": "", "driver_phone": "18811111111", "exp_status": 100}' 
 </msg>
<msg timestamp="20231127 15:57:38.870" level="INFO">POST Response : url=http://localhost:31700/api/order/search 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:57:38 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '577', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"241-9fuVG5pJ0Eqgzj98D6cc0G/uexU"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":[{"id":109,"order_number":"1701071858109","plate_number":"京A12345","back_plate_number":"","driver_name":"张三","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":0,"m_weight":0,"enter_weight":0,"reg_info":{"operator_name":"","operator_time":""},"call_info":{"operator_name":"","operator_time":""},"confirm_info":{"operator_name":"","operator_time":""},"seal_no":"","history_records":[],"order_attachs":[],"p_time":"","m_time":"","is_sale":false,"status":1,"company_name":"京东","stuff_from":"","reg_no":0}]} 
 </msg>
<msg timestamp="20231127 15:57:38.870" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.832" endtime="20231127 15:57:38.870"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:57:38.870" endtime="20231127 15:57:38.871"/>
</return>
<msg timestamp="20231127 15:57:38.871" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:38.828" endtime="20231127 15:57:38.871"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:57:38.873" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:57:38.872" endtime="20231127 15:57:38.873"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:57:38.873" endtime="20231127 15:57:38.874"/>
</return>
<msg timestamp="20231127 15:57:38.875" level="INFO">${search_result} = [{'id': 109, 'order_number': '1701071858109', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '张三', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': '...</msg>
<status status="PASS" starttime="20231127 15:57:38.822" endtime="20231127 15:57:38.875"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231127 15:57:38.875" endtime="20231127 15:57:38.875"/>
</return>
<msg timestamp="20231127 15:57:38.875" level="INFO">${driver_result} = [{'id': 109, 'order_number': '1701071858109', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '张三', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': '...</msg>
<status status="PASS" starttime="20231127 15:57:38.820" endtime="20231127 15:57:38.875"/>
</kw>
<return>
<value>${driver_result}[0][order_number]</value>
<status status="PASS" starttime="20231127 15:57:38.876" endtime="20231127 15:57:38.876"/>
</return>
<msg timestamp="20231127 15:57:38.876" level="INFO">${on} = 1701071858109</msg>
<status status="PASS" starttime="20231127 15:57:38.740" endtime="20231127 15:57:38.877"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${order_number}</arg>
<arg>${on}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231127 15:57:38.877" level="INFO">${order_number} = 1701071858109</msg>
<status status="PASS" starttime="20231127 15:57:38.877" endtime="20231127 15:57:38.878"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_fgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:38.880" endtime="20231127 15:57:38.881"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:38.881" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:39.031" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:37 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:38.881" endtime="20231127 15:57:39.031"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.036" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:39.031" endtime="20231127 15:57:39.036"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.043" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:39.036" endtime="20231127 15:57:39.043"/>
</kw>
<status status="PASS" starttime="20231127 15:57:38.879" endtime="20231127 15:57:39.043"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.044" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:39.044" endtime="20231127 15:57:39.045"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.048" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:39.045" endtime="20231127 15:57:39.048"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.049" endtime="20231127 15:57:39.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.054" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:39.053" endtime="20231127 15:57:39.054"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.055" endtime="20231127 15:57:39.055"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.055" endtime="20231127 15:57:39.056"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:39.056" endtime="20231127 15:57:39.057"/>
</return>
<status status="PASS" starttime="20231127 15:57:39.044" endtime="20231127 15:57:39.057"/>
</kw>
<status status="PASS" starttime="20231127 15:57:38.879" endtime="20231127 15:57:39.057"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.058" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:39.058" endtime="20231127 15:57:39.058"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.061" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:39.059" endtime="20231127 15:57:39.061"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.061" endtime="20231127 15:57:39.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.063" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:39.062" endtime="20231127 15:57:39.063"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.063" endtime="20231127 15:57:39.064"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.064" endtime="20231127 15:57:39.065"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:39.065" endtime="20231127 15:57:39.065"/>
</return>
<status status="PASS" starttime="20231127 15:57:39.057" endtime="20231127 15:57:39.065"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.067" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:39.066" endtime="20231127 15:57:39.067"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.070" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:39.067" endtime="20231127 15:57:39.070"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.635" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:57:39.635" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:39.071" endtime="20231127 15:57:39.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.636" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:57:39.635" endtime="20231127 15:57:39.636"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.637" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:39.636" endtime="20231127 15:57:39.638"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.638" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:39.638" endtime="20231127 15:57:39.639"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:39.639" endtime="20231127 15:57:39.639"/>
</return>
<msg timestamp="20231127 15:57:39.639" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:39.066" endtime="20231127 15:57:39.640"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:57:39.641" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:57:39.641" level="INFO">${lines} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:57:39.640" endtime="20231127 15:57:39.641"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:39.642" level="INFO">${line} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:57:39.641" endtime="20231127 15:57:39.642"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:57:39.642" level="INFO">${line_array} = ['|    |      | 168', 'fg  |']</msg>
<status status="PASS" starttime="20231127 15:57:39.642" endtime="20231127 15:57:39.642"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:57:39.644" level="INFO">${dev_name_array} = ['|', '|', '|', '168']</msg>
<status status="PASS" starttime="20231127 15:57:39.643" endtime="20231127 15:57:39.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:39.645" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:57:39.644" endtime="20231127 15:57:39.645"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:39.645" endtime="20231127 15:57:39.646"/>
</kw>
<status status="PASS" starttime="20231127 15:57:39.645" endtime="20231127 15:57:39.646"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:57:39.646" endtime="20231127 15:57:39.647"/>
</return>
<msg timestamp="20231127 15:57:39.647" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:57:38.878" endtime="20231127 15:57:39.647"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:39.649" endtime="20231127 15:57:39.650"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:39.651" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:39.820" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:39 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:39.650" endtime="20231127 15:57:39.820"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.825" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:39.821" endtime="20231127 15:57:39.825"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.831" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:39.825" endtime="20231127 15:57:39.831"/>
</kw>
<status status="PASS" starttime="20231127 15:57:39.648" endtime="20231127 15:57:39.832"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.833" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:39.833" endtime="20231127 15:57:39.833"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.837" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:39.833" endtime="20231127 15:57:39.837"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.837" endtime="20231127 15:57:39.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.843" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:39.842" endtime="20231127 15:57:39.843"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.843" endtime="20231127 15:57:39.844"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.844" endtime="20231127 15:57:39.845"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:39.845" endtime="20231127 15:57:39.845"/>
</return>
<status status="PASS" starttime="20231127 15:57:39.832" endtime="20231127 15:57:39.846"/>
</kw>
<status status="PASS" starttime="20231127 15:57:39.647" endtime="20231127 15:57:39.846"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.847" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:39.846" endtime="20231127 15:57:39.847"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.851" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:39.848" endtime="20231127 15:57:39.851"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.851" endtime="20231127 15:57:39.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.853" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:39.853" endtime="20231127 15:57:39.854"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.854" endtime="20231127 15:57:39.855"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.855" endtime="20231127 15:57:39.855"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:39.856" endtime="20231127 15:57:39.856"/>
</return>
<status status="PASS" starttime="20231127 15:57:39.846" endtime="20231127 15:57:39.856"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.857" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:57:39.857" endtime="20231127 15:57:39.858"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:39.860" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:57:39.858" endtime="20231127 15:57:39.861"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:39.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.861" endtime="20231127 15:57:39.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:39.867" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:39.867" endtime="20231127 15:57:39.868"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.868" endtime="20231127 15:57:39.869"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:39.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:39.869" endtime="20231127 15:57:39.869"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:39.870" endtime="20231127 15:57:39.870"/>
</return>
<status status="PASS" starttime="20231127 15:57:39.856" endtime="20231127 15:57:39.870"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:39.871" endtime="20231127 15:57:39.872"/>
</kw>
<status status="PASS" starttime="20231127 15:57:39.870" endtime="20231127 15:57:39.872"/>
</kw>
<status status="PASS" starttime="20231127 15:57:38.878" endtime="20231127 15:57:39.872"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${s_bgate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:39.875" endtime="20231127 15:57:39.876"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:39.876" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:40.022" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:39 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:39.876" endtime="20231127 15:57:40.023"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.027" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:40.023" endtime="20231127 15:57:40.027"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.034" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:40.027" endtime="20231127 15:57:40.034"/>
</kw>
<status status="PASS" starttime="20231127 15:57:39.875" endtime="20231127 15:57:40.034"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.036" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:40.035" endtime="20231127 15:57:40.036"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.039" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:40.037" endtime="20231127 15:57:40.039"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.040" endtime="20231127 15:57:40.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.045" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:40.044" endtime="20231127 15:57:40.045"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.045" endtime="20231127 15:57:40.046"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.046" endtime="20231127 15:57:40.047"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:40.047" endtime="20231127 15:57:40.047"/>
</return>
<status status="PASS" starttime="20231127 15:57:40.034" endtime="20231127 15:57:40.047"/>
</kw>
<status status="PASS" starttime="20231127 15:57:39.874" endtime="20231127 15:57:40.047"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.049" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:40.048" endtime="20231127 15:57:40.049"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.052" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:40.049" endtime="20231127 15:57:40.052"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.052" endtime="20231127 15:57:40.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.054" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:40.054" endtime="20231127 15:57:40.054"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.055" endtime="20231127 15:57:40.055"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.055" endtime="20231127 15:57:40.056"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:40.056" endtime="20231127 15:57:40.057"/>
</return>
<status status="PASS" starttime="20231127 15:57:40.048" endtime="20231127 15:57:40.057"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.058" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:40.057" endtime="20231127 15:57:40.058"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.061" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:40.058" endtime="20231127 15:57:40.061"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.631" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:57:40.631" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:40.061" endtime="20231127 15:57:40.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.632" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:57:40.631" endtime="20231127 15:57:40.632"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.632" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:40.632" endtime="20231127 15:57:40.633"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.633" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:40.633" endtime="20231127 15:57:40.633"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:40.633" endtime="20231127 15:57:40.633"/>
</return>
<msg timestamp="20231127 15:57:40.634" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:40.057" endtime="20231127 15:57:40.634"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:57:40.634" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:57:40.634" level="INFO">${lines} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:57:40.634" endtime="20231127 15:57:40.634"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:40.635" level="INFO">${line} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:57:40.635" endtime="20231127 15:57:40.635"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:57:40.636" level="INFO">${line_array} = ['|    |      | 169', 'bg  |']</msg>
<status status="PASS" starttime="20231127 15:57:40.635" endtime="20231127 15:57:40.636"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:57:40.637" level="INFO">${dev_name_array} = ['|', '|', '|', '169']</msg>
<status status="PASS" starttime="20231127 15:57:40.636" endtime="20231127 15:57:40.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:40.639" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:57:40.638" endtime="20231127 15:57:40.639"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:40.639" endtime="20231127 15:57:40.640"/>
</kw>
<status status="PASS" starttime="20231127 15:57:40.639" endtime="20231127 15:57:40.640"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:57:40.640" endtime="20231127 15:57:40.640"/>
</return>
<msg timestamp="20231127 15:57:40.640" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:57:39.873" endtime="20231127 15:57:40.641"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:40.642" endtime="20231127 15:57:40.643"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:40.644" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:40.798" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:39 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:40.643" endtime="20231127 15:57:40.798"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.803" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:40.798" endtime="20231127 15:57:40.803"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.811" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:40.804" endtime="20231127 15:57:40.811"/>
</kw>
<status status="PASS" starttime="20231127 15:57:40.641" endtime="20231127 15:57:40.811"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.812" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:40.812" endtime="20231127 15:57:40.812"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.815" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:40.812" endtime="20231127 15:57:40.815"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.815" endtime="20231127 15:57:40.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.821" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:40.820" endtime="20231127 15:57:40.821"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.821" endtime="20231127 15:57:40.822"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.822" endtime="20231127 15:57:40.823"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:40.823" endtime="20231127 15:57:40.823"/>
</return>
<status status="PASS" starttime="20231127 15:57:40.811" endtime="20231127 15:57:40.823"/>
</kw>
<status status="PASS" starttime="20231127 15:57:40.641" endtime="20231127 15:57:40.823"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.824" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:40.824" endtime="20231127 15:57:40.825"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.827" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:40.825" endtime="20231127 15:57:40.828"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.828" endtime="20231127 15:57:40.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.829" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:40.829" endtime="20231127 15:57:40.830"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.830" endtime="20231127 15:57:40.831"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.831" endtime="20231127 15:57:40.831"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:40.832" endtime="20231127 15:57:40.832"/>
</return>
<status status="PASS" starttime="20231127 15:57:40.824" endtime="20231127 15:57:40.832"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.833" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:57:40.833" endtime="20231127 15:57:40.833"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:40.836" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:57:40.833" endtime="20231127 15:57:40.836"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:40.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.837" endtime="20231127 15:57:40.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:40.845" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:40.844" endtime="20231127 15:57:40.845"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.845" endtime="20231127 15:57:40.846"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:40.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:40.846" endtime="20231127 15:57:40.847"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:40.847" endtime="20231127 15:57:40.847"/>
</return>
<status status="PASS" starttime="20231127 15:57:40.832" endtime="20231127 15:57:40.848"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:40.848" endtime="20231127 15:57:40.849"/>
</kw>
<status status="PASS" starttime="20231127 15:57:40.848" endtime="20231127 15:57:40.849"/>
</kw>
<status status="PASS" starttime="20231127 15:57:39.872" endtime="20231127 15:57:40.850"/>
</kw>
<status status="PASS" starttime="20231127 15:57:38.607" endtime="20231127 15:57:40.850"/>
</kw>
<kw name="Check In Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${check_in_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_check_in=${is_check_in}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:40.852" level="INFO">${check_in_req} = {'order_number': '1701071858109', 'is_check_in': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231127 15:57:40.851" endtime="20231127 15:57:40.852"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/check_in</arg>
<arg>${check_in_req}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<status status="NOT RUN" starttime="20231127 15:57:40.854" endtime="20231127 15:57:40.854"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20231127 15:57:40.855" endtime="20231127 15:57:40.855"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:57:40.855" endtime="20231127 15:57:40.855"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:57:40.856" endtime="20231127 15:57:40.856"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:57:40.856" endtime="20231127 15:57:40.856"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:57:40.857" endtime="20231127 15:57:40.857"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:40.856" endtime="20231127 15:57:40.857"/>
</branch>
<status status="NOT RUN" starttime="20231127 15:57:40.856" endtime="20231127 15:57:40.857"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:57:40.857" endtime="20231127 15:57:40.857"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231127 15:57:40.858" endtime="20231127 15:57:40.858"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:40.854" endtime="20231127 15:57:40.858"/>
</branch>
<status status="PASS" starttime="20231127 15:57:40.854" endtime="20231127 15:57:40.858"/>
</if>
<status status="PASS" starttime="20231127 15:57:40.853" endtime="20231127 15:57:40.858"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:40.860" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:57:40.859" endtime="20231127 15:57:40.860"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:57:40.860" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:57:40.860" endtime="20231127 15:57:40.861"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:57:40.861" level="INFO">Length is 3</msg>
<msg timestamp="20231127 15:57:40.862" level="INFO">${req_len} = 3</msg>
<status status="PASS" starttime="20231127 15:57:40.861" endtime="20231127 15:57:40.862"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:57:40.863" level="INFO">${req_json} = {'order_number': '1701071858109', 'is_check_in': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231127 15:57:40.862" endtime="20231127 15:57:40.863"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:57:40.967" level="INFO">POST Request : url=http://localhost:31700/api/order/check_in 
 path_url=/api/order/check_in 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '73', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "1701071858109", "is_check_in": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231127 15:57:40.967" level="INFO">POST Response : url=http://localhost:31700/api/order/check_in 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:57:40 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231127 15:57:40.967" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:40.863" endtime="20231127 15:57:40.968"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:57:40.968" endtime="20231127 15:57:40.968"/>
</return>
<msg timestamp="20231127 15:57:40.968" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:40.858" endtime="20231127 15:57:40.969"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:57:40.971" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:57:40.969" endtime="20231127 15:57:40.971"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:57:40.971" endtime="20231127 15:57:40.971"/>
</return>
<status status="PASS" starttime="20231127 15:57:40.853" endtime="20231127 15:57:40.972"/>
</kw>
<status status="PASS" starttime="20231127 15:57:40.850" endtime="20231127 15:57:40.972"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:57:46.974" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20231127 15:57:40.973" endtime="20231127 15:57:46.974"/>
</kw>
<kw name="Check Call Push" library="field_opt">
<arg>${plate_no}</arg>
<arg>driver_name=${driver_name}</arg>
<kw name="Get Last Req" library="rest_res">
<var>${api_sent}</var>
<kw name="GET" library="RequestsLibrary">
<var>${result}</var>
<arg>url=http://localhost:5001/check_call</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20231127 15:57:46.982" level="INFO">GET Request : url=http://localhost:5001/check_call 
 path_url=/check_call 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231127 15:57:46.982" level="INFO">GET Response : url=http://localhost:5001/check_call 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/3.0.1 Python/3.9.6', 'Date': 'Mon, 27 Nov 2023 07:57:46 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '106', 'Connection': 'close'} 
 body={"path": "/pa_web/pa_rest/call_vehicle", "req": {"plateNo": "\u4eacA12345", "driverName": "\u5f20\u4e09"}} 
 </msg>
<msg timestamp="20231127 15:57:46.983" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:57:46.977" endtime="20231127 15:57:46.983"/>
</kw>
<return>
<value>${result.json()}[req]</value>
<status status="PASS" starttime="20231127 15:57:46.983" endtime="20231127 15:57:46.983"/>
</return>
<msg timestamp="20231127 15:57:46.984" level="INFO">${api_sent} = {'plateNo': '京A12345', 'driverName': '张三'}</msg>
<status status="PASS" starttime="20231127 15:57:46.976" endtime="20231127 15:57:46.985"/>
</kw>
<if>
<branch type="IF" condition="${has_call}">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${api_sent}[plateNo]</arg>
<arg>${plate_no}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:46.986" endtime="20231127 15:57:46.986"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${api_sent}[driverName]</arg>
<arg>${driver_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:46.987" endtime="20231127 15:57:46.988"/>
</kw>
<status status="PASS" starttime="20231127 15:57:46.985" endtime="20231127 15:57:46.988"/>
</branch>
<branch type="ELSE">
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${api_sent}[plateNo]</arg>
<arg>${plate_no}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:57:46.988" endtime="20231127 15:57:46.989"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:46.988" endtime="20231127 15:57:46.989"/>
</branch>
<status status="PASS" starttime="20231127 15:57:46.985" endtime="20231127 15:57:46.989"/>
</if>
<status status="PASS" starttime="20231127 15:57:46.975" endtime="20231127 15:57:46.989"/>
</kw>
<kw name="One Time Scale" library="dev_res">
<arg>p</arg>
<arg>${p_weight}</arg>
<arg>cam_or_id=id</arg>
<arg>trig_driver_id=${driver_id}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.991" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231127 15:57:46.991" endtime="20231127 15:57:46.991"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.992" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231127 15:57:46.992" endtime="20231127 15:57:46.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.993" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231127 15:57:46.993" endtime="20231127 15:57:46.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_reader}</var>
<arg>${s_fid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.994" level="INFO">${id_reader} = fi</msg>
<status status="PASS" starttime="20231127 15:57:46.994" endtime="20231127 15:57:46.994"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_led}</var>
<arg>${s_fled}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.995" level="INFO">${e_led} = fl</msg>
<status status="PASS" starttime="20231127 15:57:46.995" endtime="20231127 15:57:46.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_led}</var>
<arg>${s_bled}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.996" level="INFO">${l_led} = bl</msg>
<status status="PASS" starttime="20231127 15:57:46.996" endtime="20231127 15:57:46.997"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_speaker}</var>
<arg>${s_speaker}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.998" level="INFO">${e_speaker} = fs</msg>
<status status="PASS" starttime="20231127 15:57:46.997" endtime="20231127 15:57:46.998"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_speaker}</var>
<arg>${s_speaker}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:46.999" level="INFO">${l_speaker} = fs</msg>
<status status="PASS" starttime="20231127 15:57:46.998" endtime="20231127 15:57:46.999"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231127 15:57:47.000" endtime="20231127 15:57:47.000"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231127 15:57:47.000" endtime="20231127 15:57:47.001"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231127 15:57:47.001" endtime="20231127 15:57:47.001"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_reader}</arg>
<arg>${s_bid}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231127 15:57:47.002" endtime="20231127 15:57:47.002"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_led}</arg>
<arg>${s_bled}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231127 15:57:47.002" endtime="20231127 15:57:47.002"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_led}</arg>
<arg>${s_fled}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20231127 15:57:47.003" endtime="20231127 15:57:47.003"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:46.999" endtime="20231127 15:57:47.003"/>
</branch>
<status status="PASS" starttime="20231127 15:57:46.999" endtime="20231127 15:57:47.003"/>
</if>
<if>
<branch type="IF" condition="$cam_or_id == 'cam'">
<kw name="Mock Plate Cap" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>${pc}</arg>
<status status="NOT RUN" starttime="20231127 15:57:47.004" endtime="20231127 15:57:47.004"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:47.003" endtime="20231127 15:57:47.004"/>
</branch>
<branch type="ELSE">
<kw name="Mock Id Read" library="dev_res">
<arg>${trig_driver_id}</arg>
<arg>${id_reader}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:47.007" endtime="20231127 15:57:47.008"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:47.008" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:47.158" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:40 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:47.008" endtime="20231127 15:57:47.158"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.162" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:47.159" endtime="20231127 15:57:47.162"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.169" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:47.163" endtime="20231127 15:57:47.169"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.006" endtime="20231127 15:57:47.170"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.171" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:47.171" endtime="20231127 15:57:47.171"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.175" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:47.172" endtime="20231127 15:57:47.175"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.175" endtime="20231127 15:57:47.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.180" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:47.180" endtime="20231127 15:57:47.180"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.181" endtime="20231127 15:57:47.182"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.182" endtime="20231127 15:57:47.182"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:47.183" endtime="20231127 15:57:47.183"/>
</return>
<status status="PASS" starttime="20231127 15:57:47.170" endtime="20231127 15:57:47.183"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.006" endtime="20231127 15:57:47.183"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.184" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:47.184" endtime="20231127 15:57:47.185"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.188" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:47.185" endtime="20231127 15:57:47.188"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.188" endtime="20231127 15:57:47.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.190" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:47.189" endtime="20231127 15:57:47.190"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.190" endtime="20231127 15:57:47.191"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.191" endtime="20231127 15:57:47.192"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:47.192" endtime="20231127 15:57:47.192"/>
</return>
<status status="PASS" starttime="20231127 15:57:47.183" endtime="20231127 15:57:47.192"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.193" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:47.193" endtime="20231127 15:57:47.194"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.196" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:47.194" endtime="20231127 15:57:47.196"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.758" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:57:47.759" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:47.197" endtime="20231127 15:57:47.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.759" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:57:47.759" endtime="20231127 15:57:47.759"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.760" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:47.760" endtime="20231127 15:57:47.760"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.761" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:47.760" endtime="20231127 15:57:47.761"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:47.761" endtime="20231127 15:57:47.761"/>
</return>
<msg timestamp="20231127 15:57:47.761" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:47.193" endtime="20231127 15:57:47.761"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:57:47.762" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:57:47.762" level="INFO">${lines} = |    |      | 165:fi  |</msg>
<status status="PASS" starttime="20231127 15:57:47.761" endtime="20231127 15:57:47.762"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:47.763" level="INFO">${line} = |    |      | 165:fi  |</msg>
<status status="PASS" starttime="20231127 15:57:47.762" endtime="20231127 15:57:47.763"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:57:47.763" level="INFO">${line_array} = ['|    |      | 165', 'fi  |']</msg>
<status status="PASS" starttime="20231127 15:57:47.763" endtime="20231127 15:57:47.763"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:57:47.765" level="INFO">${dev_name_array} = ['|', '|', '|', '165']</msg>
<status status="PASS" starttime="20231127 15:57:47.764" endtime="20231127 15:57:47.765"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:47.766" level="INFO">${dev_id} = 165</msg>
<status status="PASS" starttime="20231127 15:57:47.765" endtime="20231127 15:57:47.766"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:47.767" endtime="20231127 15:57:47.768"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.766" endtime="20231127 15:57:47.768"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:57:47.768" endtime="20231127 15:57:47.768"/>
</return>
<msg timestamp="20231127 15:57:47.769" level="INFO">${dev_id} = 165</msg>
<status status="PASS" starttime="20231127 15:57:47.005" endtime="20231127 15:57:47.769"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:47.771" endtime="20231127 15:57:47.773"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:47.773" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:47.944" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:47 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:47.773" endtime="20231127 15:57:47.944"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.948" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:47.944" endtime="20231127 15:57:47.948"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.955" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:47.949" endtime="20231127 15:57:47.955"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.770" endtime="20231127 15:57:47.956"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.957" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:47.956" endtime="20231127 15:57:47.957"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.960" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:47.957" endtime="20231127 15:57:47.960"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.961" endtime="20231127 15:57:47.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.966" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:47.966" endtime="20231127 15:57:47.966"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.967" endtime="20231127 15:57:47.967"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.968" endtime="20231127 15:57:47.968"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:47.969" endtime="20231127 15:57:47.969"/>
</return>
<status status="PASS" starttime="20231127 15:57:47.956" endtime="20231127 15:57:47.969"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.770" endtime="20231127 15:57:47.969"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.970" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:47.970" endtime="20231127 15:57:47.970"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.973" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:47.971" endtime="20231127 15:57:47.973"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.974" endtime="20231127 15:57:47.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.975" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:47.975" endtime="20231127 15:57:47.975"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.976" endtime="20231127 15:57:47.976"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.977" endtime="20231127 15:57:47.977"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:47.977" endtime="20231127 15:57:47.978"/>
</return>
<status status="PASS" starttime="20231127 15:57:47.969" endtime="20231127 15:57:47.978"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} id_reader ${id_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.979" level="INFO">mock_device_action 165 id_reader 123456789012345678</msg>
<status status="PASS" starttime="20231127 15:57:47.979" endtime="20231127 15:57:47.979"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:47.982" level="INFO">mock_device_action 165 id_reader 123456789012345678</msg>
<status status="PASS" starttime="20231127 15:57:47.979" endtime="20231127 15:57:47.983"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:47.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.983" endtime="20231127 15:57:47.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:47.990" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:47.989" endtime="20231127 15:57:47.990"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.990" endtime="20231127 15:57:47.991"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:47.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:47.991" endtime="20231127 15:57:47.992"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:47.992" endtime="20231127 15:57:47.992"/>
</return>
<status status="PASS" starttime="20231127 15:57:47.978" endtime="20231127 15:57:47.993"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:47.993" endtime="20231127 15:57:47.994"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.993" endtime="20231127 15:57:47.994"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.005" endtime="20231127 15:57:47.994"/>
</kw>
<status status="PASS" starttime="20231127 15:57:47.004" endtime="20231127 15:57:47.995"/>
</branch>
<status status="PASS" starttime="20231127 15:57:47.003" endtime="20231127 15:57:47.995"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:57:48.998" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20231127 15:57:47.995" endtime="20231127 15:57:48.999"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请上磅</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:49.002" endtime="20231127 15:57:49.003"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:49.004" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:49.164" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:47 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:49.003" endtime="20231127 15:57:49.165"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:49.170" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:49.165" endtime="20231127 15:57:49.170"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:49.176" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:49.170" endtime="20231127 15:57:49.177"/>
</kw>
<status status="PASS" starttime="20231127 15:57:49.001" endtime="20231127 15:57:49.177"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:49.180" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:57:49.177" endtime="20231127 15:57:49.181"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:49.183" level="INFO">ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:57:48</msg>
<msg timestamp="20231127 15:57:49.184" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:57:48
</msg>
<status status="PASS" starttime="20231127 15:57:49.181" endtime="20231127 15:57:49.184"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:49.184" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:57:48
</msg>
<status status="PASS" starttime="20231127 15:57:49.184" endtime="20231127 15:57:49.184"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:49.185" level="INFO">${status} = 卓创智汇
京A12345
请上磅
2023-11-27 15:57:48
</msg>
<status status="PASS" starttime="20231127 15:57:49.185" endtime="20231127 15:57:49.186"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:49.186" level="INFO">${line_focus} = 请上磅</msg>
<status status="PASS" starttime="20231127 15:57:49.186" endtime="20231127 15:57:49.186"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:49.187" endtime="20231127 15:57:49.187"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:49.188" endtime="20231127 15:57:49.189"/>
</kw>
<status status="PASS" starttime="20231127 15:57:49.188" endtime="20231127 15:57:49.189"/>
</kw>
<status status="PASS" starttime="20231127 15:57:49.000" endtime="20231127 15:57:49.189"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:57:49.190" endtime="20231127 15:57:49.190"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:49.190" endtime="20231127 15:57:49.191"/>
</branch>
<status status="PASS" starttime="20231127 15:57:49.190" endtime="20231127 15:57:49.191"/>
</if>
<status status="PASS" starttime="20231127 15:57:48.999" endtime="20231127 15:57:49.191"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请上磅</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:49.193" endtime="20231127 15:57:49.193"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:49.194" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:49.339" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:49 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:49.193" endtime="20231127 15:57:49.339"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:49.343" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:49.339" endtime="20231127 15:57:49.343"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:49.350" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:49.343" endtime="20231127 15:57:49.350"/>
</kw>
<status status="PASS" starttime="20231127 15:57:49.192" endtime="20231127 15:57:49.350"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:49.353" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:57:49.350" endtime="20231127 15:57:49.353"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:49.356" level="INFO">ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:57:48</msg>
<msg timestamp="20231127 15:57:49.356" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:57:48
</msg>
<status status="PASS" starttime="20231127 15:57:49.354" endtime="20231127 15:57:49.356"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:49.357" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:57:48
</msg>
<status status="PASS" starttime="20231127 15:57:49.357" endtime="20231127 15:57:49.357"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:49.358" level="INFO">${status} = 卓创智汇
京A12345
请上磅
2023-11-27 15:57:48
</msg>
<status status="PASS" starttime="20231127 15:57:49.357" endtime="20231127 15:57:49.358"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:49.359" level="INFO">${line_focus} = 请上磅</msg>
<status status="PASS" starttime="20231127 15:57:49.359" endtime="20231127 15:57:49.359"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:49.359" endtime="20231127 15:57:49.360"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:49.361" endtime="20231127 15:57:49.361"/>
</kw>
<status status="PASS" starttime="20231127 15:57:49.360" endtime="20231127 15:57:49.362"/>
</kw>
<status status="PASS" starttime="20231127 15:57:49.192" endtime="20231127 15:57:49.362"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:57:49.362" endtime="20231127 15:57:49.363"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:49.362" endtime="20231127 15:57:49.363"/>
</branch>
<status status="PASS" starttime="20231127 15:57:49.362" endtime="20231127 15:57:49.363"/>
</if>
<status status="PASS" starttime="20231127 15:57:49.191" endtime="20231127 15:57:49.363"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:57:52.364" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231127 15:57:49.363" endtime="20231127 15:57:52.365"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${e_gate}</arg>
<arg>open</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:52.368" endtime="20231127 15:57:52.369"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:52.370" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:52.516" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:49 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:52.369" endtime="20231127 15:57:52.516"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:52.520" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:52.516" endtime="20231127 15:57:52.521"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:52.527" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:52.521" endtime="20231127 15:57:52.527"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.367" endtime="20231127 15:57:52.527"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:52.530" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231127 15:57:52.527" endtime="20231127 15:57:52.531"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:52.533" level="INFO">å¼é¨</msg>
<msg timestamp="20231127 15:57:52.533" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231127 15:57:52.531" endtime="20231127 15:57:52.533"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:52.534" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:57:52.534" endtime="20231127 15:57:52.534"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:52.535" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231127 15:57:52.535" endtime="20231127 15:57:52.536"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:57:52.537" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:57:52.537" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231127 15:57:52.536" endtime="20231127 15:57:52.537"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:57:52.537" endtime="20231127 15:57:52.537"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:52.538" endtime="20231127 15:57:52.539"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.538" endtime="20231127 15:57:52.539"/>
</kw>
<msg timestamp="20231127 15:57:52.539" level="INFO">${status} = 开门</msg>
<status status="PASS" starttime="20231127 15:57:52.366" endtime="20231127 15:57:52.540"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:52.540" endtime="20231127 15:57:52.541"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.540" endtime="20231127 15:57:52.541"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:57:52.542" endtime="20231127 15:57:52.542"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:52.541" endtime="20231127 15:57:52.542"/>
</branch>
<status status="PASS" starttime="20231127 15:57:52.540" endtime="20231127 15:57:52.542"/>
</if>
<status status="PASS" starttime="20231127 15:57:52.365" endtime="20231127 15:57:52.542"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${l_gate}</arg>
<arg>close</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:52.544" endtime="20231127 15:57:52.545"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:52.545" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:52.694" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:52 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:52.545" endtime="20231127 15:57:52.694"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:52.698" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:52.694" endtime="20231127 15:57:52.698"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:52.705" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:52.698" endtime="20231127 15:57:52.706"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.544" endtime="20231127 15:57:52.706"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:52.710" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231127 15:57:52.706" endtime="20231127 15:57:52.710"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:52.712" level="INFO">å³é¨</msg>
<msg timestamp="20231127 15:57:52.712" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231127 15:57:52.710" endtime="20231127 15:57:52.712"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:52.713" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:57:52.713" endtime="20231127 15:57:52.713"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:52.714" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231127 15:57:52.714" endtime="20231127 15:57:52.715"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:57:52.715" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:57:52.716" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231127 15:57:52.715" endtime="20231127 15:57:52.716"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:57:52.716" endtime="20231127 15:57:52.716"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:52.717" endtime="20231127 15:57:52.718"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.717" endtime="20231127 15:57:52.718"/>
</kw>
<msg timestamp="20231127 15:57:52.718" level="INFO">${status} = 关门</msg>
<status status="PASS" starttime="20231127 15:57:52.543" endtime="20231127 15:57:52.718"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:57:52.719" endtime="20231127 15:57:52.719"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:52.719" endtime="20231127 15:57:52.720"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:52.720" endtime="20231127 15:57:52.721"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.720" endtime="20231127 15:57:52.721"/>
</branch>
<status status="PASS" starttime="20231127 15:57:52.719" endtime="20231127 15:57:52.721"/>
</if>
<status status="PASS" starttime="20231127 15:57:52.543" endtime="20231127 15:57:52.721"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>车辆未完全上磅</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:52.723" endtime="20231127 15:57:52.723"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:52.724" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:52.872" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:52 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:52.723" endtime="20231127 15:57:52.873"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:52.877" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:52.873" endtime="20231127 15:57:52.877"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:52.883" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:52.877" endtime="20231127 15:57:52.883"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.722" endtime="20231127 15:57:52.883"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:52.887" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:57:52.884" endtime="20231127 15:57:52.887"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:52.890" level="INFO">ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:57:50</msg>
<msg timestamp="20231127 15:57:52.890" level="INFO">${status} = ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:57:50
</msg>
<status status="PASS" starttime="20231127 15:57:52.887" endtime="20231127 15:57:52.891"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:52.892" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xbd\xa6\xe8\xbe\x86\xe6\x9c\xaa\xe5\xae\x8c\xe5\x85\xa8\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:57:50
</msg>
<status status="PASS" starttime="20231127 15:57:52.891" endtime="20231127 15:57:52.892"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:52.893" level="INFO">${status} = 卓创智汇
京A12345
车辆未完全上磅
2023-11-27 15:57:50
</msg>
<status status="PASS" starttime="20231127 15:57:52.892" endtime="20231127 15:57:52.893"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:52.894" level="INFO">${line_focus} = 车辆未完全上磅</msg>
<status status="PASS" starttime="20231127 15:57:52.893" endtime="20231127 15:57:52.894"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:52.894" endtime="20231127 15:57:52.894"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:52.895" endtime="20231127 15:57:52.896"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.895" endtime="20231127 15:57:52.896"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.722" endtime="20231127 15:57:52.896"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:57:52.897" endtime="20231127 15:57:52.897"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:52.896" endtime="20231127 15:57:52.897"/>
</branch>
<status status="PASS" starttime="20231127 15:57:52.896" endtime="20231127 15:57:52.897"/>
</if>
<status status="PASS" starttime="20231127 15:57:52.721" endtime="20231127 15:57:52.897"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>车辆未完全上磅</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:52.899" endtime="20231127 15:57:52.900"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:52.900" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:53.048" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:52 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:52.900" endtime="20231127 15:57:53.049"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:53.053" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:53.049" endtime="20231127 15:57:53.053"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:53.060" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:53.054" endtime="20231127 15:57:53.060"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.899" endtime="20231127 15:57:53.060"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:53.064" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:57:53.061" endtime="20231127 15:57:53.064"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:53.067" level="INFO">ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:57:50</msg>
<msg timestamp="20231127 15:57:53.067" level="INFO">${status} = ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:57:50
</msg>
<status status="PASS" starttime="20231127 15:57:53.064" endtime="20231127 15:57:53.067"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.068" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xbd\xa6\xe8\xbe\x86\xe6\x9c\xaa\xe5\xae\x8c\xe5\x85\xa8\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:57:50
</msg>
<status status="PASS" starttime="20231127 15:57:53.067" endtime="20231127 15:57:53.068"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.069" level="INFO">${status} = 卓创智汇
京A12345
车辆未完全上磅
2023-11-27 15:57:50
</msg>
<status status="PASS" starttime="20231127 15:57:53.068" endtime="20231127 15:57:53.069"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:53.070" level="INFO">${line_focus} = 车辆未完全上磅</msg>
<status status="PASS" starttime="20231127 15:57:53.069" endtime="20231127 15:57:53.070"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:57:53.070" endtime="20231127 15:57:53.070"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:53.071" endtime="20231127 15:57:53.072"/>
</kw>
<status status="PASS" starttime="20231127 15:57:53.071" endtime="20231127 15:57:53.072"/>
</kw>
<status status="PASS" starttime="20231127 15:57:52.898" endtime="20231127 15:57:53.072"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:57:53.073" endtime="20231127 15:57:53.073"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:57:53.073" endtime="20231127 15:57:53.073"/>
</branch>
<status status="PASS" starttime="20231127 15:57:53.073" endtime="20231127 15:57:53.074"/>
</if>
<status status="PASS" starttime="20231127 15:57:52.897" endtime="20231127 15:57:53.074"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:53.076" endtime="20231127 15:57:53.076"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:53.077" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:53.223" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:53 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:53.076" endtime="20231127 15:57:53.223"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:53.228" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:53.224" endtime="20231127 15:57:53.228"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:53.236" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:53.228" endtime="20231127 15:57:53.236"/>
</kw>
<status status="PASS" starttime="20231127 15:57:53.075" endtime="20231127 15:57:53.236"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:53.238" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:53.237" endtime="20231127 15:57:53.238"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:53.241" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:53.238" endtime="20231127 15:57:53.241"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:53.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:53.241" endtime="20231127 15:57:53.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:53.246" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:53.246" endtime="20231127 15:57:53.247"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:53.247" endtime="20231127 15:57:53.247"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:53.248" endtime="20231127 15:57:53.248"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:53.248" endtime="20231127 15:57:53.249"/>
</return>
<status status="PASS" starttime="20231127 15:57:53.237" endtime="20231127 15:57:53.249"/>
</kw>
<status status="PASS" starttime="20231127 15:57:53.075" endtime="20231127 15:57:53.249"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:53.250" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:53.250" endtime="20231127 15:57:53.250"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:53.253" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:53.250" endtime="20231127 15:57:53.253"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:53.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:53.253" endtime="20231127 15:57:53.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:53.255" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:53.255" endtime="20231127 15:57:53.255"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:53.256" endtime="20231127 15:57:53.256"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:53.256" endtime="20231127 15:57:53.257"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:53.257" endtime="20231127 15:57:53.257"/>
</return>
<status status="PASS" starttime="20231127 15:57:53.249" endtime="20231127 15:57:53.258"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:53.259" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:53.258" endtime="20231127 15:57:53.259"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:53.261" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:53.259" endtime="20231127 15:57:53.262"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:53.849" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:57:53.849" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:53.262" endtime="20231127 15:57:53.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:53.850" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:57:53.850" endtime="20231127 15:57:53.851"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.851" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:53.851" endtime="20231127 15:57:53.851"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:53.852" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:53.852" endtime="20231127 15:57:53.852"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:53.853" endtime="20231127 15:57:53.853"/>
</return>
<msg timestamp="20231127 15:57:53.854" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:53.258" endtime="20231127 15:57:53.854"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:57:53.855" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:57:53.855" level="INFO">${lines} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:57:53.854" endtime="20231127 15:57:53.856"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:53.857" level="INFO">${line} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:57:53.856" endtime="20231127 15:57:53.857"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:57:53.857" level="INFO">${line_array} = ['|    |      | 168', 'fg  |']</msg>
<status status="PASS" starttime="20231127 15:57:53.857" endtime="20231127 15:57:53.858"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:57:53.859" level="INFO">${dev_name_array} = ['|', '|', '|', '168']</msg>
<status status="PASS" starttime="20231127 15:57:53.858" endtime="20231127 15:57:53.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:53.860" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:57:53.859" endtime="20231127 15:57:53.860"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:53.861" endtime="20231127 15:57:53.861"/>
</kw>
<status status="PASS" starttime="20231127 15:57:53.860" endtime="20231127 15:57:53.862"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:57:53.862" endtime="20231127 15:57:53.862"/>
</return>
<msg timestamp="20231127 15:57:53.863" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:57:53.074" endtime="20231127 15:57:53.863"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:53.865" endtime="20231127 15:57:53.866"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:53.868" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:54.018" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:53 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:53.867" endtime="20231127 15:57:54.019"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.023" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:54.019" endtime="20231127 15:57:54.024"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.030" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:54.024" endtime="20231127 15:57:54.030"/>
</kw>
<status status="PASS" starttime="20231127 15:57:53.864" endtime="20231127 15:57:54.030"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.032" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:54.031" endtime="20231127 15:57:54.032"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.035" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:54.032" endtime="20231127 15:57:54.035"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.035" endtime="20231127 15:57:54.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.041" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:54.040" endtime="20231127 15:57:54.041"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.041" endtime="20231127 15:57:54.042"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.042" endtime="20231127 15:57:54.043"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:54.043" endtime="20231127 15:57:54.043"/>
</return>
<status status="PASS" starttime="20231127 15:57:54.030" endtime="20231127 15:57:54.043"/>
</kw>
<status status="PASS" starttime="20231127 15:57:53.863" endtime="20231127 15:57:54.043"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.044" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:54.044" endtime="20231127 15:57:54.045"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.047" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:54.045" endtime="20231127 15:57:54.047"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.048" endtime="20231127 15:57:54.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.050" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:54.049" endtime="20231127 15:57:54.050"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.050" endtime="20231127 15:57:54.051"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.051" endtime="20231127 15:57:54.051"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:54.052" endtime="20231127 15:57:54.052"/>
</return>
<status status="PASS" starttime="20231127 15:57:54.044" endtime="20231127 15:57:54.052"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.053" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:57:54.053" endtime="20231127 15:57:54.053"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.056" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:57:54.054" endtime="20231127 15:57:54.056"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.057" endtime="20231127 15:57:54.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.062" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:54.062" endtime="20231127 15:57:54.063"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.063" endtime="20231127 15:57:54.064"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.064" endtime="20231127 15:57:54.065"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:54.065" endtime="20231127 15:57:54.065"/>
</return>
<status status="PASS" starttime="20231127 15:57:54.052" endtime="20231127 15:57:54.065"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:54.066" endtime="20231127 15:57:54.067"/>
</kw>
<status status="PASS" starttime="20231127 15:57:54.066" endtime="20231127 15:57:54.067"/>
</kw>
<status status="PASS" starttime="20231127 15:57:53.074" endtime="20231127 15:57:54.067"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:54.070" endtime="20231127 15:57:54.071"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:54.072" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:54.219" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:53 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:54.071" endtime="20231127 15:57:54.219"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.223" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:54.219" endtime="20231127 15:57:54.223"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.230" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:54.224" endtime="20231127 15:57:54.230"/>
</kw>
<status status="PASS" starttime="20231127 15:57:54.069" endtime="20231127 15:57:54.230"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.232" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:54.231" endtime="20231127 15:57:54.232"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.236" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:54.232" endtime="20231127 15:57:54.236"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.236" endtime="20231127 15:57:54.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.242" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:54.242" endtime="20231127 15:57:54.243"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.243" endtime="20231127 15:57:54.244"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.244" endtime="20231127 15:57:54.245"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:54.245" endtime="20231127 15:57:54.245"/>
</return>
<status status="PASS" starttime="20231127 15:57:54.230" endtime="20231127 15:57:54.245"/>
</kw>
<status status="PASS" starttime="20231127 15:57:54.069" endtime="20231127 15:57:54.245"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.246" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:54.246" endtime="20231127 15:57:54.247"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.249" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:54.247" endtime="20231127 15:57:54.250"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.250" endtime="20231127 15:57:54.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.251" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:54.251" endtime="20231127 15:57:54.252"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.252" endtime="20231127 15:57:54.252"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:54.253" endtime="20231127 15:57:54.253"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:54.253" endtime="20231127 15:57:54.254"/>
</return>
<status status="PASS" starttime="20231127 15:57:54.246" endtime="20231127 15:57:54.254"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.255" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:54.255" endtime="20231127 15:57:54.255"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.258" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:57:54.255" endtime="20231127 15:57:54.258"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:54.822" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:57:54.822" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:54.259" endtime="20231127 15:57:54.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:54.823" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:57:54.823" endtime="20231127 15:57:54.823"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.824" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:54.823" endtime="20231127 15:57:54.824"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:54.824" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:54.824" endtime="20231127 15:57:54.824"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:54.824" endtime="20231127 15:57:54.825"/>
</return>
<msg timestamp="20231127 15:57:54.825" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:57:54.254" endtime="20231127 15:57:54.825"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:57:54.825" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:57:54.826" level="INFO">${lines} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:57:54.825" endtime="20231127 15:57:54.826"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:57:54.826" level="INFO">${line} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:57:54.826" endtime="20231127 15:57:54.826"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:57:54.827" level="INFO">${line_array} = ['|    |      | 170', 'ss  |']</msg>
<status status="PASS" starttime="20231127 15:57:54.827" endtime="20231127 15:57:54.827"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:57:54.828" level="INFO">${dev_name_array} = ['|', '|', '|', '170']</msg>
<status status="PASS" starttime="20231127 15:57:54.827" endtime="20231127 15:57:54.828"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:57:54.829" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:57:54.828" endtime="20231127 15:57:54.829"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:54.830" endtime="20231127 15:57:54.830"/>
</kw>
<status status="PASS" starttime="20231127 15:57:54.829" endtime="20231127 15:57:54.831"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:57:54.831" endtime="20231127 15:57:54.831"/>
</return>
<msg timestamp="20231127 15:57:54.832" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:57:54.068" endtime="20231127 15:57:54.832"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:57:54.835" endtime="20231127 15:57:54.836"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:57:54.838" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:57:54.990" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:54 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:54.837" endtime="20231127 15:57:54.991"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:54.995" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:57:54.991" endtime="20231127 15:57:54.995"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:55.004" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:57:54.996" endtime="20231127 15:57:55.004"/>
</kw>
<status status="PASS" starttime="20231127 15:57:54.833" endtime="20231127 15:57:55.004"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:55.006" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:55.005" endtime="20231127 15:57:55.006"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:55.008" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:57:55.006" endtime="20231127 15:57:55.009"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:55.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.009" endtime="20231127 15:57:55.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:55.014" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:55.013" endtime="20231127 15:57:55.014"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:55.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.014" endtime="20231127 15:57:55.015"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:55.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.016" endtime="20231127 15:57:55.016"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:55.016" endtime="20231127 15:57:55.016"/>
</return>
<status status="PASS" starttime="20231127 15:57:55.005" endtime="20231127 15:57:55.017"/>
</kw>
<status status="PASS" starttime="20231127 15:57:54.832" endtime="20231127 15:57:55.017"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:55.018" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:55.018" endtime="20231127 15:57:55.018"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:55.021" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:57:55.018" endtime="20231127 15:57:55.021"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:55.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.021" endtime="20231127 15:57:55.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:55.023" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:55.023" endtime="20231127 15:57:55.023"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:55.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.024" endtime="20231127 15:57:55.024"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:55.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.024" endtime="20231127 15:57:55.025"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:55.025" endtime="20231127 15:57:55.025"/>
</return>
<status status="PASS" starttime="20231127 15:57:55.017" endtime="20231127 15:57:55.026"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:55.027" level="INFO">mock_device_action 170 scale 20.23</msg>
<status status="PASS" starttime="20231127 15:57:55.026" endtime="20231127 15:57:55.027"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:57:55.030" level="INFO">mock_device_action 170 scale 20.23</msg>
<status status="PASS" starttime="20231127 15:57:55.027" endtime="20231127 15:57:55.030"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:57:55.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.030" endtime="20231127 15:57:55.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:57:55.037" level="INFO"/>
<status status="PASS" starttime="20231127 15:57:55.036" endtime="20231127 15:57:55.037"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:55.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.037" endtime="20231127 15:57:55.038"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:57:55.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:57:55.038" endtime="20231127 15:57:55.039"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:57:55.039" endtime="20231127 15:57:55.040"/>
</return>
<status status="PASS" starttime="20231127 15:57:55.026" endtime="20231127 15:57:55.040"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:57:55.040" endtime="20231127 15:57:55.041"/>
</kw>
<status status="PASS" starttime="20231127 15:57:55.040" endtime="20231127 15:57:55.041"/>
</kw>
<status status="PASS" starttime="20231127 15:57:54.067" endtime="20231127 15:57:55.041"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:58:00.042" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231127 15:57:55.042" endtime="20231127 15:58:00.042"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请等待</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:00.045" endtime="20231127 15:58:00.045"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:00.046" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:00.193" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:57:54 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:00.046" endtime="20231127 15:58:00.193"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:00.197" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:00.193" endtime="20231127 15:58:00.197"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:00.204" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:00.197" endtime="20231127 15:58:00.204"/>
</kw>
<status status="PASS" starttime="20231127 15:58:00.044" endtime="20231127 15:58:00.205"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:00.209" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:00.205" endtime="20231127 15:58:00.209"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:00.212" level="INFO">ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:57:56</msg>
<msg timestamp="20231127 15:58:00.212" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:57:56
</msg>
<status status="PASS" starttime="20231127 15:58:00.209" endtime="20231127 15:58:00.212"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:00.213" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe7\xad\x89\xe5\xbe\x85
2023-11-27 15:57:56
</msg>
<status status="PASS" starttime="20231127 15:58:00.212" endtime="20231127 15:58:00.213"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:00.214" level="INFO">${status} = 卓创智汇
京A12345
请等待
2023-11-27 15:57:56
</msg>
<status status="PASS" starttime="20231127 15:58:00.213" endtime="20231127 15:58:00.214"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:00.215" level="INFO">${line_focus} = 请等待</msg>
<status status="PASS" starttime="20231127 15:58:00.214" endtime="20231127 15:58:00.215"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:00.215" endtime="20231127 15:58:00.216"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:00.217" endtime="20231127 15:58:00.217"/>
</kw>
<status status="PASS" starttime="20231127 15:58:00.216" endtime="20231127 15:58:00.217"/>
</kw>
<status status="PASS" starttime="20231127 15:58:00.043" endtime="20231127 15:58:00.218"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:58:00.218" endtime="20231127 15:58:00.218"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:00.218" endtime="20231127 15:58:00.219"/>
</branch>
<status status="PASS" starttime="20231127 15:58:00.218" endtime="20231127 15:58:00.219"/>
</if>
<status status="PASS" starttime="20231127 15:58:00.043" endtime="20231127 15:58:00.219"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请等待</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:00.220" endtime="20231127 15:58:00.221"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:00.222" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:00.366" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:00 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:00.222" endtime="20231127 15:58:00.366"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:00.370" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:00.366" endtime="20231127 15:58:00.371"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:00.378" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:00.371" endtime="20231127 15:58:00.378"/>
</kw>
<status status="PASS" starttime="20231127 15:58:00.220" endtime="20231127 15:58:00.378"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:00.382" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:00.378" endtime="20231127 15:58:00.382"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:00.384" level="INFO">ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:57:56</msg>
<msg timestamp="20231127 15:58:00.384" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:57:56
</msg>
<status status="PASS" starttime="20231127 15:58:00.382" endtime="20231127 15:58:00.384"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:00.385" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe7\xad\x89\xe5\xbe\x85
2023-11-27 15:57:56
</msg>
<status status="PASS" starttime="20231127 15:58:00.385" endtime="20231127 15:58:00.385"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:00.386" level="INFO">${status} = 卓创智汇
京A12345
请等待
2023-11-27 15:57:56
</msg>
<status status="PASS" starttime="20231127 15:58:00.386" endtime="20231127 15:58:00.386"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:00.387" level="INFO">${line_focus} = 请等待</msg>
<status status="PASS" starttime="20231127 15:58:00.386" endtime="20231127 15:58:00.387"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:00.388" endtime="20231127 15:58:00.388"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:00.389" endtime="20231127 15:58:00.390"/>
</kw>
<status status="PASS" starttime="20231127 15:58:00.389" endtime="20231127 15:58:00.390"/>
</kw>
<status status="PASS" starttime="20231127 15:58:00.220" endtime="20231127 15:58:00.390"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:58:00.391" endtime="20231127 15:58:00.391"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:00.390" endtime="20231127 15:58:00.391"/>
</branch>
<status status="PASS" starttime="20231127 15:58:00.390" endtime="20231127 15:58:00.391"/>
</if>
<status status="PASS" starttime="20231127 15:58:00.219" endtime="20231127 15:58:00.391"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>17s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:58:17.392" level="INFO">Slept 17 seconds</msg>
<status status="PASS" starttime="20231127 15:58:00.392" endtime="20231127 15:58:17.392"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>已完成，请下磅</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:17.395" endtime="20231127 15:58:17.396"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:17.397" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:17.549" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:00 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:17.396" endtime="20231127 15:58:17.549"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:17.554" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:17.549" endtime="20231127 15:58:17.554"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:17.562" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:17.554" endtime="20231127 15:58:17.562"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.395" endtime="20231127 15:58:17.562"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:17.565" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:17.563" endtime="20231127 15:58:17.566"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:17.568" level="INFO">ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:08</msg>
<msg timestamp="20231127 15:58:17.568" level="INFO">${status} = ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:08
</msg>
<status status="PASS" starttime="20231127 15:58:17.566" endtime="20231127 15:58:17.568"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:17.570" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe5\xb7\xb2\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x8c\xe8\xaf\xb7\xe4\xb8\x8b\xe7\xa3\x85
2023-11-27 15:58:08
</msg>
<status status="PASS" starttime="20231127 15:58:17.569" endtime="20231127 15:58:17.570"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:17.571" level="INFO">${status} = 卓创智汇
京A12345
已完成，请下磅
2023-11-27 15:58:08
</msg>
<status status="PASS" starttime="20231127 15:58:17.570" endtime="20231127 15:58:17.571"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:17.572" level="INFO">${line_focus} = 已完成，请下磅</msg>
<status status="PASS" starttime="20231127 15:58:17.571" endtime="20231127 15:58:17.572"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:17.572" endtime="20231127 15:58:17.573"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:17.574" endtime="20231127 15:58:17.574"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.573" endtime="20231127 15:58:17.574"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.394" endtime="20231127 15:58:17.574"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:58:17.575" endtime="20231127 15:58:17.575"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:17.575" endtime="20231127 15:58:17.575"/>
</branch>
<status status="PASS" starttime="20231127 15:58:17.575" endtime="20231127 15:58:17.575"/>
</if>
<status status="PASS" starttime="20231127 15:58:17.393" endtime="20231127 15:58:17.575"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>已完成，请下磅</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:17.577" endtime="20231127 15:58:17.578"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:17.578" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:17.724" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:17 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:17.578" endtime="20231127 15:58:17.724"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:17.729" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:17.725" endtime="20231127 15:58:17.729"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:17.735" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:17.729" endtime="20231127 15:58:17.735"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.577" endtime="20231127 15:58:17.736"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:17.739" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:17.736" endtime="20231127 15:58:17.740"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:17.743" level="INFO">ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:08</msg>
<msg timestamp="20231127 15:58:17.743" level="INFO">${status} = ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:08
</msg>
<status status="PASS" starttime="20231127 15:58:17.740" endtime="20231127 15:58:17.744"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:17.744" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe5\xb7\xb2\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x8c\xe8\xaf\xb7\xe4\xb8\x8b\xe7\xa3\x85
2023-11-27 15:58:08
</msg>
<status status="PASS" starttime="20231127 15:58:17.744" endtime="20231127 15:58:17.745"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:17.745" level="INFO">${status} = 卓创智汇
京A12345
已完成，请下磅
2023-11-27 15:58:08
</msg>
<status status="PASS" starttime="20231127 15:58:17.745" endtime="20231127 15:58:17.746"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:17.746" level="INFO">${line_focus} = 已完成，请下磅</msg>
<status status="PASS" starttime="20231127 15:58:17.746" endtime="20231127 15:58:17.746"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:17.747" endtime="20231127 15:58:17.747"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:17.748" endtime="20231127 15:58:17.748"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.747" endtime="20231127 15:58:17.749"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.576" endtime="20231127 15:58:17.749"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20231127 15:58:17.749" endtime="20231127 15:58:17.750"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:17.749" endtime="20231127 15:58:17.750"/>
</branch>
<status status="PASS" starttime="20231127 15:58:17.749" endtime="20231127 15:58:17.750"/>
</if>
<status status="PASS" starttime="20231127 15:58:17.576" endtime="20231127 15:58:17.750"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${l_gate}</arg>
<arg>open</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:17.752" endtime="20231127 15:58:17.752"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:17.753" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:17.904" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:17 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:17.753" endtime="20231127 15:58:17.904"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:17.909" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:17.905" endtime="20231127 15:58:17.909"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:17.915" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:17.909" endtime="20231127 15:58:17.915"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.751" endtime="20231127 15:58:17.915"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:17.920" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231127 15:58:17.916" endtime="20231127 15:58:17.920"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:17.922" level="INFO">å¼é¨</msg>
<msg timestamp="20231127 15:58:17.922" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231127 15:58:17.921" endtime="20231127 15:58:17.922"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:17.923" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:58:17.923" endtime="20231127 15:58:17.923"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:17.924" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231127 15:58:17.923" endtime="20231127 15:58:17.924"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:58:17.925" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:58:17.925" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231127 15:58:17.924" endtime="20231127 15:58:17.925"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:58:17.926" endtime="20231127 15:58:17.926"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:17.926" endtime="20231127 15:58:17.927"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.926" endtime="20231127 15:58:17.927"/>
</kw>
<msg timestamp="20231127 15:58:17.927" level="INFO">${status} = 开门</msg>
<status status="PASS" starttime="20231127 15:58:17.751" endtime="20231127 15:58:17.928"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:17.928" endtime="20231127 15:58:17.929"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.928" endtime="20231127 15:58:17.929"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:58:17.930" endtime="20231127 15:58:17.930"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:17.929" endtime="20231127 15:58:17.930"/>
</branch>
<status status="PASS" starttime="20231127 15:58:17.928" endtime="20231127 15:58:17.930"/>
</if>
<status status="PASS" starttime="20231127 15:58:17.750" endtime="20231127 15:58:17.930"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${e_gate}</arg>
<arg>close</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:17.932" endtime="20231127 15:58:17.932"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:17.933" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:18.079" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:17 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:17.933" endtime="20231127 15:58:18.079"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:18.084" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:18.080" endtime="20231127 15:58:18.084"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:18.091" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:18.084" endtime="20231127 15:58:18.091"/>
</kw>
<status status="PASS" starttime="20231127 15:58:17.931" endtime="20231127 15:58:18.091"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:18.094" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231127 15:58:18.091" endtime="20231127 15:58:18.094"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:18.096" level="INFO">å³é¨</msg>
<msg timestamp="20231127 15:58:18.097" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231127 15:58:18.095" endtime="20231127 15:58:18.097"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.097" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:58:18.097" endtime="20231127 15:58:18.098"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.098" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231127 15:58:18.098" endtime="20231127 15:58:18.099"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:58:18.099" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:58:18.099" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231127 15:58:18.099" endtime="20231127 15:58:18.100"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:58:18.100" endtime="20231127 15:58:18.100"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:18.101" endtime="20231127 15:58:18.102"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.100" endtime="20231127 15:58:18.102"/>
</kw>
<msg timestamp="20231127 15:58:18.102" level="INFO">${status} = 关门</msg>
<status status="PASS" starttime="20231127 15:58:17.931" endtime="20231127 15:58:18.103"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:58:18.103" endtime="20231127 15:58:18.104"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:18.103" endtime="20231127 15:58:18.104"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:18.104" endtime="20231127 15:58:18.105"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.104" endtime="20231127 15:58:18.105"/>
</branch>
<status status="PASS" starttime="20231127 15:58:18.103" endtime="20231127 15:58:18.105"/>
</if>
<status status="PASS" starttime="20231127 15:58:17.930" endtime="20231127 15:58:18.105"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:18.107" endtime="20231127 15:58:18.108"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:18.108" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:18.256" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:18 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:18.108" endtime="20231127 15:58:18.256"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:18.261" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:18.256" endtime="20231127 15:58:18.261"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:18.267" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:18.261" endtime="20231127 15:58:18.268"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.107" endtime="20231127 15:58:18.268"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:18.269" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:18.268" endtime="20231127 15:58:18.269"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:18.272" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:18.269" endtime="20231127 15:58:18.272"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:18.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:18.273" endtime="20231127 15:58:18.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:18.278" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:18.278" endtime="20231127 15:58:18.278"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:18.279" endtime="20231127 15:58:18.279"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:18.279" endtime="20231127 15:58:18.280"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:18.280" endtime="20231127 15:58:18.280"/>
</return>
<status status="PASS" starttime="20231127 15:58:18.268" endtime="20231127 15:58:18.281"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.106" endtime="20231127 15:58:18.281"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:18.283" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:18.282" endtime="20231127 15:58:18.283"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:18.285" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:18.283" endtime="20231127 15:58:18.286"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:18.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:18.286" endtime="20231127 15:58:18.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:18.287" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:18.287" endtime="20231127 15:58:18.287"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:18.288" endtime="20231127 15:58:18.289"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:18.289" endtime="20231127 15:58:18.289"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:18.290" endtime="20231127 15:58:18.290"/>
</return>
<status status="PASS" starttime="20231127 15:58:18.281" endtime="20231127 15:58:18.290"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:18.291" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:18.291" endtime="20231127 15:58:18.291"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:18.294" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:18.292" endtime="20231127 15:58:18.294"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:18.860" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:58:18.861" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:18.294" endtime="20231127 15:58:18.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:18.861" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:58:18.861" endtime="20231127 15:58:18.862"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.862" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:18.862" endtime="20231127 15:58:18.862"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:18.863" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:18.862" endtime="20231127 15:58:18.863"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:18.863" endtime="20231127 15:58:18.863"/>
</return>
<msg timestamp="20231127 15:58:18.863" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:18.290" endtime="20231127 15:58:18.863"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:58:18.864" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:58:18.864" level="INFO">${lines} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:58:18.864" endtime="20231127 15:58:18.864"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:18.865" level="INFO">${line} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:58:18.864" endtime="20231127 15:58:18.865"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:58:18.867" level="INFO">${line_array} = ['|    |      | 170', 'ss  |']</msg>
<status status="PASS" starttime="20231127 15:58:18.865" endtime="20231127 15:58:18.867"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:58:18.869" level="INFO">${dev_name_array} = ['|', '|', '|', '170']</msg>
<status status="PASS" starttime="20231127 15:58:18.868" endtime="20231127 15:58:18.870"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:18.871" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:58:18.870" endtime="20231127 15:58:18.871"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:18.872" endtime="20231127 15:58:18.873"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.871" endtime="20231127 15:58:18.874"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:58:18.874" endtime="20231127 15:58:18.875"/>
</return>
<msg timestamp="20231127 15:58:18.875" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:58:18.106" endtime="20231127 15:58:18.875"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:18.877" endtime="20231127 15:58:18.879"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:18.880" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:19.029" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:18 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:18.879" endtime="20231127 15:58:19.029"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.037" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:19.030" endtime="20231127 15:58:19.038"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.048" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:19.040" endtime="20231127 15:58:19.048"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.877" endtime="20231127 15:58:19.048"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.050" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:19.049" endtime="20231127 15:58:19.050"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.054" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:19.050" endtime="20231127 15:58:19.054"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.054" endtime="20231127 15:58:19.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.060" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:19.060" endtime="20231127 15:58:19.060"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.061" endtime="20231127 15:58:19.061"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.062" endtime="20231127 15:58:19.062"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:19.062" endtime="20231127 15:58:19.063"/>
</return>
<status status="PASS" starttime="20231127 15:58:19.049" endtime="20231127 15:58:19.063"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.876" endtime="20231127 15:58:19.063"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.064" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:19.064" endtime="20231127 15:58:19.064"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.067" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:19.065" endtime="20231127 15:58:19.067"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.068" endtime="20231127 15:58:19.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.069" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:19.069" endtime="20231127 15:58:19.069"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.069" endtime="20231127 15:58:19.070"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.070" endtime="20231127 15:58:19.071"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:19.071" endtime="20231127 15:58:19.071"/>
</return>
<status status="PASS" starttime="20231127 15:58:19.063" endtime="20231127 15:58:19.072"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.073" level="INFO">mock_device_action 170 scale 0</msg>
<status status="PASS" starttime="20231127 15:58:19.072" endtime="20231127 15:58:19.073"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.076" level="INFO">mock_device_action 170 scale 0</msg>
<status status="PASS" starttime="20231127 15:58:19.073" endtime="20231127 15:58:19.076"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.076" endtime="20231127 15:58:19.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.082" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:19.082" endtime="20231127 15:58:19.083"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.083" endtime="20231127 15:58:19.084"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.084" endtime="20231127 15:58:19.085"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:19.085" endtime="20231127 15:58:19.085"/>
</return>
<status status="PASS" starttime="20231127 15:58:19.072" endtime="20231127 15:58:19.085"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:19.086" endtime="20231127 15:58:19.086"/>
</kw>
<status status="PASS" starttime="20231127 15:58:19.085" endtime="20231127 15:58:19.087"/>
</kw>
<status status="PASS" starttime="20231127 15:58:18.105" endtime="20231127 15:58:19.087"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:19.089" endtime="20231127 15:58:19.090"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:19.091" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:19.240" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:18 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:19.090" endtime="20231127 15:58:19.240"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.244" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:19.240" endtime="20231127 15:58:19.244"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.251" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:19.244" endtime="20231127 15:58:19.252"/>
</kw>
<status status="PASS" starttime="20231127 15:58:19.089" endtime="20231127 15:58:19.252"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.253" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:19.253" endtime="20231127 15:58:19.253"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.257" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:19.253" endtime="20231127 15:58:19.257"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.257" endtime="20231127 15:58:19.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.262" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:19.262" endtime="20231127 15:58:19.263"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.263" endtime="20231127 15:58:19.263"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.264" endtime="20231127 15:58:19.264"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:19.265" endtime="20231127 15:58:19.265"/>
</return>
<status status="PASS" starttime="20231127 15:58:19.252" endtime="20231127 15:58:19.265"/>
</kw>
<status status="PASS" starttime="20231127 15:58:19.088" endtime="20231127 15:58:19.265"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.266" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:19.266" endtime="20231127 15:58:19.266"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.269" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:19.267" endtime="20231127 15:58:19.269"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.270" endtime="20231127 15:58:19.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.271" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:19.271" endtime="20231127 15:58:19.271"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.272" endtime="20231127 15:58:19.272"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:19.273" endtime="20231127 15:58:19.273"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:19.274" endtime="20231127 15:58:19.274"/>
</return>
<status status="PASS" starttime="20231127 15:58:19.265" endtime="20231127 15:58:19.274"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.275" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:19.275" endtime="20231127 15:58:19.275"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:19.278" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:19.275" endtime="20231127 15:58:19.278"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:19.876" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:58:19.876" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:19.278" endtime="20231127 15:58:19.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:19.877" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:58:19.877" endtime="20231127 15:58:19.877"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.878" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:19.877" endtime="20231127 15:58:19.878"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:19.879" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:19.878" endtime="20231127 15:58:19.879"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:19.879" endtime="20231127 15:58:19.879"/>
</return>
<msg timestamp="20231127 15:58:19.879" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:19.274" endtime="20231127 15:58:19.880"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:58:19.880" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:58:19.880" level="INFO">${lines} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:58:19.880" endtime="20231127 15:58:19.880"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:19.881" level="INFO">${line} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:58:19.881" endtime="20231127 15:58:19.881"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:58:19.882" level="INFO">${line_array} = ['|    |      | 169', 'bg  |']</msg>
<status status="PASS" starttime="20231127 15:58:19.881" endtime="20231127 15:58:19.882"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:58:19.883" level="INFO">${dev_name_array} = ['|', '|', '|', '169']</msg>
<status status="PASS" starttime="20231127 15:58:19.882" endtime="20231127 15:58:19.883"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:19.885" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:58:19.884" endtime="20231127 15:58:19.885"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:19.886" endtime="20231127 15:58:19.887"/>
</kw>
<status status="PASS" starttime="20231127 15:58:19.885" endtime="20231127 15:58:19.887"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:58:19.887" endtime="20231127 15:58:19.888"/>
</return>
<msg timestamp="20231127 15:58:19.889" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:58:19.088" endtime="20231127 15:58:19.889"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:19.892" endtime="20231127 15:58:19.893"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:19.894" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:20.042" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:19 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:19.893" endtime="20231127 15:58:20.042"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:20.046" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:20.043" endtime="20231127 15:58:20.047"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:20.054" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:20.047" endtime="20231127 15:58:20.055"/>
</kw>
<status status="PASS" starttime="20231127 15:58:19.891" endtime="20231127 15:58:20.055"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:20.057" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:20.056" endtime="20231127 15:58:20.057"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:20.061" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:20.057" endtime="20231127 15:58:20.061"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:20.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.061" endtime="20231127 15:58:20.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:20.066" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:20.066" endtime="20231127 15:58:20.067"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:20.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.067" endtime="20231127 15:58:20.068"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:20.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.069" endtime="20231127 15:58:20.069"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:20.070" endtime="20231127 15:58:20.070"/>
</return>
<status status="PASS" starttime="20231127 15:58:20.055" endtime="20231127 15:58:20.070"/>
</kw>
<status status="PASS" starttime="20231127 15:58:19.889" endtime="20231127 15:58:20.071"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:20.072" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:20.072" endtime="20231127 15:58:20.072"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:20.076" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:20.073" endtime="20231127 15:58:20.076"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:20.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.076" endtime="20231127 15:58:20.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:20.078" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:20.077" endtime="20231127 15:58:20.078"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:20.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.078" endtime="20231127 15:58:20.079"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:20.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.079" endtime="20231127 15:58:20.080"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:20.080" endtime="20231127 15:58:20.080"/>
</return>
<status status="PASS" starttime="20231127 15:58:20.071" endtime="20231127 15:58:20.080"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:20.082" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:58:20.081" endtime="20231127 15:58:20.082"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:20.084" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:58:20.082" endtime="20231127 15:58:20.085"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:20.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.085" endtime="20231127 15:58:20.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:20.091" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:20.090" endtime="20231127 15:58:20.091"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:20.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.091" endtime="20231127 15:58:20.092"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:20.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:20.092" endtime="20231127 15:58:20.093"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:20.093" endtime="20231127 15:58:20.093"/>
</return>
<status status="PASS" starttime="20231127 15:58:20.081" endtime="20231127 15:58:20.093"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:20.094" endtime="20231127 15:58:20.095"/>
</kw>
<status status="PASS" starttime="20231127 15:58:20.094" endtime="20231127 15:58:20.095"/>
</kw>
<status status="PASS" starttime="20231127 15:58:19.087" endtime="20231127 15:58:20.095"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:58:25.096" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231127 15:58:20.095" endtime="20231127 15:58:25.096"/>
</kw>
<status status="PASS" starttime="20231127 15:57:46.990" endtime="20231127 15:58:25.097"/>
</kw>
<kw name="Check Order Status" library="order_opt">
<arg>${order_number}</arg>
<kw name="Get Order By Order Number Exist" library="order_opt">
<var>${found_order}</var>
<arg>order_number=${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>order_number=${order_number}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:58:25.100" level="INFO">${search_condition} = {'order_number': '1701071858109'}</msg>
<status status="PASS" starttime="20231127 15:58:25.099" endtime="20231127 15:58:25.100"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/get</arg>
<arg>${search_condition}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<status status="NOT RUN" starttime="20231127 15:58:25.102" endtime="20231127 15:58:25.103"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.103" endtime="20231127 15:58:25.103"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:58:25.103" endtime="20231127 15:58:25.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.104" endtime="20231127 15:58:25.104"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:58:25.105" endtime="20231127 15:58:25.105"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:58:25.105" endtime="20231127 15:58:25.106"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:25.105" endtime="20231127 15:58:25.106"/>
</branch>
<status status="NOT RUN" starttime="20231127 15:58:25.105" endtime="20231127 15:58:25.106"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.106" endtime="20231127 15:58:25.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.107" endtime="20231127 15:58:25.107"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:25.102" endtime="20231127 15:58:25.107"/>
</branch>
<status status="PASS" starttime="20231127 15:58:25.102" endtime="20231127 15:58:25.107"/>
</if>
<status status="PASS" starttime="20231127 15:58:25.101" endtime="20231127 15:58:25.107"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:58:25.109" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:58:25.108" endtime="20231127 15:58:25.109"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:58:25.110" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:58:25.109" endtime="20231127 15:58:25.110"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:58:25.111" level="INFO">Length is 1</msg>
<msg timestamp="20231127 15:58:25.112" level="INFO">${req_len} = 1</msg>
<status status="PASS" starttime="20231127 15:58:25.110" endtime="20231127 15:58:25.113"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:58:25.114" level="INFO">${req_json} = {'order_number': '1701071858109'}</msg>
<status status="PASS" starttime="20231127 15:58:25.113" endtime="20231127 15:58:25.114"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:58:25.144" level="INFO">POST Request : url=http://localhost:31700/api/order/get 
 path_url=/api/order/get 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '33', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "1701071858109"}' 
 </msg>
<msg timestamp="20231127 15:58:25.145" level="INFO">POST Response : url=http://localhost:31700/api/order/get 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:58:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '939', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"3ab-vTKPL+UTg62KhhLx7YfgXYOKEvQ"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":{"id":109,"order_number":"1701071858109","plate_number":"京A12345","back_plate_number":"","driver_name":"张三","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":20.23,"m_weight":0,"enter_weight":0,"reg_info":{"operator_name":"abc","operator_time":"2023-11-27 15:57:40"},"call_info":{"operator_name":"(自动)","operator_time":"2023-11-27 15:57:40"},"confirm_info":{"operator_name":"","operator_time":""},"seal_no":"","history_records":[{"node_name":"一次称重","node_caller":"自动","occour_time":"2023-11-27 15:58:08","id":67}],"order_attachs":[{"att_name":"上磅照片","att_path":"/files/A80F3A4DACC7457EA191BA856045D386.txt","id":211},{"att_name":"过磅录像","att_path":"","id":212},{"att_name":"过磅录像","att_path":"","id":213}],"p_time":"2023-11-27 15:58:08","m_time":"","is_sale":false,"status":2,"company_name":"京东","stuff_from":"","reg_no":102}} 
 </msg>
<msg timestamp="20231127 15:58:25.145" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:58:25.114" endtime="20231127 15:58:25.145"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:58:25.145" endtime="20231127 15:58:25.146"/>
</return>
<msg timestamp="20231127 15:58:25.146" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:58:25.108" endtime="20231127 15:58:25.146"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:58:25.147" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:58:25.146" endtime="20231127 15:58:25.148"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:58:25.148" endtime="20231127 15:58:25.148"/>
</return>
<msg timestamp="20231127 15:58:25.149" level="INFO">${search_result} = {'id': 109, 'order_number': '1701071858109', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '张三', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'L...</msg>
<status status="PASS" starttime="20231127 15:58:25.101" endtime="20231127 15:58:25.149"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231127 15:58:25.149" endtime="20231127 15:58:25.150"/>
</return>
<msg timestamp="20231127 15:58:25.150" level="INFO">${found_order} = {'id': 109, 'order_number': '1701071858109', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '张三', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'L...</msg>
<status status="PASS" starttime="20231127 15:58:25.098" endtime="20231127 15:58:25.150"/>
</kw>
<if>
<branch type="IF" condition="$open_or_close == 'open'">
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<msg timestamp="20231127 15:58:25.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231127 15:58:25.151" endtime="20231127 15:58:25.152"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.150" endtime="20231127 15:58:25.152"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.152" endtime="20231127 15:58:25.152"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:25.152" endtime="20231127 15:58:25.152"/>
</branch>
<status status="PASS" starttime="20231127 15:58:25.150" endtime="20231127 15:58:25.153"/>
</if>
<status status="PASS" starttime="20231127 15:58:25.097" endtime="20231127 15:58:25.153"/>
</kw>
<kw name="Confirm Order" library="field_opt">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${confirm_req}</var>
<arg>order_number=${order_number}</arg>
<arg>is_confirm=${is_confirm}</arg>
<arg>opt_name=abc</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:58:25.154" level="INFO">${confirm_req} = {'order_number': '1701071858109', 'is_confirm': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231127 15:58:25.154" endtime="20231127 15:58:25.154"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/confirm</arg>
<arg>${confirm_req}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<status status="NOT RUN" starttime="20231127 15:58:25.156" endtime="20231127 15:58:25.156"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.156" endtime="20231127 15:58:25.157"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:58:25.157" endtime="20231127 15:58:25.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.157" endtime="20231127 15:58:25.158"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:58:25.158" endtime="20231127 15:58:25.158"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:58:25.158" endtime="20231127 15:58:25.159"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:25.158" endtime="20231127 15:58:25.159"/>
</branch>
<status status="NOT RUN" starttime="20231127 15:58:25.158" endtime="20231127 15:58:25.159"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.159" endtime="20231127 15:58:25.159"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231127 15:58:25.159" endtime="20231127 15:58:25.160"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:25.156" endtime="20231127 15:58:25.160"/>
</branch>
<status status="PASS" starttime="20231127 15:58:25.155" endtime="20231127 15:58:25.160"/>
</if>
<status status="PASS" starttime="20231127 15:58:25.155" endtime="20231127 15:58:25.160"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:58:25.161" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:58:25.161" endtime="20231127 15:58:25.161"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:58:25.162" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:58:25.162" endtime="20231127 15:58:25.162"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:58:25.163" level="INFO">Length is 3</msg>
<msg timestamp="20231127 15:58:25.163" level="INFO">${req_len} = 3</msg>
<status status="PASS" starttime="20231127 15:58:25.163" endtime="20231127 15:58:25.163"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:58:25.164" level="INFO">${req_json} = {'order_number': '1701071858109', 'is_confirm': True, 'opt_name': 'abc'}</msg>
<status status="PASS" starttime="20231127 15:58:25.164" endtime="20231127 15:58:25.165"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:58:25.199" level="INFO">POST Request : url=http://localhost:31700/api/order/confirm 
 path_url=/api/order/confirm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '72', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "1701071858109", "is_confirm": true, "opt_name": "abc"}' 
 </msg>
<msg timestamp="20231127 15:58:25.199" level="INFO">POST Response : url=http://localhost:31700/api/order/confirm 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:58:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231127 15:58:25.199" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:58:25.165" endtime="20231127 15:58:25.200"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:58:25.200" endtime="20231127 15:58:25.200"/>
</return>
<msg timestamp="20231127 15:58:25.200" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:58:25.160" endtime="20231127 15:58:25.200"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:58:25.202" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:58:25.201" endtime="20231127 15:58:25.202"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:58:25.202" endtime="20231127 15:58:25.202"/>
</return>
<status status="PASS" starttime="20231127 15:58:25.155" endtime="20231127 15:58:25.203"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.153" endtime="20231127 15:58:25.203"/>
</kw>
<kw name="One Time Scale" library="dev_res">
<arg>m</arg>
<arg>${m_weight}</arg>
<arg>trig_plate_no=${plate_no}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${e_gate}</var>
<arg>${s_fgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.205" level="INFO">${e_gate} = fg</msg>
<status status="PASS" starttime="20231127 15:58:25.205" endtime="20231127 15:58:25.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_gate}</var>
<arg>${s_bgate}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.206" level="INFO">${l_gate} = bg</msg>
<status status="PASS" starttime="20231127 15:58:25.205" endtime="20231127 15:58:25.206"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pc}</var>
<arg>${s_fpc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.207" level="INFO">${pc} = fpc</msg>
<status status="PASS" starttime="20231127 15:58:25.206" endtime="20231127 15:58:25.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_reader}</var>
<arg>${s_fid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.208" level="INFO">${id_reader} = fi</msg>
<status status="PASS" starttime="20231127 15:58:25.207" endtime="20231127 15:58:25.208"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_led}</var>
<arg>${s_fled}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.208" level="INFO">${e_led} = fl</msg>
<status status="PASS" starttime="20231127 15:58:25.208" endtime="20231127 15:58:25.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_led}</var>
<arg>${s_bled}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.209" level="INFO">${l_led} = bl</msg>
<status status="PASS" starttime="20231127 15:58:25.209" endtime="20231127 15:58:25.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${e_speaker}</var>
<arg>${s_speaker}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.210" level="INFO">${e_speaker} = fs</msg>
<status status="PASS" starttime="20231127 15:58:25.210" endtime="20231127 15:58:25.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${l_speaker}</var>
<arg>${s_speaker}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:25.211" level="INFO">${l_speaker} = fs</msg>
<status status="PASS" starttime="20231127 15:58:25.211" endtime="20231127 15:58:25.211"/>
</kw>
<if>
<branch type="IF" condition="$p_or_m == 'm'">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_gate}</arg>
<arg>${s_bgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231127 15:58:25.213" level="INFO">${e_gate} = bg</msg>
<status status="PASS" starttime="20231127 15:58:25.212" endtime="20231127 15:58:25.213"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_gate}</arg>
<arg>${s_fgate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231127 15:58:25.213" level="INFO">${l_gate} = fg</msg>
<status status="PASS" starttime="20231127 15:58:25.213" endtime="20231127 15:58:25.214"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${pc}</arg>
<arg>${s_bpc}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231127 15:58:25.214" level="INFO">${pc} = bpc</msg>
<status status="PASS" starttime="20231127 15:58:25.214" endtime="20231127 15:58:25.214"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_reader}</arg>
<arg>${s_bid}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231127 15:58:25.215" level="INFO">${id_reader} = bi</msg>
<status status="PASS" starttime="20231127 15:58:25.215" endtime="20231127 15:58:25.216"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${e_led}</arg>
<arg>${s_bled}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231127 15:58:25.217" level="INFO">${e_led} = bl</msg>
<status status="PASS" starttime="20231127 15:58:25.216" endtime="20231127 15:58:25.217"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${l_led}</arg>
<arg>${s_fled}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231127 15:58:25.217" level="INFO">${l_led} = fl</msg>
<status status="PASS" starttime="20231127 15:58:25.217" endtime="20231127 15:58:25.218"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.211" endtime="20231127 15:58:25.218"/>
</branch>
<status status="PASS" starttime="20231127 15:58:25.211" endtime="20231127 15:58:25.218"/>
</if>
<if>
<branch type="IF" condition="$cam_or_id == 'cam'">
<kw name="Mock Plate Cap" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>${pc}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:25.221" endtime="20231127 15:58:25.221"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:25.222" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:25.369" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:19 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:25.221" endtime="20231127 15:58:25.370"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:25.373" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:25.370" endtime="20231127 15:58:25.373"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:25.379" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:25.374" endtime="20231127 15:58:25.379"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.220" endtime="20231127 15:58:25.380"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:25.381" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:25.380" endtime="20231127 15:58:25.381"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:25.384" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:25.381" endtime="20231127 15:58:25.384"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:25.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:25.384" endtime="20231127 15:58:25.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:25.389" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:25.389" endtime="20231127 15:58:25.390"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:25.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:25.390" endtime="20231127 15:58:25.391"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:25.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:25.391" endtime="20231127 15:58:25.392"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:25.392" endtime="20231127 15:58:25.392"/>
</return>
<status status="PASS" starttime="20231127 15:58:25.380" endtime="20231127 15:58:25.392"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.220" endtime="20231127 15:58:25.392"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:25.393" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:25.393" endtime="20231127 15:58:25.394"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:25.397" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:25.394" endtime="20231127 15:58:25.397"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:25.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:25.397" endtime="20231127 15:58:25.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:25.399" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:25.398" endtime="20231127 15:58:25.399"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:25.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:25.399" endtime="20231127 15:58:25.400"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:25.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:25.400" endtime="20231127 15:58:25.401"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:25.401" endtime="20231127 15:58:25.401"/>
</return>
<status status="PASS" starttime="20231127 15:58:25.393" endtime="20231127 15:58:25.402"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:25.403" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:25.402" endtime="20231127 15:58:25.403"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:25.406" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:25.403" endtime="20231127 15:58:25.406"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:26.003" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:58:26.003" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:25.406" endtime="20231127 15:58:26.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:26.004" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:58:26.003" endtime="20231127 15:58:26.004"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.005" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:26.004" endtime="20231127 15:58:26.005"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.006" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:26.005" endtime="20231127 15:58:26.006"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:26.006" endtime="20231127 15:58:26.006"/>
</return>
<msg timestamp="20231127 15:58:26.006" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:25.402" endtime="20231127 15:58:26.006"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:58:26.007" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:58:26.007" level="INFO">${lines} = |    |      | 162:bpc |</msg>
<status status="PASS" starttime="20231127 15:58:26.007" endtime="20231127 15:58:26.007"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:26.008" level="INFO">${line} = |    |      | 162:bpc |</msg>
<status status="PASS" starttime="20231127 15:58:26.007" endtime="20231127 15:58:26.008"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:58:26.008" level="INFO">${line_array} = ['|    |      | 162', 'bpc |']</msg>
<status status="PASS" starttime="20231127 15:58:26.008" endtime="20231127 15:58:26.008"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:58:26.009" level="INFO">${dev_name_array} = ['|', '|', '|', '162']</msg>
<status status="PASS" starttime="20231127 15:58:26.009" endtime="20231127 15:58:26.010"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:26.011" level="INFO">${dev_id} = 162</msg>
<status status="PASS" starttime="20231127 15:58:26.010" endtime="20231127 15:58:26.011"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:26.011" endtime="20231127 15:58:26.012"/>
</kw>
<status status="PASS" starttime="20231127 15:58:26.011" endtime="20231127 15:58:26.013"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:58:26.013" endtime="20231127 15:58:26.013"/>
</return>
<msg timestamp="20231127 15:58:26.014" level="INFO">${dev_id} = 162</msg>
<status status="PASS" starttime="20231127 15:58:25.219" endtime="20231127 15:58:26.014"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:26.016" endtime="20231127 15:58:26.017"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:26.018" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:26.167" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:25 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:26.018" endtime="20231127 15:58:26.167"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:26.172" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:26.168" endtime="20231127 15:58:26.172"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:26.181" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:26.173" endtime="20231127 15:58:26.181"/>
</kw>
<status status="PASS" starttime="20231127 15:58:26.015" endtime="20231127 15:58:26.181"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:26.184" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:26.183" endtime="20231127 15:58:26.184"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:26.188" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:26.184" endtime="20231127 15:58:26.188"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:26.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.188" endtime="20231127 15:58:26.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:26.196" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:26.195" endtime="20231127 15:58:26.196"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.196" endtime="20231127 15:58:26.197"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.197" endtime="20231127 15:58:26.198"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:26.198" endtime="20231127 15:58:26.198"/>
</return>
<status status="PASS" starttime="20231127 15:58:26.182" endtime="20231127 15:58:26.199"/>
</kw>
<status status="PASS" starttime="20231127 15:58:26.014" endtime="20231127 15:58:26.199"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:26.200" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:26.200" endtime="20231127 15:58:26.200"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:26.203" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:26.201" endtime="20231127 15:58:26.204"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:26.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.204" endtime="20231127 15:58:26.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:26.206" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:26.205" endtime="20231127 15:58:26.206"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.206" endtime="20231127 15:58:26.207"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.207" endtime="20231127 15:58:26.208"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:26.208" endtime="20231127 15:58:26.208"/>
</return>
<status status="PASS" starttime="20231127 15:58:26.199" endtime="20231127 15:58:26.209"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} plate ${plate_no}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:26.210" level="INFO">mock_device_action 162 plate 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:26.210" endtime="20231127 15:58:26.210"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:26.213" level="INFO">mock_device_action 162 plate äº¬A12345</msg>
<status status="PASS" starttime="20231127 15:58:26.210" endtime="20231127 15:58:26.213"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:26.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.214" endtime="20231127 15:58:26.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:26.220" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:26.220" endtime="20231127 15:58:26.220"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.221" endtime="20231127 15:58:26.222"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:26.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:26.222" endtime="20231127 15:58:26.223"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:26.223" endtime="20231127 15:58:26.223"/>
</return>
<status status="PASS" starttime="20231127 15:58:26.209" endtime="20231127 15:58:26.224"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:26.224" endtime="20231127 15:58:26.225"/>
</kw>
<status status="PASS" starttime="20231127 15:58:26.224" endtime="20231127 15:58:26.225"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.218" endtime="20231127 15:58:26.225"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.218" endtime="20231127 15:58:26.226"/>
</branch>
<branch type="ELSE">
<kw name="Mock Id Read" library="dev_res">
<arg>${trig_driver_id}</arg>
<arg>${id_reader}</arg>
<status status="NOT RUN" starttime="20231127 15:58:26.226" endtime="20231127 15:58:26.226"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:26.226" endtime="20231127 15:58:26.226"/>
</branch>
<status status="PASS" starttime="20231127 15:58:25.218" endtime="20231127 15:58:26.226"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:58:27.228" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20231127 15:58:26.227" endtime="20231127 15:58:27.229"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请上磅</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:27.233" endtime="20231127 15:58:27.234"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:27.234" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:27.381" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:26 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.234" endtime="20231127 15:58:27.381"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.387" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:27.381" endtime="20231127 15:58:27.389"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.400" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.390" endtime="20231127 15:58:27.400"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.232" endtime="20231127 15:58:27.401"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.405" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:27.401" endtime="20231127 15:58:27.405"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.408" level="INFO">ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26</msg>
<msg timestamp="20231127 15:58:27.409" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.406" endtime="20231127 15:58:27.409"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.409" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.409" endtime="20231127 15:58:27.410"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.410" level="INFO">${status} = 卓创智汇
京A12345
请上磅
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.410" endtime="20231127 15:58:27.410"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:27.411" level="INFO">${line_focus} = 请上磅</msg>
<status status="PASS" starttime="20231127 15:58:27.411" endtime="20231127 15:58:27.411"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:27.411" endtime="20231127 15:58:27.412"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:27.412" endtime="20231127 15:58:27.413"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.412" endtime="20231127 15:58:27.413"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.230" endtime="20231127 15:58:27.414"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:27.416" endtime="20231127 15:58:27.417"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:27.418" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:27.567" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:27 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.418" endtime="20231127 15:58:27.567"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.572" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:27.567" endtime="20231127 15:58:27.573"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.580" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.573" endtime="20231127 15:58:27.580"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.416" endtime="20231127 15:58:27.580"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.583" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:27.580" endtime="20231127 15:58:27.583"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.586" level="INFO">ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26</msg>
<msg timestamp="20231127 15:58:27.586" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.584" endtime="20231127 15:58:27.586"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.587" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.586" endtime="20231127 15:58:27.587"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.587" level="INFO">${status} = 卓创智汇
京A12345
请上磅
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.587" endtime="20231127 15:58:27.588"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:27.589" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:27.588" endtime="20231127 15:58:27.589"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:27.589" endtime="20231127 15:58:27.589"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:27.590" endtime="20231127 15:58:27.591"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.590" endtime="20231127 15:58:27.591"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.415" endtime="20231127 15:58:27.591"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.414" endtime="20231127 15:58:27.591"/>
</branch>
<status status="PASS" starttime="20231127 15:58:27.414" endtime="20231127 15:58:27.592"/>
</if>
<status status="PASS" starttime="20231127 15:58:27.229" endtime="20231127 15:58:27.592"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请上磅</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:27.594" endtime="20231127 15:58:27.594"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:27.595" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:27.740" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:27 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.594" endtime="20231127 15:58:27.741"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.745" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:27.741" endtime="20231127 15:58:27.745"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.751" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.745" endtime="20231127 15:58:27.752"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.593" endtime="20231127 15:58:27.752"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.755" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:27.752" endtime="20231127 15:58:27.756"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.759" level="INFO">ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26</msg>
<msg timestamp="20231127 15:58:27.759" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.756" endtime="20231127 15:58:27.759"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.760" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.759" endtime="20231127 15:58:27.760"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.761" level="INFO">${status} = 卓创智汇
京A12345
请上磅
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.760" endtime="20231127 15:58:27.761"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:27.762" level="INFO">${line_focus} = 请上磅</msg>
<status status="PASS" starttime="20231127 15:58:27.761" endtime="20231127 15:58:27.762"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:27.762" endtime="20231127 15:58:27.763"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:27.764" endtime="20231127 15:58:27.764"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.763" endtime="20231127 15:58:27.764"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.593" endtime="20231127 15:58:27.764"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:27.766" endtime="20231127 15:58:27.767"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:27.767" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:27.918" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:27 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.767" endtime="20231127 15:58:27.918"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.923" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:27.919" endtime="20231127 15:58:27.923"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.930" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:27.923" endtime="20231127 15:58:27.930"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.766" endtime="20231127 15:58:27.930"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:27.934" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:27.930" endtime="20231127 15:58:27.934"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:27.937" level="INFO">ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26</msg>
<msg timestamp="20231127 15:58:27.937" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ä¸ç£
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.934" endtime="20231127 15:58:27.937"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.938" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.937" endtime="20231127 15:58:27.938"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:27.939" level="INFO">${status} = 卓创智汇
京A12345
请上磅
2023-11-27 15:58:26
</msg>
<status status="PASS" starttime="20231127 15:58:27.938" endtime="20231127 15:58:27.939"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:27.940" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:27.939" endtime="20231127 15:58:27.940"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:27.940" endtime="20231127 15:58:27.941"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:27.941" endtime="20231127 15:58:27.942"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.941" endtime="20231127 15:58:27.942"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.765" endtime="20231127 15:58:27.942"/>
</kw>
<status status="PASS" starttime="20231127 15:58:27.765" endtime="20231127 15:58:27.942"/>
</branch>
<status status="PASS" starttime="20231127 15:58:27.765" endtime="20231127 15:58:27.942"/>
</if>
<status status="PASS" starttime="20231127 15:58:27.592" endtime="20231127 15:58:27.943"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:58:30.944" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231127 15:58:27.943" endtime="20231127 15:58:30.944"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${e_gate}</arg>
<arg>open</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:30.948" endtime="20231127 15:58:30.949"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:30.950" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:31.101" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:27 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:30.949" endtime="20231127 15:58:31.102"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.107" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:31.102" endtime="20231127 15:58:31.107"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.114" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.107" endtime="20231127 15:58:31.115"/>
</kw>
<status status="PASS" starttime="20231127 15:58:30.947" endtime="20231127 15:58:31.115"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.119" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231127 15:58:31.115" endtime="20231127 15:58:31.120"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.122" level="INFO">å¼é¨</msg>
<msg timestamp="20231127 15:58:31.122" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231127 15:58:31.120" endtime="20231127 15:58:31.122"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.123" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:58:31.123" endtime="20231127 15:58:31.123"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.124" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231127 15:58:31.124" endtime="20231127 15:58:31.124"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:58:31.125" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:58:31.125" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231127 15:58:31.125" endtime="20231127 15:58:31.125"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:58:31.126" endtime="20231127 15:58:31.126"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:31.127" endtime="20231127 15:58:31.127"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.126" endtime="20231127 15:58:31.127"/>
</kw>
<msg timestamp="20231127 15:58:31.128" level="INFO">${status} = 开门</msg>
<status status="PASS" starttime="20231127 15:58:30.946" endtime="20231127 15:58:31.128"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:31.128" endtime="20231127 15:58:31.129"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.128" endtime="20231127 15:58:31.129"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:58:31.130" endtime="20231127 15:58:31.130"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:31.129" endtime="20231127 15:58:31.130"/>
</branch>
<status status="PASS" starttime="20231127 15:58:31.128" endtime="20231127 15:58:31.130"/>
</if>
<status status="PASS" starttime="20231127 15:58:30.945" endtime="20231127 15:58:31.130"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${l_gate}</arg>
<arg>close</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:31.132" endtime="20231127 15:58:31.133"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:31.134" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:31.282" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:31 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.133" endtime="20231127 15:58:31.282"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.286" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:31.282" endtime="20231127 15:58:31.286"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.293" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.286" endtime="20231127 15:58:31.293"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.132" endtime="20231127 15:58:31.293"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.297" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231127 15:58:31.293" endtime="20231127 15:58:31.298"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.299" level="INFO">å³é¨</msg>
<msg timestamp="20231127 15:58:31.300" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231127 15:58:31.298" endtime="20231127 15:58:31.300"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.300" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:58:31.300" endtime="20231127 15:58:31.301"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.301" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231127 15:58:31.301" endtime="20231127 15:58:31.302"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:58:31.302" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:58:31.302" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231127 15:58:31.302" endtime="20231127 15:58:31.303"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:58:31.303" endtime="20231127 15:58:31.303"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:31.304" endtime="20231127 15:58:31.304"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.303" endtime="20231127 15:58:31.305"/>
</kw>
<msg timestamp="20231127 15:58:31.305" level="INFO">${status} = 关门</msg>
<status status="PASS" starttime="20231127 15:58:31.131" endtime="20231127 15:58:31.305"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:58:31.306" endtime="20231127 15:58:31.306"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:31.305" endtime="20231127 15:58:31.307"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:31.307" endtime="20231127 15:58:31.308"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.307" endtime="20231127 15:58:31.308"/>
</branch>
<status status="PASS" starttime="20231127 15:58:31.305" endtime="20231127 15:58:31.308"/>
</if>
<status status="PASS" starttime="20231127 15:58:31.131" endtime="20231127 15:58:31.308"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>车辆未完全上磅</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:31.310" endtime="20231127 15:58:31.310"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:31.311" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:31.456" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:31 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.311" endtime="20231127 15:58:31.456"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.460" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:31.456" endtime="20231127 15:58:31.460"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.466" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.460" endtime="20231127 15:58:31.467"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.309" endtime="20231127 15:58:31.467"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.471" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:31.467" endtime="20231127 15:58:31.471"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.474" level="INFO">ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:28</msg>
<msg timestamp="20231127 15:58:31.475" level="INFO">${status} = ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:28
</msg>
<status status="PASS" starttime="20231127 15:58:31.472" endtime="20231127 15:58:31.475"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.476" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xbd\xa6\xe8\xbe\x86\xe6\x9c\xaa\xe5\xae\x8c\xe5\x85\xa8\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:28
</msg>
<status status="PASS" starttime="20231127 15:58:31.475" endtime="20231127 15:58:31.476"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.477" level="INFO">${status} = 卓创智汇
京A12345
车辆未完全上磅
2023-11-27 15:58:28
</msg>
<status status="PASS" starttime="20231127 15:58:31.476" endtime="20231127 15:58:31.477"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:31.478" level="INFO">${line_focus} = 车辆未完全上磅</msg>
<status status="PASS" starttime="20231127 15:58:31.478" endtime="20231127 15:58:31.478"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:31.478" endtime="20231127 15:58:31.479"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:31.480" endtime="20231127 15:58:31.480"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.479" endtime="20231127 15:58:31.480"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.309" endtime="20231127 15:58:31.480"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:31.482" endtime="20231127 15:58:31.483"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:31.483" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:31.644" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:31 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.483" endtime="20231127 15:58:31.644"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.648" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:31.644" endtime="20231127 15:58:31.648"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.655" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.649" endtime="20231127 15:58:31.655"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.482" endtime="20231127 15:58:31.655"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.659" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:31.655" endtime="20231127 15:58:31.659"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.662" level="INFO">ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:28</msg>
<msg timestamp="20231127 15:58:31.663" level="INFO">${status} = ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:28
</msg>
<status status="PASS" starttime="20231127 15:58:31.660" endtime="20231127 15:58:31.663"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.663" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xbd\xa6\xe8\xbe\x86\xe6\x9c\xaa\xe5\xae\x8c\xe5\x85\xa8\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:28
</msg>
<status status="PASS" starttime="20231127 15:58:31.663" endtime="20231127 15:58:31.664"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.664" level="INFO">${status} = 卓创智汇
京A12345
车辆未完全上磅
2023-11-27 15:58:28
</msg>
<status status="PASS" starttime="20231127 15:58:31.664" endtime="20231127 15:58:31.665"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:31.665" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:31.665" endtime="20231127 15:58:31.666"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:31.666" endtime="20231127 15:58:31.666"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:31.667" endtime="20231127 15:58:31.668"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.667" endtime="20231127 15:58:31.668"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.481" endtime="20231127 15:58:31.669"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.481" endtime="20231127 15:58:31.669"/>
</branch>
<status status="PASS" starttime="20231127 15:58:31.481" endtime="20231127 15:58:31.669"/>
</if>
<status status="PASS" starttime="20231127 15:58:31.308" endtime="20231127 15:58:31.669"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>车辆未完全上磅</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:31.671" endtime="20231127 15:58:31.672"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:31.672" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:31.825" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:31 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.672" endtime="20231127 15:58:31.825"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.830" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:31.826" endtime="20231127 15:58:31.830"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.838" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.830" endtime="20231127 15:58:31.838"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.671" endtime="20231127 15:58:31.838"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:31.842" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:31.838" endtime="20231127 15:58:31.842"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:31.845" level="INFO">ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:31</msg>
<msg timestamp="20231127 15:58:31.845" level="INFO">${status} = ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:31
</msg>
<status status="PASS" starttime="20231127 15:58:31.842" endtime="20231127 15:58:31.845"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.846" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xbd\xa6\xe8\xbe\x86\xe6\x9c\xaa\xe5\xae\x8c\xe5\x85\xa8\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:31
</msg>
<status status="PASS" starttime="20231127 15:58:31.846" endtime="20231127 15:58:31.846"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:31.847" level="INFO">${status} = 卓创智汇
京A12345
车辆未完全上磅
2023-11-27 15:58:31
</msg>
<status status="PASS" starttime="20231127 15:58:31.847" endtime="20231127 15:58:31.847"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:31.848" level="INFO">${line_focus} = 车辆未完全上磅</msg>
<status status="PASS" starttime="20231127 15:58:31.848" endtime="20231127 15:58:31.848"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:31.848" endtime="20231127 15:58:31.849"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:31.850" endtime="20231127 15:58:31.851"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.849" endtime="20231127 15:58:31.851"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.670" endtime="20231127 15:58:31.851"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:31.853" endtime="20231127 15:58:31.854"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:31.855" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:32.004" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:31 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:31.854" endtime="20231127 15:58:32.004"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.009" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:32.005" endtime="20231127 15:58:32.009"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.016" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:32.009" endtime="20231127 15:58:32.017"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.852" endtime="20231127 15:58:32.017"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.020" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:32.017" endtime="20231127 15:58:32.020"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.023" level="INFO">ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:31</msg>
<msg timestamp="20231127 15:58:32.023" level="INFO">${status} = ååæºæ±
äº¬A12345
è½¦è¾æªå®å¨ä¸ç£
2023-11-27 15:58:31
</msg>
<status status="PASS" starttime="20231127 15:58:32.021" endtime="20231127 15:58:32.023"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.024" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xbd\xa6\xe8\xbe\x86\xe6\x9c\xaa\xe5\xae\x8c\xe5\x85\xa8\xe4\xb8\x8a\xe7\xa3\x85
2023-11-27 15:58:31
</msg>
<status status="PASS" starttime="20231127 15:58:32.024" endtime="20231127 15:58:32.024"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.025" level="INFO">${status} = 卓创智汇
京A12345
车辆未完全上磅
2023-11-27 15:58:31
</msg>
<status status="PASS" starttime="20231127 15:58:32.025" endtime="20231127 15:58:32.025"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:32.026" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:32.025" endtime="20231127 15:58:32.026"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:32.026" endtime="20231127 15:58:32.027"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:32.027" endtime="20231127 15:58:32.028"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.027" endtime="20231127 15:58:32.028"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.852" endtime="20231127 15:58:32.028"/>
</kw>
<status status="PASS" starttime="20231127 15:58:31.851" endtime="20231127 15:58:32.029"/>
</branch>
<status status="PASS" starttime="20231127 15:58:31.851" endtime="20231127 15:58:32.029"/>
</if>
<status status="PASS" starttime="20231127 15:58:31.669" endtime="20231127 15:58:32.029"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${e_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:32.031" endtime="20231127 15:58:32.032"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:32.033" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:32.180" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:31 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:32.032" endtime="20231127 15:58:32.180"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.185" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:32.180" endtime="20231127 15:58:32.185"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.192" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:32.185" endtime="20231127 15:58:32.192"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.031" endtime="20231127 15:58:32.193"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.194" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:32.193" endtime="20231127 15:58:32.194"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.197" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:32.194" endtime="20231127 15:58:32.197"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.198" endtime="20231127 15:58:32.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.203" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:32.202" endtime="20231127 15:58:32.205"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.205" endtime="20231127 15:58:32.206"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.206" endtime="20231127 15:58:32.206"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:32.207" endtime="20231127 15:58:32.207"/>
</return>
<status status="PASS" starttime="20231127 15:58:32.193" endtime="20231127 15:58:32.207"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.030" endtime="20231127 15:58:32.207"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.208" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:32.208" endtime="20231127 15:58:32.209"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.211" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:32.209" endtime="20231127 15:58:32.211"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.212" endtime="20231127 15:58:32.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.213" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:32.213" endtime="20231127 15:58:32.213"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.213" endtime="20231127 15:58:32.214"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.214" endtime="20231127 15:58:32.215"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:32.215" endtime="20231127 15:58:32.215"/>
</return>
<status status="PASS" starttime="20231127 15:58:32.207" endtime="20231127 15:58:32.215"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.216" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:32.216" endtime="20231127 15:58:32.217"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.219" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:32.217" endtime="20231127 15:58:32.220"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.784" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:58:32.784" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:32.220" endtime="20231127 15:58:32.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.785" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:58:32.785" endtime="20231127 15:58:32.785"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.786" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:32.786" endtime="20231127 15:58:32.786"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.787" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:32.786" endtime="20231127 15:58:32.787"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:32.787" endtime="20231127 15:58:32.787"/>
</return>
<msg timestamp="20231127 15:58:32.787" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:32.215" endtime="20231127 15:58:32.787"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:58:32.788" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:58:32.788" level="INFO">${lines} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:58:32.788" endtime="20231127 15:58:32.788"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:32.789" level="INFO">${line} = |    |      | 169:bg  |</msg>
<status status="PASS" starttime="20231127 15:58:32.788" endtime="20231127 15:58:32.789"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:58:32.789" level="INFO">${line_array} = ['|    |      | 169', 'bg  |']</msg>
<status status="PASS" starttime="20231127 15:58:32.789" endtime="20231127 15:58:32.789"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:58:32.791" level="INFO">${dev_name_array} = ['|', '|', '|', '169']</msg>
<status status="PASS" starttime="20231127 15:58:32.790" endtime="20231127 15:58:32.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:32.792" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:58:32.791" endtime="20231127 15:58:32.792"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:32.792" endtime="20231127 15:58:32.793"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.792" endtime="20231127 15:58:32.793"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:58:32.793" endtime="20231127 15:58:32.793"/>
</return>
<msg timestamp="20231127 15:58:32.794" level="INFO">${dev_id} = 169</msg>
<status status="PASS" starttime="20231127 15:58:32.030" endtime="20231127 15:58:32.794"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:32.796" endtime="20231127 15:58:32.797"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:32.798" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:32.950" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:32 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:32.798" endtime="20231127 15:58:32.950"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.954" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:32.950" endtime="20231127 15:58:32.954"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.962" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:32.955" endtime="20231127 15:58:32.962"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.795" endtime="20231127 15:58:32.962"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.963" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:32.963" endtime="20231127 15:58:32.964"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.967" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:32.964" endtime="20231127 15:58:32.967"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.967" endtime="20231127 15:58:32.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.972" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:32.972" endtime="20231127 15:58:32.972"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.973" endtime="20231127 15:58:32.973"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.973" endtime="20231127 15:58:32.974"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:32.974" endtime="20231127 15:58:32.975"/>
</return>
<status status="PASS" starttime="20231127 15:58:32.963" endtime="20231127 15:58:32.975"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.794" endtime="20231127 15:58:32.975"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.976" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:32.976" endtime="20231127 15:58:32.976"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.979" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:32.976" endtime="20231127 15:58:32.979"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.979" endtime="20231127 15:58:32.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.981" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:32.981" endtime="20231127 15:58:32.981"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.982" endtime="20231127 15:58:32.982"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.983" endtime="20231127 15:58:32.983"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:32.984" endtime="20231127 15:58:32.984"/>
</return>
<status status="PASS" starttime="20231127 15:58:32.975" endtime="20231127 15:58:32.984"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.985" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:58:32.985" endtime="20231127 15:58:32.986"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:32.988" level="INFO">mock_device_action 169 gate</msg>
<status status="PASS" starttime="20231127 15:58:32.986" endtime="20231127 15:58:32.989"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:32.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.989" endtime="20231127 15:58:32.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:32.995" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:32.995" endtime="20231127 15:58:32.995"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.995" endtime="20231127 15:58:32.996"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:32.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:32.997" endtime="20231127 15:58:32.997"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:32.998" endtime="20231127 15:58:32.998"/>
</return>
<status status="PASS" starttime="20231127 15:58:32.984" endtime="20231127 15:58:32.998"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:32.999" endtime="20231127 15:58:32.999"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.998" endtime="20231127 15:58:32.999"/>
</kw>
<status status="PASS" starttime="20231127 15:58:32.029" endtime="20231127 15:58:33.000"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>${weight}</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:33.002" endtime="20231127 15:58:33.003"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:33.003" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:33.148" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:32 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:33.003" endtime="20231127 15:58:33.148"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.153" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:33.148" endtime="20231127 15:58:33.153"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.161" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:33.153" endtime="20231127 15:58:33.161"/>
</kw>
<status status="PASS" starttime="20231127 15:58:33.002" endtime="20231127 15:58:33.162"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.163" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:33.163" endtime="20231127 15:58:33.163"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.166" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:33.163" endtime="20231127 15:58:33.166"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.166" endtime="20231127 15:58:33.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.171" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:33.171" endtime="20231127 15:58:33.172"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.172" endtime="20231127 15:58:33.173"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.173" endtime="20231127 15:58:33.174"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:33.174" endtime="20231127 15:58:33.175"/>
</return>
<status status="PASS" starttime="20231127 15:58:33.162" endtime="20231127 15:58:33.175"/>
</kw>
<status status="PASS" starttime="20231127 15:58:33.001" endtime="20231127 15:58:33.175"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.176" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:33.176" endtime="20231127 15:58:33.176"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.179" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:33.177" endtime="20231127 15:58:33.179"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.180" endtime="20231127 15:58:33.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.181" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:33.181" endtime="20231127 15:58:33.181"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.182" endtime="20231127 15:58:33.182"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.183" endtime="20231127 15:58:33.183"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:33.184" endtime="20231127 15:58:33.184"/>
</return>
<status status="PASS" starttime="20231127 15:58:33.175" endtime="20231127 15:58:33.184"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.185" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:33.185" endtime="20231127 15:58:33.186"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.188" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:33.186" endtime="20231127 15:58:33.189"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.764" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:58:33.764" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:33.189" endtime="20231127 15:58:33.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.764" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:58:33.764" endtime="20231127 15:58:33.765"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.765" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:33.765" endtime="20231127 15:58:33.765"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.766" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:33.765" endtime="20231127 15:58:33.766"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:33.766" endtime="20231127 15:58:33.767"/>
</return>
<msg timestamp="20231127 15:58:33.767" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:33.184" endtime="20231127 15:58:33.767"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:58:33.767" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:58:33.767" level="INFO">${lines} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:58:33.767" endtime="20231127 15:58:33.768"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:33.769" level="INFO">${line} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:58:33.768" endtime="20231127 15:58:33.769"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:58:33.770" level="INFO">${line_array} = ['|    |      | 170', 'ss  |']</msg>
<status status="PASS" starttime="20231127 15:58:33.770" endtime="20231127 15:58:33.771"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:58:33.774" level="INFO">${dev_name_array} = ['|', '|', '|', '170']</msg>
<status status="PASS" starttime="20231127 15:58:33.771" endtime="20231127 15:58:33.774"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:33.776" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:58:33.775" endtime="20231127 15:58:33.776"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:33.777" endtime="20231127 15:58:33.778"/>
</kw>
<status status="PASS" starttime="20231127 15:58:33.776" endtime="20231127 15:58:33.778"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:58:33.778" endtime="20231127 15:58:33.778"/>
</return>
<msg timestamp="20231127 15:58:33.778" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:58:33.001" endtime="20231127 15:58:33.779"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:33.780" endtime="20231127 15:58:33.780"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:33.781" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:33.947" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:33 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:33.781" endtime="20231127 15:58:33.947"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.952" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:33.948" endtime="20231127 15:58:33.952"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.959" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:33.952" endtime="20231127 15:58:33.959"/>
</kw>
<status status="PASS" starttime="20231127 15:58:33.779" endtime="20231127 15:58:33.960"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.961" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:33.961" endtime="20231127 15:58:33.961"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.964" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:33.962" endtime="20231127 15:58:33.964"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.965" endtime="20231127 15:58:33.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.970" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:33.969" endtime="20231127 15:58:33.970"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.970" endtime="20231127 15:58:33.971"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.971" endtime="20231127 15:58:33.972"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:33.972" endtime="20231127 15:58:33.972"/>
</return>
<status status="PASS" starttime="20231127 15:58:33.960" endtime="20231127 15:58:33.972"/>
</kw>
<status status="PASS" starttime="20231127 15:58:33.779" endtime="20231127 15:58:33.973"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.974" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:33.973" endtime="20231127 15:58:33.974"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.977" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:33.974" endtime="20231127 15:58:33.977"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.978" endtime="20231127 15:58:33.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.980" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:33.979" endtime="20231127 15:58:33.980"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.980" endtime="20231127 15:58:33.981"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.981" endtime="20231127 15:58:33.982"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:33.982" endtime="20231127 15:58:33.982"/>
</return>
<status status="PASS" starttime="20231127 15:58:33.973" endtime="20231127 15:58:33.983"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.984" level="INFO">mock_device_action 170 scale 49.21</msg>
<status status="PASS" starttime="20231127 15:58:33.983" endtime="20231127 15:58:33.984"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:33.987" level="INFO">mock_device_action 170 scale 49.21</msg>
<status status="PASS" starttime="20231127 15:58:33.984" endtime="20231127 15:58:33.987"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:33.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.987" endtime="20231127 15:58:33.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:33.993" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:33.993" endtime="20231127 15:58:33.993"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.994" endtime="20231127 15:58:33.994"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:33.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:33.994" endtime="20231127 15:58:33.995"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:33.995" endtime="20231127 15:58:33.996"/>
</return>
<status status="PASS" starttime="20231127 15:58:33.983" endtime="20231127 15:58:33.996"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:33.997" endtime="20231127 15:58:33.997"/>
</kw>
<status status="PASS" starttime="20231127 15:58:33.996" endtime="20231127 15:58:33.997"/>
</kw>
<status status="PASS" starttime="20231127 15:58:33.000" endtime="20231127 15:58:33.997"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:58:38.999" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231127 15:58:33.998" endtime="20231127 15:58:39.000"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请等待</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:39.003" endtime="20231127 15:58:39.005"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:39.006" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:39.156" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:33 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.006" endtime="20231127 15:58:39.156"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.161" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:39.157" endtime="20231127 15:58:39.161"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.168" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.161" endtime="20231127 15:58:39.168"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.003" endtime="20231127 15:58:39.168"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.172" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:39.169" endtime="20231127 15:58:39.172"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.174" level="INFO">ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34</msg>
<msg timestamp="20231127 15:58:39.174" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.172" endtime="20231127 15:58:39.175"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.175" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe7\xad\x89\xe5\xbe\x85
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.175" endtime="20231127 15:58:39.176"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.176" level="INFO">${status} = 卓创智汇
京A12345
请等待
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.176" endtime="20231127 15:58:39.177"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:39.177" level="INFO">${line_focus} = 请等待</msg>
<status status="PASS" starttime="20231127 15:58:39.177" endtime="20231127 15:58:39.178"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:39.178" endtime="20231127 15:58:39.178"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:39.179" endtime="20231127 15:58:39.180"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.178" endtime="20231127 15:58:39.180"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.001" endtime="20231127 15:58:39.180"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:39.182" endtime="20231127 15:58:39.183"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:39.183" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:39.332" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:39 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.183" endtime="20231127 15:58:39.332"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.336" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:39.332" endtime="20231127 15:58:39.336"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.343" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.337" endtime="20231127 15:58:39.343"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.181" endtime="20231127 15:58:39.343"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.347" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:39.344" endtime="20231127 15:58:39.347"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.349" level="INFO">ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34</msg>
<msg timestamp="20231127 15:58:39.349" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.347" endtime="20231127 15:58:39.349"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.350" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe7\xad\x89\xe5\xbe\x85
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.350" endtime="20231127 15:58:39.350"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.351" level="INFO">${status} = 卓创智汇
京A12345
请等待
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.351" endtime="20231127 15:58:39.351"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:39.352" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:39.351" endtime="20231127 15:58:39.352"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:39.352" endtime="20231127 15:58:39.353"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:39.354" endtime="20231127 15:58:39.354"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.353" endtime="20231127 15:58:39.355"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.181" endtime="20231127 15:58:39.355"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.180" endtime="20231127 15:58:39.355"/>
</branch>
<status status="PASS" starttime="20231127 15:58:39.180" endtime="20231127 15:58:39.355"/>
</if>
<status status="PASS" starttime="20231127 15:58:39.000" endtime="20231127 15:58:39.355"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>请等待</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:39.357" endtime="20231127 15:58:39.358"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:39.358" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:39.506" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:39 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.358" endtime="20231127 15:58:39.506"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.511" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:39.507" endtime="20231127 15:58:39.511"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.517" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.512" endtime="20231127 15:58:39.517"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.357" endtime="20231127 15:58:39.518"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.521" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:39.518" endtime="20231127 15:58:39.521"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.523" level="INFO">ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34</msg>
<msg timestamp="20231127 15:58:39.523" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.521" endtime="20231127 15:58:39.524"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.524" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe7\xad\x89\xe5\xbe\x85
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.524" endtime="20231127 15:58:39.525"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.525" level="INFO">${status} = 卓创智汇
京A12345
请等待
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.525" endtime="20231127 15:58:39.526"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:39.526" level="INFO">${line_focus} = 请等待</msg>
<status status="PASS" starttime="20231127 15:58:39.526" endtime="20231127 15:58:39.527"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:39.527" endtime="20231127 15:58:39.527"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:39.528" endtime="20231127 15:58:39.529"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.528" endtime="20231127 15:58:39.529"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.356" endtime="20231127 15:58:39.529"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:39.531" endtime="20231127 15:58:39.532"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:39.532" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:39.680" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:39 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.532" endtime="20231127 15:58:39.680"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.685" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:39.680" endtime="20231127 15:58:39.685"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.692" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:39.686" endtime="20231127 15:58:39.693"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.531" endtime="20231127 15:58:39.693"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:39.696" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:39.693" endtime="20231127 15:58:39.696"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:39.698" level="INFO">ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34</msg>
<msg timestamp="20231127 15:58:39.698" level="INFO">${status} = ååæºæ±
äº¬A12345
è¯·ç­å¾
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.696" endtime="20231127 15:58:39.698"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.699" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe8\xaf\xb7\xe7\xad\x89\xe5\xbe\x85
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.699" endtime="20231127 15:58:39.699"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:39.700" level="INFO">${status} = 卓创智汇
京A12345
请等待
2023-11-27 15:58:34
</msg>
<status status="PASS" starttime="20231127 15:58:39.700" endtime="20231127 15:58:39.700"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:39.701" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:39.700" endtime="20231127 15:58:39.701"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:39.701" endtime="20231127 15:58:39.702"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:39.703" endtime="20231127 15:58:39.703"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.702" endtime="20231127 15:58:39.704"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.530" endtime="20231127 15:58:39.704"/>
</kw>
<status status="PASS" starttime="20231127 15:58:39.530" endtime="20231127 15:58:39.704"/>
</branch>
<status status="PASS" starttime="20231127 15:58:39.530" endtime="20231127 15:58:39.704"/>
</if>
<status status="PASS" starttime="20231127 15:58:39.355" endtime="20231127 15:58:39.704"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>17s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:58:56.705" level="INFO">Slept 17 seconds</msg>
<status status="PASS" starttime="20231127 15:58:39.704" endtime="20231127 15:58:56.705"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>已完成，请下磅</arg>
<arg>${e_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:56.708" endtime="20231127 15:58:56.708"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:56.709" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:56.861" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:39 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:56.709" endtime="20231127 15:58:56.862"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:56.866" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:56.862" endtime="20231127 15:58:56.866"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:56.874" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:56.866" endtime="20231127 15:58:56.875"/>
</kw>
<status status="PASS" starttime="20231127 15:58:56.707" endtime="20231127 15:58:56.875"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:56.878" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:56.875" endtime="20231127 15:58:56.878"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:56.881" level="INFO">ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44</msg>
<msg timestamp="20231127 15:58:56.881" level="INFO">${status} = ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:56.879" endtime="20231127 15:58:56.881"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:56.882" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe5\xb7\xb2\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x8c\xe8\xaf\xb7\xe4\xb8\x8b\xe7\xa3\x85
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:56.881" endtime="20231127 15:58:56.882"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:56.883" level="INFO">${status} = 卓创智汇
京A12345
已完成，请下磅
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:56.883" endtime="20231127 15:58:56.883"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:56.884" level="INFO">${line_focus} = 已完成，请下磅</msg>
<status status="PASS" starttime="20231127 15:58:56.883" endtime="20231127 15:58:56.884"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:56.884" endtime="20231127 15:58:56.885"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:56.886" endtime="20231127 15:58:56.886"/>
</kw>
<status status="PASS" starttime="20231127 15:58:56.885" endtime="20231127 15:58:56.886"/>
</kw>
<status status="PASS" starttime="20231127 15:58:56.706" endtime="20231127 15:58:56.886"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:56.888" endtime="20231127 15:58:56.889"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:56.889" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:57.035" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:56 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:56.889" endtime="20231127 15:58:57.035"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.040" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:57.035" endtime="20231127 15:58:57.040"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.048" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.040" endtime="20231127 15:58:57.049"/>
</kw>
<status status="PASS" starttime="20231127 15:58:56.888" endtime="20231127 15:58:57.049"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.052" level="INFO">cat /tmp/bl.txt</msg>
<status status="PASS" starttime="20231127 15:58:57.050" endtime="20231127 15:58:57.053"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.055" level="INFO">ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44</msg>
<msg timestamp="20231127 15:58:57.055" level="INFO">${status} = ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.053" endtime="20231127 15:58:57.055"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.056" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe5\xb7\xb2\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x8c\xe8\xaf\xb7\xe4\xb8\x8b\xe7\xa3\x85
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.056" endtime="20231127 15:58:57.056"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.057" level="INFO">${status} = 卓创智汇
京A12345
已完成，请下磅
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.056" endtime="20231127 15:58:57.057"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:57.058" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:57.057" endtime="20231127 15:58:57.058"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:57.058" endtime="20231127 15:58:57.059"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:57.060" endtime="20231127 15:58:57.060"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.059" endtime="20231127 15:58:57.061"/>
</kw>
<status status="PASS" starttime="20231127 15:58:56.887" endtime="20231127 15:58:57.061"/>
</kw>
<status status="PASS" starttime="20231127 15:58:56.887" endtime="20231127 15:58:57.061"/>
</branch>
<status status="PASS" starttime="20231127 15:58:56.887" endtime="20231127 15:58:57.061"/>
</if>
<status status="PASS" starttime="20231127 15:58:56.705" endtime="20231127 15:58:57.061"/>
</kw>
<kw name="Verify LED with Plate" library="dev_res">
<arg>${trig_plate_no}</arg>
<arg>已完成，请下磅</arg>
<arg>${l_led}</arg>
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${content}</arg>
<arg>2</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:57.063" endtime="20231127 15:58:57.064"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:57.064" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:57.214" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:56 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.064" endtime="20231127 15:58:57.214"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.218" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:57.214" endtime="20231127 15:58:57.218"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.225" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.219" endtime="20231127 15:58:57.226"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.063" endtime="20231127 15:58:57.226"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.229" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:57.226" endtime="20231127 15:58:57.229"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.232" level="INFO">ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44</msg>
<msg timestamp="20231127 15:58:57.232" level="INFO">${status} = ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.230" endtime="20231127 15:58:57.232"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.233" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe5\xb7\xb2\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x8c\xe8\xaf\xb7\xe4\xb8\x8b\xe7\xa3\x85
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.233" endtime="20231127 15:58:57.233"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.234" level="INFO">${status} = 卓创智汇
京A12345
已完成，请下磅
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.233" endtime="20231127 15:58:57.234"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:57.235" level="INFO">${line_focus} = 已完成，请下磅</msg>
<status status="PASS" starttime="20231127 15:58:57.235" endtime="20231127 15:58:57.235"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:57.236" endtime="20231127 15:58:57.236"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:57.237" endtime="20231127 15:58:57.237"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.236" endtime="20231127 15:58:57.238"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.062" endtime="20231127 15:58:57.238"/>
</kw>
<if>
<branch type="IF" condition="$plate_no != ''">
<kw name="Verify LED Content" library="dev_res">
<arg>${dev_name}</arg>
<arg>${plate_no}</arg>
<arg>1</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:57.240" endtime="20231127 15:58:57.240"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:57.241" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:57.391" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:57 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.241" endtime="20231127 15:58:57.391"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.395" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:57.391" endtime="20231127 15:58:57.395"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.402" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.396" endtime="20231127 15:58:57.402"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.239" endtime="20231127 15:58:57.403"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.407" level="INFO">cat /tmp/fl.txt</msg>
<status status="PASS" starttime="20231127 15:58:57.403" endtime="20231127 15:58:57.407"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.410" level="INFO">ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44</msg>
<msg timestamp="20231127 15:58:57.410" level="INFO">${status} = ååæºæ±
äº¬A12345
å·²å®æï¼è¯·ä¸ç£
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.407" endtime="20231127 15:58:57.410"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.411" level="INFO">${status} = \xe5\x8d\x93\xe5\x88\x9b\xe6\x99\xba\xe6\xb1\x87
\xe4\xba\xacA12345
\xe5\xb7\xb2\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x8c\xe8\xaf\xb7\xe4\xb8\x8b\xe7\xa3\x85
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.410" endtime="20231127 15:58:57.411"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.412" level="INFO">${status} = 卓创智汇
京A12345
已完成，请下磅
2023-11-27 15:58:44
</msg>
<status status="PASS" starttime="20231127 15:58:57.411" endtime="20231127 15:58:57.412"/>
</kw>
<kw name="Get Line" library="String">
<var>${line_focus}</var>
<arg>${status}</arg>
<arg>${line_num}</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:57.413" level="INFO">${line_focus} = 京A12345</msg>
<status status="PASS" starttime="20231127 15:58:57.412" endtime="20231127 15:58:57.413"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${line_focus}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:57.413" endtime="20231127 15:58:57.414"/>
</kw>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:57.415" endtime="20231127 15:58:57.415"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.414" endtime="20231127 15:58:57.415"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.238" endtime="20231127 15:58:57.415"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.238" endtime="20231127 15:58:57.416"/>
</branch>
<status status="PASS" starttime="20231127 15:58:57.238" endtime="20231127 15:58:57.416"/>
</if>
<status status="PASS" starttime="20231127 15:58:57.061" endtime="20231127 15:58:57.416"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${l_gate}</arg>
<arg>open</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:57.418" endtime="20231127 15:58:57.418"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:57.419" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:57.567" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:57 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.418" endtime="20231127 15:58:57.567"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.571" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:57.567" endtime="20231127 15:58:57.572"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.579" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.572" endtime="20231127 15:58:57.579"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.417" endtime="20231127 15:58:57.579"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.583" level="INFO">cat /tmp/fg.txt</msg>
<status status="PASS" starttime="20231127 15:58:57.580" endtime="20231127 15:58:57.583"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.585" level="INFO">å¼é¨</msg>
<msg timestamp="20231127 15:58:57.585" level="INFO">${status} = å¼é¨
</msg>
<status status="PASS" starttime="20231127 15:58:57.583" endtime="20231127 15:58:57.585"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.586" level="INFO">${status} = \xe5\xbc\x80\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:58:57.586" endtime="20231127 15:58:57.586"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.587" level="INFO">${status} = 开门
</msg>
<status status="PASS" starttime="20231127 15:58:57.586" endtime="20231127 15:58:57.587"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:58:57.588" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:58:57.588" level="INFO">${line} = ['开门']</msg>
<status status="PASS" starttime="20231127 15:58:57.587" endtime="20231127 15:58:57.588"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:58:57.588" endtime="20231127 15:58:57.589"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:57.589" endtime="20231127 15:58:57.590"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.589" endtime="20231127 15:58:57.590"/>
</kw>
<msg timestamp="20231127 15:58:57.591" level="INFO">${status} = 开门</msg>
<status status="PASS" starttime="20231127 15:58:57.417" endtime="20231127 15:58:57.591"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:57.592" endtime="20231127 15:58:57.592"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.591" endtime="20231127 15:58:57.593"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:58:57.593" endtime="20231127 15:58:57.593"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:57.593" endtime="20231127 15:58:57.593"/>
</branch>
<status status="PASS" starttime="20231127 15:58:57.591" endtime="20231127 15:58:57.593"/>
</if>
<status status="PASS" starttime="20231127 15:58:57.416" endtime="20231127 15:58:57.594"/>
</kw>
<kw name="Verify Gate Status" library="dev_res">
<arg>${e_gate}</arg>
<arg>close</arg>
<kw name="Get Dev Status" library="dev_res">
<var>${status}</var>
<arg>${dev_name}</arg>
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:57.595" endtime="20231127 15:58:57.596"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:57.596" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:57.742" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:57 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.596" endtime="20231127 15:58:57.742"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.746" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:57.742" endtime="20231127 15:58:57.747"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.754" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.747" endtime="20231127 15:58:57.754"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.595" endtime="20231127 15:58:57.755"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>cat /tmp/${dev_name}.txt</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.758" level="INFO">cat /tmp/bg.txt</msg>
<status status="PASS" starttime="20231127 15:58:57.755" endtime="20231127 15:58:57.758"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${status}</var>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.760" level="INFO">å³é¨</msg>
<msg timestamp="20231127 15:58:57.760" level="INFO">${status} = å³é¨
</msg>
<status status="PASS" starttime="20231127 15:58:57.758" endtime="20231127 15:58:57.760"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.761" level="INFO">${status} = \xe5\x85\xb3\xe9\x97\xa8
</msg>
<status status="PASS" starttime="20231127 15:58:57.760" endtime="20231127 15:58:57.762"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${status}</var>
<arg>${status}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.763" level="INFO">${status} = 关门
</msg>
<status status="PASS" starttime="20231127 15:58:57.763" endtime="20231127 15:58:57.763"/>
</kw>
<kw name="Split To Lines" library="String">
<var>${line}</var>
<arg>${status}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20231127 15:58:57.764" level="INFO">1 lines returned</msg>
<msg timestamp="20231127 15:58:57.764" level="INFO">${line} = ['关门']</msg>
<status status="PASS" starttime="20231127 15:58:57.763" endtime="20231127 15:58:57.764"/>
</kw>
<return>
<value>${line}[0]</value>
<status status="PASS" starttime="20231127 15:58:57.764" endtime="20231127 15:58:57.765"/>
</return>
<kw name="DisConnect" library="cli_res" type="TEARDOWN">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:57.765" endtime="20231127 15:58:57.766"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.765" endtime="20231127 15:58:57.766"/>
</kw>
<msg timestamp="20231127 15:58:57.766" level="INFO">${status} = 关门</msg>
<status status="PASS" starttime="20231127 15:58:57.594" endtime="20231127 15:58:57.766"/>
</kw>
<if>
<branch type="IF" condition="$expect == 'open'">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>开门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20231127 15:58:57.767" endtime="20231127 15:58:57.767"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:58:57.767" endtime="20231127 15:58:57.767"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>关门</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:58:57.768" endtime="20231127 15:58:57.769"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.768" endtime="20231127 15:58:57.769"/>
</branch>
<status status="PASS" starttime="20231127 15:58:57.767" endtime="20231127 15:58:57.769"/>
</if>
<status status="PASS" starttime="20231127 15:58:57.594" endtime="20231127 15:58:57.769"/>
</kw>
<kw name="Set Scale Weight" library="dev_res">
<arg>0</arg>
<arg>${s_s}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:57.771" endtime="20231127 15:58:57.772"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:57.772" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:57.917" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:57 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.772" endtime="20231127 15:58:57.918"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.922" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:57.918" endtime="20231127 15:58:57.922"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.929" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:57.922" endtime="20231127 15:58:57.929"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.771" endtime="20231127 15:58:57.929"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:57.930" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:57.930" endtime="20231127 15:58:57.930"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.934" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:57.931" endtime="20231127 15:58:57.934"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:57.934" endtime="20231127 15:58:57.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:57.940" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:57.940" endtime="20231127 15:58:57.941"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:57.941" endtime="20231127 15:58:57.942"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:57.942" endtime="20231127 15:58:57.943"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:57.943" endtime="20231127 15:58:57.943"/>
</return>
<status status="PASS" starttime="20231127 15:58:57.929" endtime="20231127 15:58:57.944"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.770" endtime="20231127 15:58:57.944"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:57.945" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:57.945" endtime="20231127 15:58:57.945"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.948" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:57.945" endtime="20231127 15:58:57.948"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:57.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:57.948" endtime="20231127 15:58:57.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:57.949" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:57.949" endtime="20231127 15:58:57.950"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:57.950" endtime="20231127 15:58:57.950"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:57.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:57.951" endtime="20231127 15:58:57.951"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:57.951" endtime="20231127 15:58:57.952"/>
</return>
<status status="PASS" starttime="20231127 15:58:57.944" endtime="20231127 15:58:57.952"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:57.953" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:57.953" endtime="20231127 15:58:57.953"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:57.956" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:57.953" endtime="20231127 15:58:57.956"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.565" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:58:58.565" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:57.956" endtime="20231127 15:58:58.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.566" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:58:58.565" endtime="20231127 15:58:58.566"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.566" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:58.566" endtime="20231127 15:58:58.567"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.567" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:58.567" endtime="20231127 15:58:58.567"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:58.567" endtime="20231127 15:58:58.567"/>
</return>
<msg timestamp="20231127 15:58:58.568" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:57.952" endtime="20231127 15:58:58.568"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:58:58.569" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:58:58.569" level="INFO">${lines} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:58:58.568" endtime="20231127 15:58:58.569"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:58.569" level="INFO">${line} = |    |      | 170:ss  |</msg>
<status status="PASS" starttime="20231127 15:58:58.569" endtime="20231127 15:58:58.570"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:58:58.570" level="INFO">${line_array} = ['|    |      | 170', 'ss  |']</msg>
<status status="PASS" starttime="20231127 15:58:58.570" endtime="20231127 15:58:58.570"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:58:58.571" level="INFO">${dev_name_array} = ['|', '|', '|', '170']</msg>
<status status="PASS" starttime="20231127 15:58:58.570" endtime="20231127 15:58:58.571"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:58.572" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:58:58.572" endtime="20231127 15:58:58.573"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:58.573" endtime="20231127 15:58:58.574"/>
</kw>
<status status="PASS" starttime="20231127 15:58:58.573" endtime="20231127 15:58:58.574"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:58:58.575" endtime="20231127 15:58:58.575"/>
</return>
<msg timestamp="20231127 15:58:58.576" level="INFO">${dev_id} = 170</msg>
<status status="PASS" starttime="20231127 15:58:57.770" endtime="20231127 15:58:58.576"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:58.578" endtime="20231127 15:58:58.580"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:58.581" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:58.729" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:57 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:58.580" endtime="20231127 15:58:58.729"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.733" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:58.729" endtime="20231127 15:58:58.733"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.740" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:58.733" endtime="20231127 15:58:58.740"/>
</kw>
<status status="PASS" starttime="20231127 15:58:58.577" endtime="20231127 15:58:58.740"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.742" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:58.742" endtime="20231127 15:58:58.742"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.745" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:58.742" endtime="20231127 15:58:58.746"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.746" endtime="20231127 15:58:58.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.751" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:58.751" endtime="20231127 15:58:58.751"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.752" endtime="20231127 15:58:58.752"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.752" endtime="20231127 15:58:58.753"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:58.754" endtime="20231127 15:58:58.754"/>
</return>
<status status="PASS" starttime="20231127 15:58:58.741" endtime="20231127 15:58:58.754"/>
</kw>
<status status="PASS" starttime="20231127 15:58:58.576" endtime="20231127 15:58:58.754"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.755" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:58.755" endtime="20231127 15:58:58.756"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.759" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:58.756" endtime="20231127 15:58:58.759"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.759" endtime="20231127 15:58:58.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.761" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:58.760" endtime="20231127 15:58:58.761"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.761" endtime="20231127 15:58:58.762"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.762" endtime="20231127 15:58:58.762"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:58.763" endtime="20231127 15:58:58.763"/>
</return>
<status status="PASS" starttime="20231127 15:58:58.754" endtime="20231127 15:58:58.763"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} scale ${weight}</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.764" level="INFO">mock_device_action 170 scale 0</msg>
<status status="PASS" starttime="20231127 15:58:58.764" endtime="20231127 15:58:58.764"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.767" level="INFO">mock_device_action 170 scale 0</msg>
<status status="PASS" starttime="20231127 15:58:58.765" endtime="20231127 15:58:58.767"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.767" endtime="20231127 15:58:58.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.776" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:58.775" endtime="20231127 15:58:58.776"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.776" endtime="20231127 15:58:58.777"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.777" endtime="20231127 15:58:58.778"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:58.778" endtime="20231127 15:58:58.779"/>
</return>
<status status="PASS" starttime="20231127 15:58:58.763" endtime="20231127 15:58:58.779"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:58.780" endtime="20231127 15:58:58.780"/>
</kw>
<status status="PASS" starttime="20231127 15:58:58.779" endtime="20231127 15:58:58.780"/>
</kw>
<status status="PASS" starttime="20231127 15:58:57.769" endtime="20231127 15:58:58.781"/>
</kw>
<kw name="Gate Close" library="dev_res">
<arg>${l_gate}</arg>
<kw name="Get Dev ID by Name" library="dev_res">
<var>${dev_id}</var>
<arg>dev_name=${dev_name}</arg>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:58.783" endtime="20231127 15:58:58.784"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:58.784" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:58.928" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:58 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:58.784" endtime="20231127 15:58:58.929"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.933" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:58.929" endtime="20231127 15:58:58.933"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.940" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:58.933" endtime="20231127 15:58:58.940"/>
</kw>
<status status="PASS" starttime="20231127 15:58:58.782" endtime="20231127 15:58:58.940"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.942" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:58.941" endtime="20231127 15:58:58.942"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.945" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:58.942" endtime="20231127 15:58:58.945"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.946" endtime="20231127 15:58:58.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.951" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:58.951" endtime="20231127 15:58:58.951"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.952" endtime="20231127 15:58:58.952"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.952" endtime="20231127 15:58:58.953"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:58.953" endtime="20231127 15:58:58.953"/>
</return>
<status status="PASS" starttime="20231127 15:58:58.941" endtime="20231127 15:58:58.954"/>
</kw>
<status status="PASS" starttime="20231127 15:58:58.782" endtime="20231127 15:58:58.954"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.955" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:58.955" endtime="20231127 15:58:58.955"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.958" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:58.955" endtime="20231127 15:58:58.958"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:58.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.959" endtime="20231127 15:58:58.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.960" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:58.960" endtime="20231127 15:58:58.960"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.960" endtime="20231127 15:58:58.961"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:58.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:58.961" endtime="20231127 15:58:58.962"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:58.962" endtime="20231127 15:58:58.962"/>
</return>
<status status="PASS" starttime="20231127 15:58:58.954" endtime="20231127 15:58:58.962"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<var>${all_dev_out}</var>
<arg>show_device_scale</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:58.963" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:58.963" endtime="20231127 15:58:58.964"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:58.966" level="INFO">show_device_scale</msg>
<status status="PASS" starttime="20231127 15:58:58.964" endtime="20231127 15:58:58.966"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:59.531" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+</msg>
<msg timestamp="20231127 15:58:59.531" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:58.966" endtime="20231127 15:58:59.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:59.532" level="INFO">+----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
|    |      | 168:fg  |
|    |      | 169:bg  |
|    |      | 165:fi  |
|    |      | 166:bi  |
|    |      | 170:ss  |
+----+------+---------+
</msg>
<status status="PASS" starttime="20231127 15:58:59.532" endtime="20231127 15:58:59.532"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.533" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:59.532" endtime="20231127 15:58:59.533"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.533" level="INFO">${output} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:59.533" endtime="20231127 15:58:59.533"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:59.534" endtime="20231127 15:58:59.534"/>
</return>
<msg timestamp="20231127 15:58:59.534" level="INFO">${all_dev_out} = +----+------+---------+
| ID | name | devices |
+----+------+---------+
| 17 | s    | 161:fpc |
|    |      | 162:bpc |
|    |      | 163:fl  |
|    |      | 164:bl  |
|    |      | 167:fs  |
...</msg>
<status status="PASS" starttime="20231127 15:58:58.963" endtime="20231127 15:58:59.534"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${lines}</var>
<arg>${all_dev_out}</arg>
<arg>${dev_name}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231127 15:58:59.535" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231127 15:58:59.535" level="INFO">${lines} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:58:59.534" endtime="20231127 15:58:59.535"/>
</kw>
<kw name="Get Line" library="String">
<var>${line}</var>
<arg>${lines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231127 15:58:59.535" level="INFO">${line} = |    |      | 168:fg  |</msg>
<status status="PASS" starttime="20231127 15:58:59.535" endtime="20231127 15:58:59.536"/>
</kw>
<kw name="Split String" library="String">
<var>${line_array}</var>
<arg>${line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 15:58:59.536" level="INFO">${line_array} = ['|    |      | 168', 'fg  |']</msg>
<status status="PASS" starttime="20231127 15:58:59.536" endtime="20231127 15:58:59.536"/>
</kw>
<kw name="Split String From Right" library="String">
<var>${dev_name_array}</var>
<arg>${line_array[0]}</arg>
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<msg timestamp="20231127 15:58:59.537" level="INFO">${dev_name_array} = ['|', '|', '|', '168']</msg>
<status status="PASS" starttime="20231127 15:58:59.536" endtime="20231127 15:58:59.537"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dev_id}</var>
<arg>${dev_name_array[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 15:58:59.538" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:58:59.538" endtime="20231127 15:58:59.538"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:59.539" endtime="20231127 15:58:59.540"/>
</kw>
<status status="PASS" starttime="20231127 15:58:59.539" endtime="20231127 15:58:59.540"/>
</kw>
<return>
<value>${dev_id}</value>
<status status="PASS" starttime="20231127 15:58:59.540" endtime="20231127 15:58:59.541"/>
</return>
<msg timestamp="20231127 15:58:59.541" level="INFO">${dev_id} = 168</msg>
<status status="PASS" starttime="20231127 15:58:58.781" endtime="20231127 15:58:59.542"/>
</kw>
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:58:59.543" endtime="20231127 15:58:59.545"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:58:59.545" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:58:59.699" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:58 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:59.545" endtime="20231127 15:58:59.699"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:59.703" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:58:59.699" endtime="20231127 15:58:59.703"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:59.710" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:58:59.704" endtime="20231127 15:58:59.711"/>
</kw>
<status status="PASS" starttime="20231127 15:58:59.543" endtime="20231127 15:58:59.711"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:59.712" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:59.712" endtime="20231127 15:58:59.712"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:59.716" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:58:59.712" endtime="20231127 15:58:59.716"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:59.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.716" endtime="20231127 15:58:59.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:59.722" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:59.721" endtime="20231127 15:58:59.722"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.722" endtime="20231127 15:58:59.723"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.723" endtime="20231127 15:58:59.724"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:59.724" endtime="20231127 15:58:59.724"/>
</return>
<status status="PASS" starttime="20231127 15:58:59.711" endtime="20231127 15:58:59.724"/>
</kw>
<status status="PASS" starttime="20231127 15:58:59.542" endtime="20231127 15:58:59.724"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:59.726" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:59.725" endtime="20231127 15:58:59.726"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:59.729" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:58:59.726" endtime="20231127 15:58:59.729"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:59.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.729" endtime="20231127 15:58:59.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:59.731" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:59.730" endtime="20231127 15:58:59.731"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.731" endtime="20231127 15:58:59.732"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.732" endtime="20231127 15:58:59.732"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:59.733" endtime="20231127 15:58:59.733"/>
</return>
<status status="PASS" starttime="20231127 15:58:59.725" endtime="20231127 15:58:59.733"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>mock_device_action ${dev_id} gate</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:59.734" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:58:59.734" endtime="20231127 15:58:59.734"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:58:59.737" level="INFO">mock_device_action 168 gate</msg>
<status status="PASS" starttime="20231127 15:58:59.735" endtime="20231127 15:58:59.738"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:58:59.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.738" endtime="20231127 15:58:59.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:58:59.746" level="INFO"/>
<status status="PASS" starttime="20231127 15:58:59.745" endtime="20231127 15:58:59.746"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.746" endtime="20231127 15:58:59.747"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:58:59.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:58:59.747" endtime="20231127 15:58:59.748"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:58:59.748" endtime="20231127 15:58:59.748"/>
</return>
<status status="PASS" starttime="20231127 15:58:59.733" endtime="20231127 15:58:59.749"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:58:59.749" endtime="20231127 15:58:59.750"/>
</kw>
<status status="PASS" starttime="20231127 15:58:59.749" endtime="20231127 15:58:59.750"/>
</kw>
<status status="PASS" starttime="20231127 15:58:58.781" endtime="20231127 15:58:59.750"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 15:59:04.753" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231127 15:58:59.750" endtime="20231127 15:59:04.753"/>
</kw>
<status status="PASS" starttime="20231127 15:58:25.204" endtime="20231127 15:59:04.754"/>
</kw>
<kw name="Check Order Status" library="order_opt">
<arg>${order_number}</arg>
<arg>close</arg>
<kw name="Get Order By Order Number Exist" library="order_opt">
<var>${found_order}</var>
<arg>order_number=${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${search_condition}</var>
<arg>order_number=${order_number}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:59:04.758" level="INFO">${search_condition} = {'order_number': '1701071858109'}</msg>
<status status="PASS" starttime="20231127 15:59:04.757" endtime="20231127 15:59:04.759"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<var>${search_result}</var>
<arg>/order/get</arg>
<arg>${search_condition}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<status status="NOT RUN" starttime="20231127 15:59:04.761" endtime="20231127 15:59:04.761"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.761" endtime="20231127 15:59:04.762"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:59:04.762" endtime="20231127 15:59:04.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.762" endtime="20231127 15:59:04.763"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:59:04.763" endtime="20231127 15:59:04.763"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:59:04.764" endtime="20231127 15:59:04.764"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:59:04.763" endtime="20231127 15:59:04.764"/>
</branch>
<status status="NOT RUN" starttime="20231127 15:59:04.763" endtime="20231127 15:59:04.764"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.764" endtime="20231127 15:59:04.765"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.765" endtime="20231127 15:59:04.765"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:59:04.760" endtime="20231127 15:59:04.765"/>
</branch>
<status status="PASS" starttime="20231127 15:59:04.760" endtime="20231127 15:59:04.765"/>
</if>
<status status="PASS" starttime="20231127 15:59:04.760" endtime="20231127 15:59:04.766"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:59:04.767" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:59:04.767" endtime="20231127 15:59:04.768"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:59:04.768" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:59:04.768" endtime="20231127 15:59:04.768"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:59:04.769" level="INFO">Length is 1</msg>
<msg timestamp="20231127 15:59:04.769" level="INFO">${req_len} = 1</msg>
<status status="PASS" starttime="20231127 15:59:04.769" endtime="20231127 15:59:04.769"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:59:04.770" level="INFO">${req_json} = {'order_number': '1701071858109'}</msg>
<status status="PASS" starttime="20231127 15:59:04.770" endtime="20231127 15:59:04.770"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:59:04.800" level="INFO">POST Request : url=http://localhost:31700/api/order/get 
 path_url=/api/order/get 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '33', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "1701071858109"}' 
 </msg>
<msg timestamp="20231127 15:59:04.800" level="INFO">POST Response : url=http://localhost:31700/api/order/get 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:59:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1278', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"4fe-FjMvMG6F5Q3KnIREzqVelvNceAU"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":{"id":109,"order_number":"1701071858109","plate_number":"京A12345","back_plate_number":"","driver_name":"张三","driver_id":"123456789012345678","driver_phone":"18811111111","stuff_name":"LNG","p_weight":20.23,"m_weight":49.21,"enter_weight":0,"reg_info":{"operator_name":"abc","operator_time":"2023-11-27 15:57:40"},"call_info":{"operator_name":"(自动)","operator_time":"2023-11-27 15:57:40"},"confirm_info":{"operator_name":"abc","operator_time":"2023-11-27 15:58:25"},"seal_no":"","history_records":[{"node_name":"一次称重","node_caller":"自动","occour_time":"2023-11-27 15:58:08","id":67},{"node_name":"二次称重","node_caller":"自动","occour_time":"2023-11-27 15:58:44","id":68}],"order_attachs":[{"att_name":"上磅照片","att_path":"/files/A80F3A4DACC7457EA191BA856045D386.txt","id":211},{"att_name":"过磅录像","att_path":"","id":212},{"att_name":"过磅录像","att_path":"","id":213},{"att_name":"上磅照片","att_path":"/files/615094D4BB1147318FAFCA056CFE2EF5.txt","id":214},{"att_name":"过磅录像","att_path":"","id":215},{"att_name":"过磅录像","att_path":"","id":216}],"p_time":"2023-11-27 15:58:08","m_time":"2023-11-27 15:58:44","is_sale":false,"status":100,"company_name":"京东","stuff_from":"","reg_no":102}} 
 </msg>
<msg timestamp="20231127 15:59:04.801" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.771" endtime="20231127 15:59:04.801"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:59:04.801" endtime="20231127 15:59:04.802"/>
</return>
<msg timestamp="20231127 15:59:04.802" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.766" endtime="20231127 15:59:04.802"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:59:04.803" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:59:04.802" endtime="20231127 15:59:04.804"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:59:04.804" endtime="20231127 15:59:04.804"/>
</return>
<msg timestamp="20231127 15:59:04.805" level="INFO">${search_result} = {'id': 109, 'order_number': '1701071858109', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '张三', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'L...</msg>
<status status="PASS" starttime="20231127 15:59:04.759" endtime="20231127 15:59:04.805"/>
</kw>
<return>
<value>${search_result}</value>
<status status="PASS" starttime="20231127 15:59:04.806" endtime="20231127 15:59:04.806"/>
</return>
<msg timestamp="20231127 15:59:04.806" level="INFO">${found_order} = {'id': 109, 'order_number': '1701071858109', 'plate_number': '京A12345', 'back_plate_number': '', 'driver_name': '张三', 'driver_id': '123456789012345678', 'driver_phone': '18811111111', 'stuff_name': 'L...</msg>
<status status="PASS" starttime="20231127 15:59:04.756" endtime="20231127 15:59:04.806"/>
</kw>
<if>
<branch type="IF" condition="$open_or_close == 'open'">
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.807" endtime="20231127 15:59:04.807"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:59:04.806" endtime="20231127 15:59:04.807"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${found_order}[status]</arg>
<arg>100</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231127 15:59:04.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.808" endtime="20231127 15:59:04.809"/>
</kw>
<status status="PASS" starttime="20231127 15:59:04.807" endtime="20231127 15:59:04.809"/>
</branch>
<status status="PASS" starttime="20231127 15:59:04.806" endtime="20231127 15:59:04.809"/>
</if>
<status status="PASS" starttime="20231127 15:59:04.755" endtime="20231127 15:59:04.809"/>
</kw>
<kw name="Check Weight Push" library="field_opt">
<arg>${plate_no}</arg>
<arg>${p_weight}</arg>
<arg>${m_weight}</arg>
<kw name="Get Last Req" library="rest_res">
<var>${api_sent}</var>
<kw name="GET" library="RequestsLibrary">
<var>${result}</var>
<arg>url=http://localhost:5001/check_call</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20231127 15:59:04.815" level="INFO">GET Request : url=http://localhost:5001/check_call 
 path_url=/check_call 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231127 15:59:04.815" level="INFO">GET Response : url=http://localhost:5001/check_call 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/3.0.1 Python/3.9.6', 'Date': 'Mon, 27 Nov 2023 07:59:04 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '253', 'Connection': 'close'} 
 body={"path": "/pa_web/pa_rest/push_weight", "req": {"id": "123456", "plateNo": "\u4eacA12345", "pWeight": 20.23, "mWeight": 49.21, "jWeight": 28.98, "pTime": "2023-11-27 15:58:08", "mTime": "2023-11-27 15:58:44", "ticketNo": "WR202311270034", "sealNo": ""}} 
 </msg>
<msg timestamp="20231127 15:59:04.815" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.811" endtime="20231127 15:59:04.816"/>
</kw>
<return>
<value>${result.json()}[req]</value>
<status status="PASS" starttime="20231127 15:59:04.816" endtime="20231127 15:59:04.816"/>
</return>
<msg timestamp="20231127 15:59:04.817" level="INFO">${api_sent} = {'id': '123456', 'plateNo': '京A12345', 'pWeight': 20.23, 'mWeight': 49.21, 'jWeight': 28.98, 'pTime': '2023-11-27 15:58:08', 'mTime': '2023-11-27 15:58:44', 'ticketNo': 'WR202311270034', 'sealNo': ''}</msg>
<status status="PASS" starttime="20231127 15:59:04.810" endtime="20231127 15:59:04.817"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${api_sent}[plateNo]</arg>
<arg>${plate_no}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231127 15:59:04.818" endtime="20231127 15:59:04.818"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${api_sent}[pWeight]</arg>
<arg>${p_weight}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231127 15:59:04.819" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.819" endtime="20231127 15:59:04.819"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${api_sent}[mWeight]</arg>
<arg>${m_weight}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231127 15:59:04.820" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.820" endtime="20231127 15:59:04.820"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${expect_date}</var>
<arg>result_format=%Y%m%d</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231127 15:59:04.821" level="INFO">${expect_date} = 20231127</msg>
<status status="PASS" starttime="20231127 15:59:04.821" endtime="20231127 15:59:04.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${api_sent}[ticketNo]</arg>
<arg>WR${expect_date}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231127 15:59:04.822" endtime="20231127 15:59:04.822"/>
</kw>
<status status="PASS" starttime="20231127 15:59:04.810" endtime="20231127 15:59:04.823"/>
</kw>
<kw name="Del Order" library="order_opt" type="TEARDOWN">
<arg>${order_number}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${del_req}</var>
<arg>order_number=${order_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:59:04.824" level="INFO">${del_req} = {'order_number': '1701071858109'}</msg>
<status status="PASS" starttime="20231127 15:59:04.824" endtime="20231127 15:59:04.824"/>
</kw>
<kw name="POST to Server Success" library="rest_res">
<arg>/order/del</arg>
<arg>${del_req}</arg>
<kw name="Auth Api With Max Pri" library="rest_res">
<if>
<branch type="IF" condition="$token == ''">
<kw name="Get Max Pri User" library="cli_res">
<var>${user_phone}</var>
<var>${user_pwd}</var>
<status status="NOT RUN" starttime="20231127 15:59:04.827" endtime="20231127 15:59:04.827"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${login_data}</var>
<arg>phone=${user_phone}</arg>
<arg>pwd=${user_pwd}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.827" endtime="20231127 15:59:04.827"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:59:04.828" endtime="20231127 15:59:04.828"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${login_msg}</var>
<arg>${login_resp.json()}[err_msg]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.828" endtime="20231127 15:59:04.828"/>
</kw>
<if>
<branch type="IF" condition="$login_msg != ''">
<kw name="Create Max Pri User" library="cli_res">
<status status="NOT RUN" starttime="20231127 15:59:04.829" endtime="20231127 15:59:04.829"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${login_resp}</var>
<arg>/login</arg>
<arg>${login_data}</arg>
<status status="NOT RUN" starttime="20231127 15:59:04.829" endtime="20231127 15:59:04.829"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:59:04.828" endtime="20231127 15:59:04.829"/>
</branch>
<status status="NOT RUN" starttime="20231127 15:59:04.828" endtime="20231127 15:59:04.829"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${token_resp}</var>
<arg>${login_resp.json()}[result]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.830" endtime="20231127 15:59:04.830"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<arg>${token_resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231127 15:59:04.830" endtime="20231127 15:59:04.830"/>
</kw>
<status status="NOT RUN" starttime="20231127 15:59:04.826" endtime="20231127 15:59:04.830"/>
</branch>
<status status="PASS" starttime="20231127 15:59:04.826" endtime="20231127 15:59:04.830"/>
</if>
<status status="PASS" starttime="20231127 15:59:04.825" endtime="20231127 15:59:04.831"/>
</kw>
<kw name="POST to Server Try" library="rest_res">
<var>${resp}</var>
<arg>${url}</arg>
<arg>${req_dic}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:59:04.832" level="INFO">${header} = {'token': '6562763668CC4E93AAFB5CB148CD3984'}</msg>
<status status="PASS" starttime="20231127 15:59:04.831" endtime="20231127 15:59:04.832"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${emp_json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231127 15:59:04.833" level="INFO">${emp_json} = {}</msg>
<status status="PASS" starttime="20231127 15:59:04.832" endtime="20231127 15:59:04.833"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${req_len}</var>
<arg>${req_dic}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 15:59:04.834" level="INFO">Length is 1</msg>
<msg timestamp="20231127 15:59:04.834" level="INFO">${req_len} = 1</msg>
<status status="PASS" starttime="20231127 15:59:04.833" endtime="20231127 15:59:04.834"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${req_json}</var>
<arg>${req_len} == 0</arg>
<arg>${emp_json}</arg>
<arg>${req_dic}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231127 15:59:04.835" level="INFO">${req_json} = {'order_number': '1701071858109'}</msg>
<status status="PASS" starttime="20231127 15:59:04.834" endtime="20231127 15:59:04.835"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${resp}</var>
<arg>url=${BASE_URL}${url}</arg>
<arg>json=${req_json}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20231127 15:59:04.870" level="INFO">POST Request : url=http://localhost:31700/api/order/del 
 path_url=/api/order/del 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': '6562763668CC4E93AAFB5CB148CD3984', 'Content-Length': '33', 'Content-Type': 'application/json'} 
 body=b'{"order_number": "1701071858109"}' 
 </msg>
<msg timestamp="20231127 15:59:04.870" level="INFO">POST Response : url=http://localhost:31700/api/order/del 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.18.0 (Ubuntu)', 'Date': 'Mon, 27 Nov 2023 07:59:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '28', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"1c-stdsPPIu34FoALg9qV0iGdRzCQ4"', 'Access-Control-Allow-Headers': 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With, X-Data-Type,X-Auth-Token,token', 'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,HEAD,PUT', 'Access-Control-Allow-Credentials': 'true'} 
 body={"err_msg":"","result":true} 
 </msg>
<msg timestamp="20231127 15:59:04.871" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.835" endtime="20231127 15:59:04.871"/>
</kw>
<return>
<value>${resp}</value>
<status status="PASS" starttime="20231127 15:59:04.871" endtime="20231127 15:59:04.871"/>
</return>
<msg timestamp="20231127 15:59:04.872" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231127 15:59:04.831" endtime="20231127 15:59:04.872"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}[err_msg]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231127 15:59:04.874" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231127 15:59:04.872" endtime="20231127 15:59:04.874"/>
</kw>
<return>
<value>${resp.json()}[result]</value>
<status status="PASS" starttime="20231127 15:59:04.874" endtime="20231127 15:59:04.875"/>
</return>
<status status="PASS" starttime="20231127 15:59:04.825" endtime="20231127 15:59:04.876"/>
</kw>
<status status="PASS" starttime="20231127 15:59:04.823" endtime="20231127 15:59:04.876"/>
</kw>
<status status="PASS" starttime="20231127 15:57:38.605" endtime="20231127 15:59:04.877"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Clear Dev Config</arg>
<arg>AND</arg>
<arg>Stop Mock Service</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Clear Dev Config" library="dev_res">
<kw name="Connect ZH" library="cli_res">
<kw name="Connect SH" library="cli_res">
<kw name="Open Connection" library="SSHLibrary">
<arg>localhost</arg>
<arg>prompt=REGEXP:.*[&gt;#]$</arg>
<arg>port=8222</arg>
<arg>escape_ansi=True</arg>
<arg>term_type=vt100</arg>
<arg>timeout=9s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231127 15:59:04.879" endtime="20231127 15:59:04.880"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>root</arg>
<arg>P@ssw0rd</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231127 15:59:04.881" level="INFO">Logging into 'localhost:8222' as 'root'.</msg>
<msg timestamp="20231127 15:59:05.028" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.10.47-linuxkit x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Mon Nov 27 15:58:59 2023 from 172.17.0.1
root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:59:04.880" endtime="20231127 15:59:05.029"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>source ~/.bashrc</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:59:05.033" level="INFO">source ~/.bashrc</msg>
<status status="PASS" starttime="20231127 15:59:05.029" endtime="20231127 15:59:05.033"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:59:05.041" level="INFO">root@6b5a48235c89:~#</msg>
<status status="PASS" starttime="20231127 15:59:05.034" endtime="20231127 15:59:05.041"/>
</kw>
<status status="PASS" starttime="20231127 15:59:04.879" endtime="20231127 15:59:05.041"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>zh_cli -d</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:59:05.043" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:59:05.042" endtime="20231127 15:59:05.043"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:59:05.046" level="INFO">zh_cli -d</msg>
<status status="PASS" starttime="20231127 15:59:05.043" endtime="20231127 15:59:05.046"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:59:05.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.046" endtime="20231127 15:59:05.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:59:05.051" level="INFO"/>
<status status="PASS" starttime="20231127 15:59:05.051" endtime="20231127 15:59:05.051"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:59:05.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.051" endtime="20231127 15:59:05.052"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:59:05.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.052" endtime="20231127 15:59:05.053"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:59:05.053" endtime="20231127 15:59:05.053"/>
</return>
<status status="PASS" starttime="20231127 15:59:05.042" endtime="20231127 15:59:05.054"/>
</kw>
<status status="PASS" starttime="20231127 15:59:04.879" endtime="20231127 15:59:05.054"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:59:05.055" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:59:05.055" endtime="20231127 15:59:05.055"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:59:05.058" level="INFO">device</msg>
<status status="PASS" starttime="20231127 15:59:05.056" endtime="20231127 15:59:05.059"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:59:05.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.059" endtime="20231127 15:59:05.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:59:05.061" level="INFO"/>
<status status="PASS" starttime="20231127 15:59:05.060" endtime="20231127 15:59:05.061"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:59:05.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.061" endtime="20231127 15:59:05.062"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:59:05.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.062" endtime="20231127 15:59:05.063"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:59:05.063" endtime="20231127 15:59:05.063"/>
</return>
<status status="PASS" starttime="20231127 15:59:05.054" endtime="20231127 15:59:05.063"/>
</kw>
<kw name="Run ZH Cmd" library="cli_res">
<arg>clear_device</arg>
<kw name="Log" library="BuiltIn">
<arg>${cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:59:05.064" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231127 15:59:05.064" endtime="20231127 15:59:05.065"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>${cmd}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20231127 15:59:05.067" level="INFO">clear_device</msg>
<status status="PASS" starttime="20231127 15:59:05.065" endtime="20231127 15:59:05.068"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<arg>loglevel=INFO</arg>
<arg>strip_prompt=True</arg>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20231127 15:59:05.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.068" endtime="20231127 15:59:05.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:59:05.301" level="INFO"/>
<status status="PASS" starttime="20231127 15:59:05.301" endtime="20231127 15:59:05.301"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>iso-8859-1</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20231127 15:59:05.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.301" endtime="20231127 15:59:05.302"/>
</kw>
<kw name="Decode Bytes To String" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>UTF-8</arg>
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<msg timestamp="20231127 15:59:05.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231127 15:59:05.302" endtime="20231127 15:59:05.303"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" starttime="20231127 15:59:05.303" endtime="20231127 15:59:05.303"/>
</return>
<status status="PASS" starttime="20231127 15:59:05.063" endtime="20231127 15:59:05.304"/>
</kw>
<kw name="DisConnect" library="cli_res">
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20231127 15:59:05.304" endtime="20231127 15:59:05.305"/>
</kw>
<status status="PASS" starttime="20231127 15:59:05.304" endtime="20231127 15:59:05.305"/>
</kw>
<status status="PASS" starttime="20231127 15:59:04.878" endtime="20231127 15:59:05.305"/>
</kw>
<kw name="Stop Mock Service" library="rest_res">
<kw name="Terminate Process" library="Process">
<arg>mock_server_process</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20231127 15:59:05.306" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20231127 15:59:05.408" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20231127 15:59:05.306" endtime="20231127 15:59:05.408"/>
</kw>
<kw name="Get Process Result" library="Process">
<var>${output}</var>
<arg>mock_server_process</arg>
<arg>stderr=True</arg>
<doc>Returns the specified `result object` or some of its attributes.</doc>
<msg timestamp="20231127 15:59:05.410" level="INFO">${output} = [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1...</msg>
<status status="PASS" starttime="20231127 15:59:05.409" endtime="20231127 15:59:05.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231127 15:59:05.411" level="INFO">[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://26.26.26.1:5001
[33mPress CTRL+C to quit[0m
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 633-514-262
192.168.0.11 - - [27/Nov/2023 15:57:44] "POST /pa_web/pa_rest/call_vehicle?token=abc HTTP/1.1" 200 -
127.0.0.1 - - [27/Nov/2023 15:57:46] "GET /check_call HTTP/1.1" 200 -
192.168.0.11 - - [27/Nov/2023 15:58:44] "POST /pa_web/pa_rest/vehicle_info?token=abc HTTP/1.1" 200 -
192.168.0.11 - - [27/Nov/2023 15:58:48] "POST /pa_web/pa_rest/push_weight?token=abc HTTP/1.1" 200 -
127.0.0.1 - - [27/Nov/2023 15:59:04] "GET /check_call HTTP/1.1" 200 -</msg>
<status status="PASS" starttime="20231127 15:59:05.411" endtime="20231127 15:59:05.411"/>
</kw>
<status status="PASS" starttime="20231127 15:59:05.305" endtime="20231127 15:59:05.412"/>
</kw>
<status status="PASS" starttime="20231127 15:59:04.878" endtime="20231127 15:59:05.412"/>
</kw>
<status status="PASS" starttime="20231127 15:57:29.477" endtime="20231127 15:59:05.412"/>
</suite>
<status status="PASS" starttime="20231127 15:57:29.474" endtime="20231127 15:59:05.415"/>
</suite>
<status status="PASS" starttime="20231127 15:57:29.472" endtime="20231127 15:59:05.417"/>
</suite>
<status status="PASS" starttime="20231127 15:57:29.409" endtime="20231127 15:59:05.419"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Zhuochuangzhihui">Zhuochuangzhihui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Auto">Zhuochuangzhihui.Auto</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Test Running">Zhuochuangzhihui.Auto.Test Running</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Postive Test">Zhuochuangzhihui.Auto.Test Running.Postive Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
